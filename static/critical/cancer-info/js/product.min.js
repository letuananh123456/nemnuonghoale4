function CheckoutController($scope,$rootScope,CommonServicePreQuotesTerm,$timeout,CommonServiceTerm,$filter,$localStorage,$cookies,$location,ProductService,$http,$cookieStore,$window){function isEmpty(obj){for(var key in obj)if(obj.hasOwnProperty(key))return!1;return!0}$rootScope.pageClass="checkout",$rootScope.fromApp=!(!$location.$$search.rSource||"pbmobileapp"!=$location.$$search.rSource.toLowerCase()),$scope.hideObject={buyLoader:!0,showRedirectionError:!0,details:!1,fullPageLoader:!1,showBiButton:!0};var monthPrem=$location.$$search.premiumType||$cookies.get("monthPrem");$scope.quotesObj={isMonthly:void 0===monthPrem||"monthly"===monthPrem},$scope.type={payOptionType:$location.$$search.payOptionType||1,ppt:$location.$$search.ppt||$localStorage.ppt},$scope.isCancer=!1,$rootScope.cancerJourney="true"==$location.$$search.cancerJourney,$rootScope.footerLoad=!1,$scope.cancerType=1,2==$scope.type.payOptionType?$scope.quotesObj.isMonthly=!1:"",$scope.detailedObj={custInfo:{},planDetails:{}},$scope.disabled={generateBI:!0,biDownload:!1,placeOrder:!1,editButton:!1},$scope.downloadLinks={ccBiLink:"",tpBiLink:""},$scope.buttonText={bi:"Generating Link",cancerBi:"Generating Link"},$scope.alreadyPaid=!1,$scope.linkProcessed=!0,$scope.redirectUrl="",$scope.paymentFailed="failure"==$location.$$search.reason;var fakePlanId=$location.$$search.fakePlanId||$cookies.get("fakePlanId");fakePlanId&&$cookies.put("fakePlanId",fakePlanId),$scope.creditReport={check:!0},$scope.showCreditReportCheck=termConfigObj.showCreditReportCheck(),$scope.disabled.biDownload=!1,$scope.linkProcessing=!1;var enquiryId=$location.$$search.enquiryId||CommonServiceTerm.getEnquiryId(),planId=$location.$$search.planId||$cookies.get("planId");$scope.isPNBPlan=CommonServiceTerm.isPNBPlan(planId);var selectedRiders=[],updateButtonText=function(){$scope.buttonText.bi="Download Bi",$scope.buttonText.cancerBi="Download CC Bi"},getDownloadUrlCallback=function(result){"Success"==result.data.MessageCode?(CommonServiceTerm.isPNBPlan(planId)?($scope.downloadLinks.ccBiLink=result.data.MHCCBIDownloadURL,$scope.downloadLinks.tpBiLink=result.data.MMTPBIDownloadURL):$scope.downloadLinks.tpBiLink=result.data.Description,updateButtonText()):($scope.somethingWentWrong=!0,$scope.disabled.biDownload=!0),$scope.linkProcessed=!0},getDownloadUrlFailureCallBack=function(){$scope.somethingWentWrong=!0,$scope.linkProcessed=!0,$scope.disabled.biDownload=!0};$scope.generateBI=function(){$scope.disabled.generateBI=!1,getDownloadUrl()};var getDownloadUrl=function(){$scope.linkProcessed=!1,$scope.linkProcessing=!0,ProductService.getBiDownloadUrl(enquiryId,planId).then(function(result){getDownloadUrlCallback(result),$scope.linkProcessing=!1})["catch"](function(){getDownloadUrlFailureCallBack(),$scope.linkProcessing=!1})};$scope.showBiDownloadLink=function(){return!$location.$$search.cancerJourney};var paymentDoneCallback=function(result){$scope.disabled.placeOrder=!0,$scope.disabled.editButton=!0,$scope.alreadyPaid=!0,$scope.linkProcessed=!0,$scope.redirectUrl=result.data.redirectURL,$scope.downloadLinks.tpBiLink=result.data.biPlanLink,result.data.cancerBIPlanLink&&($scope.downloadLinks.ccBiLink=result.data.cancerBIPlanLink),updateButtonText(),$scope.hideObject.fullPageLoader=!0};(function(){$scope.linkProcessed=!1,ProductService.isAlreadyPaid(enquiryId).then(function(result){"success"==result.data.status&&(result.data.isPaymentDone?paymentDoneCallback(result):result.data.isBIAvailable||($scope.linkProcessed=!0,$scope.hideObject.showBiButton=!1),$location.$$search.cancerJourney||($rootScope.cancerJourney=!!result.data.isCancer))})})();$scope.detailedObj.planDetails.planId=planId,$scope.detailedObj.planDetails.planName=unescape(location.pathname.split("/")[2]),ProductService.prefillCheckoutDetails(planId,enquiryId).then(function(result){if(result&&result.data&&!isEmpty(result.data)){var data=result.data;$scope.detailedObj.custInfo={firstName:data.firstName,lastName:data.lastName,fullName:data.name,custId:1*data.custId,visitId:data.visitId,country:data.country,enquiryId:data.decodedEnquiryId,encodedEnquiryId:data.encodedEnquiryId,matrixleadId:data.matrixLeadId,isTobacco:data.tobacco,mobileNo:data.mobile,encryptedMobileNo:data.encryptedMobileNo,gender:data.gender,emailId:data.email,dob:data.dob,annualIncome:$filter("addCommas")(data.annualIncome)||"",coverageUpto:data.ageTillCovered},$scope.detailedObj.custInfo.city={name:"",id:null,stateId:null},$scope.detailedObj.custInfo.city.name=data.city,$scope.detailedObj.custInfo.enquiryId=data.decodedEnquiryId,$scope.detailedObj.custInfo.encodedEnquiryId=data.enquiryId;var leadId=$scope.detailedObj.custInfo.matrixleadId;leadId&&CommonServiceTerm.createRevisit({leadId:leadId,productId:$rootScope.cancerJourney?CommonServiceTerm.getCancerCareProductId():termConfigObj.getTermProductId(),pageName:"CheckoutPage"}),$scope.detailedObj.planDetails.planId=data.planId,$scope.detailedObj.planDetails.sumAssured=data.sumAssured,$scope.detailedObj.planDetails.planName=data.planName,$scope.detailedObj.planDetails.riderDetails=data.riderObj,$scope.detailedObj.planDetails.supplierName=data.supplierName,$scope.detailedObj.planDetails.planPremium=data.planPremium,$scope.detailedObj.planDetails.isAnyRiderSelected=!1,$scope.detailedObj.planDetails.supplierId=data.supplierId,data.planRiderObj&&($scope.detailedObj.planDetails.riderDetails=$scope.detailedObj.planDetails.riderDetails.concat(data.planRiderObj)),$scope.isPNBPlan=CommonServiceTerm.isPNBPlan($scope.detailedObj.planDetails.planId),$scope.isPNBPlan&&($scope.detailedObj.planDetails.riderDetails=_.filter($scope.detailedObj.planDetails.riderDetails,function(rider){return 68!=rider.riderId&&72!=rider.riderId&&76!=rider.riderId&&80!=rider.riderId})),$scope.detailedObj.planDetails=CommonServicePreQuotesTerm.prefillPlanDataForCheckout(data,planId,$scope.quotesObj.isMonthly,$scope.detailedObj.planDetails),data.planRiderObj&&(selectedRiders=[],_.each($scope.detailedObj.planDetails.riderDetails,function(val){selectedRiders.push(val.categoryId),$scope.detailedObj.planDetails.isAnyRiderSelected||($scope.detailedObj.planDetails.isAnyRiderSelected=!0)}),$scope.hideObject.fullPageLoader=!0),pbTrackerObj.logEvent({leadId:$scope.detailedObj.custInfo.matrixleadId,custId:$scope.detailedObj.custInfo.custId,visitId:$scope.detailedObj.custInfo.visitId,event:"Landing",pageName:"CheckoutPage",planId:$scope.detailedObj.planDetails.planId,planName:$scope.detailedObj.planDetails.planName,premium:$scope.detailedObj.planDetails.showPremium})}else $scope.editProfile()}),$scope.toggleDetails=function(details){$scope.hideObject.details=!details},$scope.editProfile=function(){CommonServiceTerm.setUpdateCalled("load"),$rootScope.cancerJourney?$location.path("ci/product/"+$scope.detailedObj.planDetails.planName):termConfigObj.showNewMobileProductPage($scope.detailedObj.planDetails.supplierId)&&$rootScope.isMobileDevice?$location.path("/productDetails/"+$scope.detailedObj.planDetails.planName).search({tabName:$cookies.get("pTabName"),payOptionType:$scope.type.payOptionType,ppt:$scope.type.ppt,enquiryId:CommonServiceTerm.getEnquiryId(),planId:$scope.detailedObj.planDetails.planId}):$location.path("/product/"+$scope.detailedObj.planDetails.planName).search({tabName:$cookies.get("pTabName"),payOptionType:$scope.type.payOptionType,ppt:$scope.type.ppt,enquiryId:CommonServiceTerm.getEnquiryId(),planId:$scope.detailedObj.planDetails.planId}),pbTrackerObj.logEvent({leadId:$scope.detailedObj.custInfo.matrixleadId,custId:$scope.detailedObj.custInfo.custId,visitId:$scope.detailedObj.custInfo.visitId,event:"On Edit Pencil Click",pageName:"CheckoutPage",planId:$scope.detailedObj.planDetails.planId,planName:$scope.detailedObj.planDetails.planName,premium:$scope.detailedObj.planDetails.showPremium,click:"Click"})},$scope.buyNow=function(){$scope.hideObject.buyLoader=!1,$localStorage.ppt=$scope.type.ppt,pbTrackerObj.logEvent({leadId:$scope.detailedObj.custInfo.matrixleadId,custId:$scope.detailedObj.custInfo.custId,visitId:$scope.detailedObj.custInfo.visitId,event:"On Place Order Click",pageName:"CheckoutPage",planId:$scope.detailedObj.planDetails.planId,planName:$scope.detailedObj.planDetails.planName,premium:$scope.detailedObj.planDetails.showPremium,click:"Click"}),$rootScope.cancerJourney||($scope.detailedObj.custInfo.creditReportCheck=$scope.creditReport.check?"true":"false"),CommonServicePreQuotesTerm.prePayment($scope.detailedObj.planDetails,$scope.detailedObj.custInfo,$scope.quotesObj.isMonthly,$scope.type.payOptionType).then(function(data){"error"===data?$scope.hideObject.showRedirectionError=!1:$scope.hideObject.showRedirectionError=!0,$scope.hideObject.buyLoader=!0})},$scope.restartJourney=function(){var cookies=$cookies.getAll();angular.forEach(cookies,function(v,k){$cookies.remove(k)}),$localStorage.$reset(),$location.$$search={},$rootScope.cancerJourney?$location.path("/ci").replace():$location.path("/").replace(),$location.path("/").replace(),pbTrackerObj.logEvent({leadId:$scope.detailedObj.custInfo.matrixleadId,custId:$scope.detailedObj.custInfo.custId,visitId:$scope.detailedObj.custInfo.visitId,event:"On Restart Journey Click",pageName:"CheckoutPage",click:"Click"})}}function ProductAdditionalInfoController($scope,$rootScope,CommonServicePreQuotesTerm,CommonServiceTerm,$cookies,$document){$rootScope.cancerJourney||($scope.childDobArray=angular.copy($scope.dObArrayObj),$scope.childDobArray.year=CommonServicePreQuotesTerm.getChildBirthYearList()),$scope.changeNationality=function(){$scope.preserveAdditionalInfo.nationality=angular.copy($scope.customerInfo.nationality),$rootScope.cancerJourney?($scope.statusError.statusFailed=!1,$scope.statusError.errorMessage="",$scope.errorObject.nationalityValid=!1):($scope.customerInfo.isNri="NRI"===$scope.customerInfo.nationality,$scope.customerInfo.isPio="PIO"===$scope.customerInfo.nationality,$scope.updateRiderDetails())},$scope.saveEducation=function(){$scope.preserveAdditionalInfo.education=angular.copy($scope.customerInfo.education),$scope.checkIfProfileAllowed()},$scope.onChangeNri=function(){1*$scope.customerInfo.nri===1?($scope.statusError.statusFailed=!0,$scope.statusError.errorMessage="This plan is not available for Non Resident Indian.",$document.scrollTopAnimated(0)):($scope.statusError.statusFailed=!1,$scope.statusError.errorMessage="")},$scope.saveOccupation=function(){$scope.preserveAdditionalInfo.occupation=angular.copy($scope.customerInfo.occupation),$rootScope.cancerJourney&&($scope.statusError.statusFailed=!1,$scope.statusError.errorMessage="",$scope.errorObject.occupationValid=!1),$scope.checkIfProfileAllowed()},$scope.changeDateAccToMonthAndYear=function(month){if($scope.childDobArray.date=CommonServicePreQuotesTerm.populateDates($scope.childData.dobMonth,$scope.childData.dobYear),null!==$scope.childData.dobDate&&void 0!==$scope.childData.dobDate&&""!==$scope.childData.dobDate){var date=$scope.childData.dobDate.length>1?$scope.childData.dobDate:"0"+$scope.childData.dobDate;$scope.childDobArray.date.indexOf(date)==-1&&($scope.childData.dobDate=$scope.childDobArray.date[$scope.childDobArray.date.length-1],$scope.changeChildDOB($scope.childData))}},$scope.changeChildDOB=function(data){$scope.modifySelection.child.dob=data.dobDate+"-"+(data.dobMonth&&1==data.dobMonth.length?"0"+data.dobMonth:data.dobMonth)+"-"+data.dobYear,$scope.modifySelection.child.age=CommonServiceTerm.getAge($scope.modifySelection.child.dob),$scope.errorObject.ageAboveMax=isAgeAboveMaximum($scope.childData,$scope.modifySelection.child.dob),$scope.errorObject.ageBelowMin=isAgeBelowMinimum($scope.childData,$scope.modifySelection.child.dob),$scope.errorObject.inValidDob=!isValidDateOfBirth($scope.modifySelection.child.dob),$scope.errorObject.emptyDob=!1};var isDOBMissing=function(data){return!data.dobDate||!data.dobMonth||!data.dobYear},isAgeBelowMinimum=function(data,dob){return!isDOBMissing(data)&&CommonServiceTerm.getAge(dob)<0},isAgeAboveMaximum=function(data,dob){return!isDOBMissing(data)&&CommonServiceTerm.getAge(dob)>14};$scope.isYearSelected=function(index,dobYear){return index==$scope.childDobArray.year.indexOf(parseInt(dobYear))};var isValidDateOfBirth=function(dob){return dob&&CommonServicePreQuotesTerm.isValidDateOfBirth(dob)||!1}}function ProductCancerCoverDetailsController($scope,$rootScope,CommonServicePreQuotesTerm,CommonServiceTerm){function isTobaccoSelected(){return void 0!==$scope.customerInfo.isTobacco&&null!==$scope.customerInfo.isTobacco&&""!==$scope.customerInfo.isTobacco}function allValidAmount(){var isError=!1;return _.each($scope.errorObject,function(val){val&&(isError=!0)}),isError}var customerInfoPreserved={};$scope.noResult?(customerInfoPreserved=angular.copy($scope.customerInfo),$scope.showObject.totalCover=!0):$scope.$on("someEvent",function(event){if(customerInfoPreserved=angular.copy($scope.customerInfo),$scope.showObject.totalCover=!0,$scope.showObject.showAllCoverFields=null!==$scope.planDetails&&void 0!==$scope.planDetails,$scope.planDetails){$scope.planDetails.maxTotalCover||$scope.planDetails.totalCover;$scope.showObject.totalCover=!$scope.planDetails.monthlyIncome||0==$scope.planDetails.monthlyIncome}}),$scope.amount={min:1e6,max:5e6},$scope.trackSectionChange=function(val){gaTagsNew.trackSectionChange("cover",val)},$scope.changeDOB=function(){$scope.customerInfo.dob=$scope.data.dobDate+"-"+$scope.data.dobMonth+"-"+$scope.data.dobYear;var age=CommonServiceTerm.getAge($scope.customerInfo.dob);age>=18&&age<=50?($rootScope.amountBoundry.heartPayout.max=25e5,$scope.customerInfo.heartPayout>25e5&&($scope.errorObject.heartPayoutError=!0,$scope.errorObject.heartPayoutStepError=!1,$scope.expandedToggle.cover=!0)):age>=51&&age<=55?($rootScope.amountBoundry.heartPayout.max=2e6,$scope.customerInfo.heartPayout>2e6&&($scope.errorObject.heartPayoutError=!0,$scope.errorObject.heartPayoutStepError=!1,$scope.expandedToggle.cover=!0)):age>=56&&age<=65&&($rootScope.amountBoundry.heartPayout.max=1e6,$scope.customerInfo.heartPayout>1e6&&($scope.errorObject.heartPayoutError=!0,$scope.errorObject.heartPayoutStepError=!1,$scope.expandedToggle.cover=!0))},$scope.changeDateAccToMonthAndYear=function(month){if($scope.dObArrayObj.date=CommonServicePreQuotesTerm.populateDates($scope.data.dobMonth,$scope.data.dobYear),null!==$scope.data.dobDate&&void 0!==$scope.data.dobDate&&""!==$scope.data.dobDate){var date=$scope.data.dobDate.length>1?$scope.data.dobDate:"0"+$scope.data.dobDate;$scope.dObArrayObj.date.indexOf(date)==-1&&($scope.data.dobDate=$scope.dObArrayObj.date[$scope.dObArrayObj.date.length-1],$scope.changeDOB())}},$scope.dObArrayObj={date:CommonServicePreQuotesTerm.populateDates(),month:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],year:CommonServicePreQuotesTerm.getYearList()},$scope.isDOBMissing=function(){return!$scope.data.dobDate||!$scope.data.dobMonth||!$scope.data.dobYear},$scope.isAgeBelowMinimum=function(){return!$scope.isDOBMissing()&&$scope.isValidDateOfBirth()&&CommonServiceTerm.getAge($scope.customerInfo.dob)<18},$scope.isAgeAboveMaximum=function(){return!$scope.isDOBMissing()&&$scope.isValidDateOfBirth()&&CommonServiceTerm.getAge($scope.customerInfo.dob)>65},$scope.isValidAge=function(){return!$scope.isDOBMissing()&&$scope.isValidDateOfBirth()&&CommonServiceTerm.getAge($scope.customerInfo.dob)>=18&&CommonServiceTerm.getAge($scope.customerInfo.dob)<=65},$scope.isYearSelected=function(index,dobYear){return index==$scope.dObArrayObj.year.indexOf(parseInt(dobYear))},$scope.isPolicySelected=function(index,coverage){return index==$scope.coverages.indexOf(parseInt(coverage))},$scope.changeDisplayNumberFormat=function(num){var x=CommonServicePreQuotesTerm.removeCommas(num);return!angular.isUndefined(x)&&x>0?CommonServiceTerm.changeDisplayNumberFormat(x):0},$scope.isValidPolicyTerm=function(){return $scope.customerInfo.coverageUpto>=$scope.amountBoundry.coverage.min&&$scope.customerInfo.coverageUpto<=$scope.amountBoundry.coverage.max},$scope.policyTermChanged=function(){$scope.saveDataAndGetQuotes()},$scope.validatePercentageValue=function(changedValue){$scope.customerInfo.cancerPercentage>100?$scope.errorObject.cancerPercentage=!0:$scope.customerInfo.heartPercentage>100?$scope.errorObject.heartPercentage=!0:($scope.errorObject.cancerPercentage=!1,$scope.errorObject.heartPercentage=!1)},$scope.calculateCancerHeartPercentage=function(changedValue){if(!$scope.errorObject.heartPercentage&&!$scope.errorObject.cancerPercentage){var remaining=0;if("cancer"==changedValue){var remaining=100-$scope.customerInfo.cancerPercentage;$scope.customerInfo.heartPercentage=remaining}else{var remaining=100-$scope.customerInfo.heartPercentage;$scope.customerInfo.cancerPercentage=remaining}$scope.saveDataAndGetQuotes()}},$scope.saveDataAndGetQuotes=function(payoutVal){$scope.customerInfo.matrixleadId&&CommonServicePreQuotesTerm.checkIfChanged(customerInfoPreserved,$scope.customerInfo)&&!allValidAmount()&&$scope.isValidAge()&&isTobaccoSelected()&&$scope.postCustomerDetails(payoutVal)},$scope.$on("validateAndUpdate",function(event,val){$scope.saveDataAndGetQuotes(val)})}function ProductCancerIndexController($scope,$rootScope,$filter,CommonServicePreQuotesTerm,ProductService,$routeParams,CommonServiceTerm,$localStorage,$timeout,$cookies,$q,$window,$document,$location,GenericService,QuotesService,CustomerService){function processPlanDetails(result){updatedData=angular.copy(result),CommonServicePreQuotesTerm.isEmptyObject(result)||"failed"===result.status?($scope.noResult=!0,populatePlanDetails("notOnLoad",result.cancerSupplierPlans,"failed")):($scope.statusError.errorMessage=result.errorMessage,$scope.statusError.statusFailed=!!result.errorMessage&&result.errorMessage.length>0,void 0!==result.custInfo&&null!==result.custInfo&&(categoryIds=result.custInfo.categoryIds,$scope.customerInfo=CommonServicePreQuotesTerm.prefillCustomerData(result.custInfo),$scope.customerInfo.customerAge=result.custInfo.customerAge,$scope.customerInfo.isTobaccoUser=result.custInfo.isTobaccoUser,$scope.customerInfo.stateId=result.custInfo.stateId,$scope.data=CommonServicePreQuotesTerm.extractDOB($scope.customerInfo.dob),$scope.data.dobMonth=parseInt($scope.data.dobMonth,10).toString(),$scope.maskedInput.mobileNo=angular.copy($scope.customerInfo.mobileNo)),populatePlanDetails("onLoad",result.cancerSupplierPlans)),$timeout(function(){$scope.showLoader=!1,$scope.$broadcast("someEvent",!0)},1e3),($scope.showNationalityOptions||$scope.showOccupationOptions)&&ProductService.getAdditionalQA(enquiryId).then(function(result){result.data.nationality&&($scope.customerInfo.nationality=result.data.nationality),result.data.occupation&&($scope.customerInfo.occupation=result.data.occupation),CommonServiceTerm.isFGCancerProtect($scope.planDetails.planId)&&$scope.customerInfo.occupation&&($scope.preserveAdditionalInfo.occupation=$scope.customerInfo.occupation)})}function populatePlanDetails(load,supplierPlans,failedStatus){if($scope.planList=[],$scope.planList=CommonServicePreQuotesTerm.prefillCancerPlanData(supplierPlans),$scope.customerInfo.age>=18&&$scope.customerInfo.age<=50?($rootScope.amountBoundry.heartPayout.max=25e5,$scope.customerInfo.heartPayout>25e5&&($scope.errorObject.heartPayoutError=!0,$scope.errorObject.heartPayoutStepError=!1,$scope.expandedToggle.cover=!0)):$scope.customerInfo.age>=51&&$scope.customerInfo.age<=55?($rootScope.amountBoundry.heartPayout.max=2e6,$scope.customerInfo.heartPayout>2e6&&($scope.errorObject.heartPayoutError=!0,$scope.errorObject.heartPayoutStepError=!1,$scope.expandedToggle.cover=!0)):$scope.customerInfo.age>=56&&$scope.customerInfo.age<=65&&($rootScope.amountBoundry.heartPayout.max=1e6,$scope.customerInfo.heartPayout>1e6&&($scope.errorObject.heartPayoutError=!0,$scope.errorObject.heartPayoutStepError=!1,$scope.expandedToggle.cover=!0)),$scope.planList.length>0){if(_.each($scope.planList,function(plan){plan.totalPremiumWithRiders=angular.copy(plan.premium),plan.monthlyPremiumWithRiders=angular.copy(plan.monthlyPremium)}),$scope.planDetails=_.find($scope.planList,function(val){if(1*val.fakePlanId===1*$scope.clickedPlan)return val}),!trackingCalled&&$scope.planDetails&&(CommonServicePreQuotesTerm.quotesSelectionTrackingEvent($scope.planDetails,$scope.customerInfo,$cookies.get("enquiryId")),trackingCalled=!0),$scope.planDetails?populateValuesFromPlanDetails(load,failedStatus):($scope.planDetails=$scope.planList[0],$scope.clickedPlan=$scope.planDetails.fakePlanId,$cookies.put("planId",$scope.planDetails.planId),$cookies.put("fakePlanId",$scope.planDetails.fakePlanId),populateValuesFromPlanDetails(load)),5==$scope.planDetails.Supplier_Id&&"CancerHeart"==$scope.planDetails.criticareType){$scope.showObject.cancerCover=!0,$scope.showObject.heartCover=!0,$scope.showObject.totalCover=!1;var individualPayouts=CommonServiceTerm.calculateCancerHeartPayouts($scope.customerInfo.totalPayout);$scope.customerInfo.cancerPayout=$scope.customerInfo.cancerPayout||individualPayouts.cancerPayout,$scope.customerInfo.heartPayout=$scope.customerInfo.heartPayout||individualPayouts.heartPayout,$scope.customerInfo.totalPayout=parseInt(CommonServiceTerm.removeCommas($scope.customerInfo.cancerPayout))+parseInt(CommonServiceTerm.removeCommas($scope.customerInfo.heartPayout))}$scope.planList&&_.each(supplierPlans[0].cancerPlanDetails,function(value){value.riders&&($scope.showLoader=!0,_.each(value.riders,function(rider){rider=QuotesService.getCancerRiderPremiums(value,$scope.customerInfo,rider,categoryIds),value.riders.indexOf(rider)+1==value.riders.length&&($scope.showLoader=!1)}))})}checkForMinimumPremium()}function checkForMinimumPremium(){if(CommonServiceTerm.isFGCancerProtect($scope.planDetails.planId)){var totalPremium=$scope.quotesObj.isMonthly&&$scope.planDetails.monthlyPremiumWithRiders>0?$scope.planDetails.monthlyPremiumWithRiders:$scope.planDetails.totalPremiumWithRiders;totalPremium<95?($scope.showLoader=!1,$scope.statusError.errorMessage="Premium can not be less than Rs. 95.",$scope.statusError.statusFailed=!0):1*$scope.customerInfo.nri===1?($scope.statusError.statusFailed=!0,$scope.statusError.errorMessage="This plan is not available for Non Resident Indian.",$document.scrollTopAnimated(0)):($scope.statusError.errorMessage="",$scope.statusError.statusFailed=!1)}if(1*$scope.planDetails.planId===897){var premium=$scope.quotesObj.isMonthly&&$scope.planDetails.monthlyPremiumWithRiders>0?$scope.planDetails.monthlyPremiumWithRiders:$scope.planDetails.totalPremiumWithRiders,minVal=$scope.quotesObj.isMonthly?236:590;premium<minVal?($scope.showLoader=!1,$scope.statusError.errorMessage=$scope.quotesObj.isMonthly?"Minimum monthly premium for this plan (inclusive of tax) should be equal or more than Rs. 236. To get this plan please select annual premium mode.":"Premium can not be less than Rs. "+minVal,$scope.statusError.statusFailed=!0,$document.scrollTopAnimated(0)):($scope.statusError.errorMessage="",$scope.statusError.statusFailed=!1)}}function seperateFirstAndLastName(nameValue){$scope.customerInfo.firstName=CommonServiceTerm.getFirstName(nameValue),$scope.customerInfo.lastName=CommonServiceTerm.getLastName(nameValue)||($scope.customerInfo.lastName?$scope.customerInfo.lastName:""),0==$scope.customerInfo.lastName.length?$timeout(function(){$scope.errorObject.nameError=!0,$scope.errorObject.lastNameError=!0,$scope.expandedToggle.personal=!0},0):$timeout(function(){$scope.errorObject.nameError=!1,$scope.errorObject.lastNameError=!1},0)}function populateValuesFromPlanDetails(load,failedStatus){var occupationInlist=[],totalCover=$scope.planDetails.sumAssured||$scope.planDetails.sumAssured;$scope.customerInfo.totalPayout=$filter("addCommas")(totalCover),$scope.hideInputFields.total=void 0!==totalCover&&null!==totalCover&&0==totalCover,$scope.coverages=$scope.planDetails.coverages.sort(),$scope.customerInfo.age&&$scope.planDetails.term&&($scope.customerInfo.coverageUpto=(1*$scope.customerInfo.age+1*$scope.planDetails.term).toString()),$scope.customerInfo.age&&2==$scope.type.payOptionType&&($scope.customerInfo.coverageUpto=(1*$scope.customerInfo.age+5).toString()),void 0!==$scope.planDetails.featuresExclusion&&($scope.benefits=CommonServicePreQuotesTerm.getAllFeatures($scope.planDetails.featuresExclusion,"benefits"),$scope.features=CommonServicePreQuotesTerm.getAllFeatures($scope.planDetails.featuresExclusion,"features"),$scope.eligibility=CommonServicePreQuotesTerm.getAllFeatures($scope.planDetails.featuresExclusion,"eligibility"),$scope.exclusions=CommonServicePreQuotesTerm.getAllFeatures($scope.planDetails.featuresExclusion,"exclusions")),$scope.customerInfo.nationality=angular.copy($scope.preserveAdditionalInfo.nationality),$scope.customerInfo.occupation=angular.copy($scope.preserveAdditionalInfo.occupation),window.prerenderReady=!0,$rootScope.amountBoundry.totalPayout.min=$scope.planDetails.validations.minSumAssured,$rootScope.amountBoundry.totalPayout.max=$scope.planDetails.validations.maxSumAssured,$rootScope.amountBoundry.totalPayout.step=$scope.planDetails.validations.interval,failedStatus||($scope.statusError.errorMessage=$scope.planDetails.errorMessage,$scope.statusError.statusFailed=!!$scope.planDetails.errorMessage&&$scope.planDetails.errorMessage.length>0),CommonServiceTerm.isFGCancerProtect($scope.planDetails.planId)&&($scope.showObject.lifeStyleOptions=!0,$scope.customerInfo.isDifferentPayer="undefined"!=typeof $scope.preserveAdditionalInfo.isDifferentPayer?angular.copy(1*$scope.preserveAdditionalInfo.isDifferentPayer):0,$scope.customerInfo.payer="undefined"!=typeof $scope.preserveAdditionalInfo.payer?$scope.preserveAdditionalInfo.payer:"Father",$scope.showObject.payerOptions=!0,$scope.planDetails.minimumAnnualIncome=1,$scope.showOccupationOptions=!0,$scope.occupationOptions=CommonServiceTerm.getOccupationOptions("2"===$scope.customerInfo.gender),$scope.customerInfo.occupation&&(occupationInlist=_.find($scope.occupationOptions,function(key){return key.value==$scope.customerInfo.occupation}),(!occupationInlist||occupationInlist&&0==occupationInlist.length)&&($scope.customerInfo.occupation=null,$scope.preserveAdditionalInfo.occupation=null)),$scope.showObject.nriOptions=!0,$scope.customerInfo.nri=0,seperateFirstAndLastName($scope.customerInfo.fullName)),$scope.showPayOption=!!CommonServiceTerm.isFGCancerProtect($scope.planDetails.planId)}$scope.showLoader=!0;var premiumMode=$cookies.get("monthPrem");$scope.quotesObj={isMonthly:!1,spouse:!1,isMulti:!1};var custId=-1,categoryIds=[],previousAnnualIncome=0;gtmObj.callGAOnPageLoad($location.$$url),$scope.profileNotEligible=!1,$scope.annualError={annualIncomeError:!1},$rootScope.fromApp=!(!$location.$$search.rSource||"pbmobileapp"!=$location.$$search.rSource.toLowerCase()),$scope.payerOptions=["Father","Mother","Brother","Sister","Husband","Daughter","Son","Father-in-law","Mother-in-law"];var trackingCalled=!1,enquiryId=$location.$$search.enquiryId||$cookies.get("enquiryId");$location.$$search.enquiryId&&(CustomerService.setEnquiryCookie(enquiryId),$location.search("enquiryId",null));var payOptionType=$location.$$search.payOptionType,payOptionList=[{value:1,displayValue:"Regular"},{value:2,displayValue:"Single Pay"}];$scope.payOptionTypeList=angular.copy(payOptionList),$scope.type={payOptionType:$localStorage.payOptionType&&""!=$localStorage.payOptionType?1*$localStorage.payOptionType:1,ppt:$location.$$search.ppt||0},"SinglePay"===payOptionType?$scope.type.payOptionType=2:"LimitedPay"===payOptionType&&($scope.type.payOptionType=3),$scope.changePremiumMode=function(premMode){premMode&&"monthly"!=premMode.toLowerCase()?"half-yearly"==premMode.toLowerCase()?($scope.quotesObj.isMonthly=!1,$scope.quotesObj.isHalfYearly=!0,$scope.quotesObj.isQuarterly=!1):"yearly"==premMode.toLowerCase()?($scope.quotesObj.isMonthly=!1,$scope.quotesObj.isHalfYearly=!1,$scope.quotesObj.isQuarterly=!1):"quarterly"==premMode.toLowerCase()&&($scope.quotesObj.isMonthly=!1,$scope.quotesObj.isHalfYearly=!1,$scope.quotesObj.isQuarterly=!0):($scope.quotesObj.isMonthly=!0,$scope.quotesObj.isHalfYearly=!1,$scope.quotesObj.isQuarterly=!1),$cookies.put("monthPrem",premMode?premMode.toLowerCase():"")},$scope.changePremiumMode(premiumMode),$scope.maskedInput={mobileNo:"97XXXXXX12"},$scope.mobileLengthValidation={min:10,max:10},enquiryId=CommonServiceTerm.getEnquiryId(),$scope.isLanding=!!enquiryId;var planId=$location.$$search.planId||$cookies.get("planId"),fakePlanId=$location.$$search.fakePlanId||$cookies.get("fakePlanId");$location.$$search.fakePlanId&&($cookies.put("fakePlanId",fakePlanId),$location.search("fakePlanId",null)),$location.$$search.planId&&($cookies.put("planId",planId),$location.search("planId",null));var pTabName=$location.$$search.pTabName||"";pTabName&&$cookies.put("pTabName",pTabName);var updatedData={},updateCustomerCalled=!1;$scope.hideObject={buyLoader:!0,showRedirectionError:!0,premDet:!1},$scope.hideObject.premDet=!$rootScope.isMobileDevice,$scope.clickedPlan=fakePlanId,$scope.expandedToggle={},$scope.navObject={isFirst:!0},$scope.confirmObj={confirm:!0},$scope.country={name:""},$rootScope.$on("duScrollspy:becameActive",function($event,$element,$target){$timeout(function(){$scope.navObject.isFirst="nav1"==$element[0].id},100)}),$scope.errorObject={totalPayoutError:!1,mobileError:!1,emailError:!1,cityError:!1,otherCountryCodeError:!1,nameError:!1,totalPayoutStepError:!1,totalPayoutRangeError:!1,nationalityValid:!1,occupationValid:!1,lastNameError:!1},$scope.statusError={statusFailed:!1},$scope.annualError={annualIncomeError:!1},$scope.showObject={showAllCoverFields:!1,totalCover:!1,monthly:!1,lifeStyleOptions:!1,payerOptions:!1,nriOptions:!1},$rootScope.amountBoundry={},$rootScope.amountBoundry={totalPayout:{min:1e6,max:2e8},coverage:{min:28,max:80}},$rootScope.amountBoundry.cancerPayout={min:2e5,max:5e6,step:1e5},$rootScope.amountBoundry.heartPayout={min:2e5,max:25e5,step:1e5},$scope.focusObj={totalPayoutFocusOut:!0},$scope.hideInputFields={total:!1},$scope.expandedToggle={cover:!1,personal:!1,additional:!1,lifestyle:!0},enquiryId?$scope.expandedToggle={cover:!1,personal:!1,additional:!0,riders:!0,lifestyle:!0}:$scope.expandedToggle={cover:!0,personal:!0,additional:!0,riders:!1,lifestyle:!0},$scope.offsetValues={first:145,second:150,third:150,fourth:150,fifth:0},$rootScope.isMobileDevice&&($scope.offsetValues={first:200,second:90,third:90,fourth:90,fifth:90}),$scope.preserveAdditionalInfo={},$scope.planList=[],$rootScope.pageClass="product",$scope.planDetails={},$scope.coverages=[],$scope.benefits={},$scope.selectedRiderNames=[],$scope.keyFeatures={},$scope.eligibility={},$scope.exclusions={},$scope.riderDetails={},$scope.data={dobDate:null,dobMonth:null,dobYear:null},$scope.customerInfo={amount:$filter("addCommas")(1e7),totalPayout:"",coverageUpto:"",isTobacco:0,dob:null,gender:"1",fullName:"",emailId:"",city:{name:"",id:null,stateId:null},countryCode:392,otherCountryCode:0,mobileNo:"",annualIncome:""},$scope.spouse={tobacco:[{value:1,label:"Yes"},{value:0,label:"No"}],isWorking:[{value:1,label:"Yes"},{value:0,label:"No"}]},$scope.nationalityValid=!0,$scope.occupationValid=!0,$scope.isValidDateOfBirth=function(){return $scope.customerInfo.dob&&CommonServicePreQuotesTerm.isValidDateOfBirth($scope.customerInfo.dob)||!1},$rootScope.cancerJourney=!0,ProductService.prefillData(planId,enquiryId,!1,$scope.type,CommonServiceTerm.removeCommas($scope.customerInfo.totalPayout)).then(function(result){if(result.custInfo){custId=result.custInfo.custId;var leadId=result.custInfo.matrixLeadId;CustomerService.setEnquiryCookie(result.custInfo.encodedEnquiryId),$cookies.put("enquiryId",result.custInfo.encodedEnquiryId),leadId&&CommonServiceTerm.createRevisit({leadId:leadId,productId:$rootScope.cancerJourney?CommonServiceTerm.getCancerCareProductId():termConfigObj.getTermProductId(),pageName:"CancerProductPage"})}result.isAllPlanLoaded&&($scope.quotesObj.isMulti=!0),processPlanDetails(result)}),$scope.unmaskInput=function(form,event){var mobileLocal=$scope.customerInfo.mobileNo;
"focus"==event&&mobileLocal&&mobileLocal.indexOf("*")>-1&&($scope.customerInfo.mobileNo=""),"blur"!=event||!$scope.maskedInput.mobileNo||""==$scope.maskedInput.mobileNo||""!=$scope.customerInfo.mobileNo&&null!=$scope.customerInfo.mobileNo||""==form.mobileNo.$viewValue&&($scope.customerInfo.mobileNo=$scope.maskedInput.mobileNo)},$scope.checkIfProfileAllowed=function(){var notAllowedOccupation=["self employed","others"],notAllowedEducation=["diploma","12th pass"],isNotAllowed=$scope.planDetails.sumAssured<3e6&&$scope.customerInfo.occupation&&notAllowedOccupation.indexOf($scope.customerInfo.occupation.toLowerCase())>-1&&$scope.customerInfo.education&&notAllowedEducation.indexOf($scope.customerInfo.education.toLowerCase())>-1;isNotAllowed?($scope.statusError.statusFailed=!0,$scope.statusError.errorMessage="Sorry, your profile does not meet the required conditions for applying for this product.",$document.scrollTopAnimated(0).then(function(){})):($scope.statusError.statusFailed=!1,$scope.statusError.errorMessage="")},$scope.getMultiplePlans=function(){$scope.showLoader=!0,ProductService.getCustomerData(planId,CommonServiceTerm.getEnquiryId(),!0,$scope.type).then(function(result){$scope.showLoader=!1;result&&result.data?(result.data.isAllPlanLoaded&&($scope.quotesObj.isMulti=!0),processPlanDetails(result.data)):processPlanDetails(updatedData)})},$scope.saveAnnualIncome=function(){$scope.isValidAnnualIncome(),$scope.annualError.annualIncomeError||previousAnnualIncome!==CommonServiceTerm.removeCommas($scope.customerInfo.annualIncome)&&(CommonServicePreQuotesTerm.submitAnnualIncome(CommonServiceTerm.removeCommas($scope.customerInfo.annualIncome)),previousAnnualIncome=CommonServiceTerm.removeCommas($scope.customerInfo.annualIncome))},$scope.showRiderHead=function(){var showRiderHead=!1;return _.each($scope.planDetails.riders,function(rider){rider.status&!showRiderHead&&(showRiderHead=!0)}),showRiderHead},$scope.postCustomerDetails=function(payoutVal){$scope.showLoader=!0;var payout=payoutVal||"all";updateCustomerCalled?$scope.showLoader=!1:(updateCustomerCalled=!0,$scope.customerInfo.nationality&&($scope.preserveAdditionalInfo.nationality=$scope.customerInfo.nationality),$scope.customerInfo.occupation&&($scope.preserveAdditionalInfo.occupation=$scope.customerInfo.occupation),void 0!=typeof $scope.customerInfo.isDifferentPayer&&($scope.preserveAdditionalInfo.isDifferentPayer=$scope.customerInfo.isDifferentPayer),void 0!=typeof $scope.customerInfo.payer&&($scope.preserveAdditionalInfo.payer=$scope.customerInfo.payer),ProductService.updateProductInfoData($scope.customerInfo,payout,planId,$scope.planDetails,$scope.quotesObj.isMulti,$scope.type).success(function(data){$scope.showLoader=!1,"failed"!==data.status?($scope.statusError.statusFailed=!1,updatedData=angular.copy(data),data.custInfo.encodedEnquiryId?(custId=data.custInfo.custId,$cookies.put("custId",data.custInfo.custId,{domain:"policybazaar.com"}),CustomerService.setEnquiryCookie(data.custInfo.encodedEnquiryId),$cookies.put("enquiryId",data.custInfo.encodedEnquiryId),$scope.customerInfo=CommonServicePreQuotesTerm.prefillCustomerData(data.custInfo),$scope.maskedInput.mobileNo=angular.copy($scope.customerInfo.mobileNo),data.cancerPayout&&($scope.customerInfo.cancerPayout=data.cancerPayout||50),data.heartPayout&&($scope.customerInfo.heartPayout=data.heartPayout||50),CommonServiceTerm.callLeadGenerationTracking($scope.customerInfo.matrixleadId,data.custInfo.custId,data.isMatrixLeadCreated,!1),$scope.data=CommonServicePreQuotesTerm.extractDOB($scope.customerInfo.dob),$scope.data.dobMonth=parseInt($scope.data.dobMonth,10).toString(),data.cancerSupplierPlans.length>0?(populatePlanDetails("notOnLoad",data.cancerSupplierPlans),$timeout(function(){$scope.$broadcast("someEvent",!0)},1e3)):($scope.planDetails={},$scope.planList=[],$scope.benefits={},$scope.keyFeatures={},$scope.eligibility={},$scope.riderDetails={},$scope.exclusions={})):populatePlanDetails("notOnLoad",updatedData.cancerSupplierPlans)):($scope.statusError.statusFailed=!0,$scope.statusError.errorMessage=data.errorMessage||"Some error Occured. Please try again later.",$document.scrollTopAnimated(0).then(function(){}),populatePlanDetails("notOnLoad",updatedData.cancerSupplierPlans,"failed")),updateCustomerCalled=!1}))},$scope.selectRider=function(rider){rider.status=!rider.status,QuotesService.addRiderValuesCancerPlan($scope.planDetails).then(function(updatedPlan){$scope.planDetails=angular.copy(updatedPlan);var selectedRiders=[];_.each($scope.planDetails.riders,function(rider){rider.status&&selectedRiders.push(rider.categoryId),$scope.planDetails.riders.indexOf(rider)+1==$scope.planDetails.riders.length&&CommonServiceTerm.setRiderSelected(custId,selectedRiders)})})},$scope.changePlanDetails=function(plan){1*$scope.clickedPlan!==1*plan.fakePlanId&&($scope.clickedPlan=angular.copy(plan.fakePlanId),$cookies.put("planId",plan.planId),$cookies.put("fakePlanId",$scope.planDetails.fakePlanId),gaTagsNew.trackVariantChange(plan,custId),$scope.planDetails=angular.copy(plan),$scope.errorObject.totalPayoutError=!1,populateValuesFromPlanDetails("notOnLoad"),$timeout(function(){$scope.$broadcast("someEvent",!0)},1e3))};var validateLifeStyleQuestions=function(){$scope.errorObject=ProductService.validateLifeStyleAnswers($scope.errorObject);var errorExists=function(){return $scope.errorObject.weightError||$scope.errorObject.tobaccoError||$scope.errorObject.alcoholError||$scope.annualError.annualIncomeError||$scope.errorObject.nationalityValid||$scope.errorObject.occupationValid};if($scope.annualError.annualIncomeError){$scope.hideObject.buyLoader=!0;var someElement=angular.element(document.getElementById("annualIncomeId"));someElement&&$document.scrollToElement(someElement,10,300)}else errorExists()&&$timeout(function(){if($scope.errorObject.nationalityValid)var errorMessage=$("#nationality-field");else if($scope.errorObject.occupationValid)var errorMessage=$("#occupation-field");else if($scope.errorObject.weightError)var errorMessage=$("#weightError");else if($scope.errorObject.tobaccoError)var errorMessage=$("#tobaccoError");else if($scope.errorObject.alcoholError)var errorMessage=$("#alcoholError");var offset=errorMessage.offset();$("html, body").animate({scrollTop:offset.top-100},"slow")},100);if(!errorExists()&&CommonServiceTerm.isFGCancerProtect($scope.planDetails.planId)&&CommonServiceTerm.checkProfileValidityFG($scope.planDetails,$scope.customerInfo))return $scope.statusError.statusFailed=!0,$scope.statusError.errorMessage="Profile not Eligible",$scope.hideObject.buyLoader=!0,void $document.scrollTopAnimated(0)};$scope.buyNow=function($event){if($event.stopPropagation(),checkForMinimumPremium(),CommonServiceTerm.isFGCancerProtect($scope.planDetails.planId)&&(seperateFirstAndLastName($scope.customerInfo.fullName),1*$scope.type.payOptionType===2&&($scope.planDetails.payOptionType="Single Pay")),$scope.showNationalityOptions&&CommonServiceTerm.isUndefinedOrNullOrEmpty($scope.customerInfo.nationality)&&"Select Nationality"!=$scope.customerInfo.nationality?$scope.nationalityValid=!1:$scope.nationalityValid=!0,$scope.showOccupationOptions&&CommonServiceTerm.isUndefinedOrNullOrEmpty($scope.customerInfo.occupation)&&"Select Occupation"!=$scope.customerInfo.occupation?$scope.occupationValid=!1:$scope.occupationValid=!0,$scope.errorObject.nationalityValid=!$scope.nationalityValid,$scope.errorObject.occupationValid=!$scope.occupationValid,!$scope.statusError.statusFailed&&$scope.planDetails.minimumAnnualIncome>0&&$scope.isValidAnnualIncome(),!$scope.statusError.statusFailed&&$scope.showObject.lifeStyleOptions&&validateLifeStyleQuestions(),$scope.statusError.statusFailed)$document.scrollTopAnimated(0);else{1*$scope.type.payOptionType===2&&($scope.quotesObj.isMonthly=!1),$scope.hideObject.buyLoader=!1;var planDetails=angular.copy($scope.planDetails);if($cookies.get("enquiryId")&&!ProductService.validateCustomerDetails($scope.customerInfo,$scope.errorObject)&&!CommonServiceTerm.isEmptyObject(planDetails)&&planDetails.premium>0&&!$scope.annualError.annualIncomeError){var custId=$cookies.get("custId")||-1;gtmObj.buyNowImpression(planDetails,$scope.customerInfo.matrixleadId,custId,"product",CommonServiceTerm.getCancerCareProductId());angular.copy($scope.customerInfo);gaTagsNew.productProceedClick("ProceedClick",planDetails.premium,$scope.customerInfo.custId,CommonServiceTerm.getCancerCareProductId());var preQuotesInfoObj=angular.copy($scope.customerInfo);preQuotesInfoObj.totalPayout=planDetails.sumAssured,preQuotesInfoObj.productId=CommonServiceTerm.getCancerCareProductId(),preQuotesInfoObj.customerAge=preQuotesInfoObj.age,preQuotesInfoObj.paymentFrequency=$scope.quotesObj.isMonthly?12:1,preQuotesInfoObj.isMonthly=$scope.quotesObj.isMonthly,preQuotesInfoObj.payOptionType=2==$scope.type.payOptionType?"Single Pay":"Regular",preQuotesInfoObj.countryId=preQuotesInfoObj.countryCode,planDetails.basicPremium=planDetails.premium,planDetails.monthlyTotalPremium=planDetails.monthlyPremium,planDetails.totalPremiumWithRiders=planDetails.premium,planDetails.maxAnnualReturn=planDetails.maxAnnualReturn||"0",$scope.showObject.lifeStyleOptions&&(preQuotesInfoObj.lifeStyleDetails=ProductService.getLifeStlyeAnswers()),planDetails.PolicyTerm=planDetails.term;var leadId=preQuotesInfoObj.matrixleadId,isE2ePlan=$scope.planDetails.Plan_Id?termConfigObj.getE2EPlanIds().indexOf(plan.Plan_Id)!=-1:void 0;leadId&&CommonServiceTerm.createRevisit({leadId:leadId,productId:$rootScope.cancerJourney?CommonServiceTerm.getCancerCareProductId():termConfigObj.getTermProductId(),pageName:isE2ePlan?"E2eRedirect":"InsurerRedirect"}),GenericService.redirectToE2EPage(preQuotesInfoObj,planDetails,$cookies.get("enquiryId"),$scope.quotesObj.isMonthly,$scope.type).then(function(data){"error"==data&&($scope.statusError.statusFailed=!0,$scope.statusError.errorMessage="Profile Not Eligible",$document.scrollTopAnimated(0).then(function(){}))}),$scope.hideObject.buyLoader=!0}else $scope.hideObject.buyLoader=!0}},$scope.trackPayoutGa=function(type){gaTagsNew.trackpayOutEdit(type,custId)},$scope.isValidAmount=function(type,planId){var isError=!1;if("total"===type){if(isError=!CommonServicePreQuotesTerm.isValidAmount($scope.customerInfo.totalPayout,CommonServicePreQuotesTerm.isMonthlyJourney(),CommonServicePreQuotesTerm.isCancerJourney(),$rootScope.amountBoundry.totalPayout,planId,type),$scope.errorObject.totalPayoutError=isError,$rootScope.amountBoundry.totalPayout.step&&$rootScope.amountBoundry.totalPayout.step>0){var value=parseInt(CommonServiceTerm.removeCommas($scope.customerInfo.totalPayout)),isStepError=!(value%$rootScope.amountBoundry.totalPayout.step===0);$scope.errorObject.totalPayoutStepError=isStepError,$scope.errorObject.totalPayoutRangeError=!(value>=$rootScope.amountBoundry.totalPayout.min&&value<=$rootScope.amountBoundry.totalPayout.max),$scope.errorObject.totalPayoutRangeError=!$scope.errorObject.totalPayoutStepError&&$scope.errorObject.totalPayoutRangeError}if(!$scope.errorObject.totalPayoutError&&$scope.customerInfo.hasOwnProperty("cancerPayout")){var individualPayouts=CommonServiceTerm.calculateCancerHeartPayouts($scope.customerInfo.totalPayout);$scope.customerInfo.cancerPayout=individualPayouts.cancerPayout,$scope.customerInfo.heartPayout=individualPayouts.heartPayout,$scope.customerInfo.age>=18&&$scope.customerInfo.age<=50&&$scope.customerInfo.heartPayout>25e5?($rootScope.amountBoundry.heartPayout.max=25e5,$scope.errorObject.heartPayoutError=!0,$scope.errorObject.heartPayoutStepError=!1,$scope.expandedToggle.cover=!0):$scope.customerInfo.age>=51&&$scope.customerInfo.age<=55&&$scope.customerInfo.heartPayout>2e6?($rootScope.amountBoundry.heartPayout.max=2e6,$scope.errorObject.heartPayoutError=!0,$scope.errorObject.heartPayoutStepError=!1,$scope.expandedToggle.cover=!0):$scope.customerInfo.age>=56&&$scope.customerInfo.age<=65&&$scope.customerInfo.heartPayout>1e6?($rootScope.amountBoundry.heartPayout.max=1e6,$scope.errorObject.heartPayoutError=!0,$scope.errorObject.heartPayoutStepError=!1,$scope.expandedToggle.cover=!0):$scope.errorObject.heartPayoutError=!1}}else if("cancer"===type){if(isError=!CommonServicePreQuotesTerm.isValidAmount($scope.customerInfo.cancerPayout,CommonServicePreQuotesTerm.isMonthlyJourney(),CommonServicePreQuotesTerm.isCancerJourney(),$rootScope.amountBoundry.cancerPayout,planId,type),$scope.errorObject.cancerPayoutError=isError,$rootScope.amountBoundry.cancerPayout.step&&$rootScope.amountBoundry.cancerPayout.step>0){var value=parseInt(CommonServiceTerm.removeCommas($scope.customerInfo.cancerPayout)),isStepError=!(value%$rootScope.amountBoundry.cancerPayout.step===0);$scope.errorObject.cancerPayoutStepError=isStepError,$scope.errorObject.cancerPayoutRangeError=!(value>=$rootScope.amountBoundry.cancerPayout.min&&value<=$rootScope.amountBoundry.cancerPayout.max)}}else if("heart"===type&&(isError=!CommonServicePreQuotesTerm.isValidAmount($scope.customerInfo.heartPayout,CommonServicePreQuotesTerm.isMonthlyJourney(),CommonServicePreQuotesTerm.isCancerJourney(),$rootScope.amountBoundry.heartPayout,planId,type),$scope.errorObject.heartPayoutError=isError,$rootScope.amountBoundry.heartPayout.step&&$rootScope.amountBoundry.heartPayout.step>0)){var value=parseInt(CommonServiceTerm.removeCommas($scope.customerInfo.heartPayout)),isStepError=!(value%$rootScope.amountBoundry.heartPayout.step===0);$scope.errorObject.heartPayoutStepError=isStepError,$scope.errorObject.heartPayoutRangeError=!(value>=$rootScope.amountBoundry.heartPayout.min&&value<=$rootScope.amountBoundry.heartPayout.max)}return!isError},$scope.saveAndGetQuotes=function(val,planId){$scope.isValidAmount(val,planId)&&($scope.isValidAmount("total",planId)&&($scope.focusObj.totalPayoutFocusOut=!0),$scope.$broadcast("validateAndUpdate",val))},$scope.isValidAnnualIncome=function(){if(CommonServiceTerm.isFGCancerProtect($scope.planDetails.planId)){var annualIncome=angular.copy($scope.customerInfo.annualIncome);$scope.annualError.annualIncomeError=!annualIncome||annualIncome.length<=0}else $scope.annualError.annualIncomeError=!(CommonServiceTerm.removeCommas($scope.customerInfo.annualIncome)>=$scope.planDetails.minimumAnnualIncome);$scope.statusError.statusFailed=!1,$scope.statusError.errorMessage=""},$scope.focusOnInput=function(id){$timeout(function(){var newId="id"+id,element=$window.document.getElementById(newId);element&&element.focus()},100)},$scope.showHidePremiumDetails=function(flag,$event){$scope.hideObject.premDet=flag,$event.stopPropagation()},$scope.isAllValid=function(){var isValid=!$scope.statusError.statusFailed;if(!$scope.statusError.statusFailed){isValid=!(!$cookies.get("enquiryId")||ProductService.validateCustomerDetails($scope.customerInfo,$scope.errorObject)||CommonServiceTerm.isEmptyObject($scope.planDetails)||!($scope.planDetails.premium>0))}return isValid},$scope.changePolTerm=function(polTerm){$scope.customerInfo.coverageUpto=angular.copy(polTerm),$scope.postCustomerDetails()},$scope.smokerChange=function(){$scope.$broadcast("changeistobacco")},$scope.isRangeMet=function(){var supplierId=$scope.planDetails.supplierId,isMet=!1;switch(supplierId){case 24:isMet=$scope.customerInfo.annualId>2;break;case 10:isMet=$scope.customerInfo.annualId>1}return isMet},$scope.expandCallback=function(index){var name=0==index?"Cover details":1==index?"Personal Details":"Additional information",proceed=0==index?"PersonalDetailsOpen":1==index?"LifeCoverDetailsOpen":"AdditionalInformation";gaTagsNew.trackExpansionAccordian(proceed,name,custId)},$scope.setPayOptionType=function(type){1*type===2?(payOptionType="SinglePay",$scope.type.ppt=1,$scope.quotesObj.isMonthly=!1):1*type===3&&(payOptionType="LimitedPay",1*$scope.planDetails.supplierId===116?$scope.type.ppt=$scope.planDetails.policyTerm-5:$scope.type.ppt=10),$localStorage.payOptionType=type,$scope.postCustomerDetails()},$scope.reversePremiumType=function(flag,plan){$scope.quotesObj.isMonthly=!flag,$cookies.put("monthPrem",$scope.quotesObj.isMonthly?"monthly":"yearly");var name=$scope.quotesObj.isMonthly?"monthly":"yearly",array=[];array.push(name),array.push(plan.planId);var premium=0;premium=$scope.quotesObj.isMonthly?plan.montlyTotalPremiumWithRiders:plan.totalPremiumWithRiders,array.push(premium);$scope.quotesObj.isMonthly&&$scope.planDetails.monthlyPremiumWithRiders>0?$scope.planDetails.monthlyPremiumWithRiders:$scope.planDetails.totalPremiumWithRiders;checkForMinimumPremium(),gaTagsNew.trackChangePremiumType(array,"ProductPage",custId)},$scope.getSavedAmount=function(plan){var yearlyPremium=plan.totalPremiumWithRiders,monthlyPremium=plan.monthlyPremiumWithRiders;return(12*monthlyPremium-yearlyPremium)*$scope.planDetails.term},$scope.riderCheckDisable=function(rider,monthly){var disable=!1;return disable=monthly?!rider.monthlyPremium:!rider.yearlyPremium},$scope.toggleMode=function($event){$event.stopPropagation(),$scope.reversePremiumType($scope.quotesObj.isMonthly,$scope.planDetails)}}function ProductCoverDetailsController($scope,$rootScope,CommonServicePreQuotesTerm,CommonServiceTerm,GenericService,$filter){function isTobaccoSelected(){return void 0!==$scope.customerInfo.isTobacco&&null!==$scope.customerInfo.isTobacco&&""!==$scope.customerInfo.isTobacco}function allValidAmount(){var isError=!1;return _.each($scope.errorObject,function(val){val&&(isError=!0)}),isError}$scope.minAge=18,CommonServiceTerm.isExidePlan(1*$scope.planDetails.planId)&&($scope.minAge=21),$scope.increasingIncomeErrorMsg="Increasing monthly income is fixed at 10% annually";var customerInfoPreserved={};$scope.noResult?(customerInfoPreserved=angular.copy($scope.customerInfo),$scope.showObject.totalCover=!0):$scope.$on("someEvent",function(event){if(customerInfoPreserved=angular.copy($scope.customerInfo),$scope.showObject.totalCover=!0,$scope.showObject.showAllCoverFields=null!==$scope.planDetails&&void 0!==$scope.planDetails,$scope.planDetails){$scope.planDetails.maxTotalCover||$scope.planDetails.totalCover,$scope.planDetails.maxOneTimePayout||$scope.planDetails.oneTimePayout,$scope.planDetails.maxSumAssured||$scope.planDetails.sumAssured;$scope.showObject.totalCover=!$scope.planDetails.monthlyIncome||0==$scope.planDetails.monthlyIncome,$scope.showObject.monthly=$scope.planDetails.monthlyIncome>0}}),CommonServicePreQuotesTerm.isMonthlyJourney()?$scope.amount={min:1e4,max:2e6}:CommonServicePreQuotesTerm.isCancerJourney()&&($scope.amount={min:1e6,max:5e6}),$scope.trackSectionChange=function(val){gaTagsNew.trackSectionChange("cover",val)},$scope.changeDOB=function(){$scope.customerInfo.dob=$scope.data.dobDate+"-"+$scope.data.dobMonth+"-"+$scope.data.dobYear,$scope.recalculateTotalPayoutMaxForPNB()},$scope.changeDateAccToMonthAndYear=function(month){if($scope.dObArrayObj.date=CommonServicePreQuotesTerm.populateDates($scope.data.dobMonth,$scope.data.dobYear),null!==$scope.data.dobDate&&void 0!==$scope.data.dobDate&&""!==$scope.data.dobDate){var date=$scope.data.dobDate.length>1?$scope.data.dobDate:"0"+$scope.data.dobDate;$scope.dObArrayObj.date.indexOf(date)==-1&&($scope.data.dobDate=$scope.dObArrayObj.date[$scope.dObArrayObj.date.length-1],$scope.changeDOB())}},$scope.isDOBMissing=function(){return!$scope.data.dobDate||!$scope.data.dobMonth||!$scope.data.dobYear},$scope.isAgeBelowMinimum=function(){var minAge=18;return CommonServiceTerm.isExidePlan(1*$scope.planDetails.planId)&&(minAge=21),CommonServiceTerm.isICICITropPlan(1*$scope.planDetails.planId)&&(minAge=22),!$scope.isDOBMissing()&&$scope.isValidDateOfBirth()&&CommonServiceTerm.getAge($scope.customerInfo.dob)<minAge},$scope.isAgeAboveMaximum=function(){return!$scope.isDOBMissing()&&$scope.isValidDateOfBirth()&&CommonServiceTerm.getAge($scope.customerInfo.dob)>$scope.getMaxAge()},$scope.isValidAge=function(){return!$scope.isDOBMissing()&&$scope.isValidDateOfBirth()&&CommonServiceTerm.getAge($scope.customerInfo.dob)>=$scope.getMinAge()&&CommonServiceTerm.getAge($scope.customerInfo.dob)<=$scope.getMaxAge()},$scope.isYearSelected=function(index,dobYear){return index==$scope.dObArrayObj.year.indexOf(parseInt(dobYear))},$scope.isPolicySelected=function(index,coverage){return index==$scope.coverages.indexOf(parseInt(coverage))},$scope.changeDisplayNumberFormat=function(num){var x=CommonServicePreQuotesTerm.removeCommas(num);return!angular.isUndefined(x)&&x>0?CommonServiceTerm.changeDisplayNumberFormat(x):0},$scope.isValidPolicyTerm=function(){return $scope.customerInfo.coverageUpto>=$scope.amountBoundry.coverage.min&&$scope.customerInfo.coverageUpto<=$scope.amountBoundry.coverage.max},$scope.policyTermChanged=function(){$scope.errorObject.coverageError=!1,1*$scope.type.payOptionType===3&&1*$scope.planDetails.ppt>=1*$scope.customerInfo.coverageUpto-1*$scope.customerInfo.age?$scope.errorObject.coverageError=!0:$scope.saveDataAndGetQuotes()},$scope.isValidIncreasingIncome=function(){var valid=!0;$scope.errorObject.increasingIncomeError=!1;var allowedValues=[0,10];return 854==$scope.planDetails.planId&&$scope.customerInfo.increasingIncomePercentage&&allowedValues.indexOf(1*$scope.customerInfo.increasingIncomePercentage)==-1?($scope.increasingIncomeErrorMsg="Increasing monthly income is fixed at 10% annually",$scope.errorObject.increasingIncomeError=!0,valid=!1):852!=$scope.planDetails.planId&&2711!=$scope.planDetails.planId||$scope.customerInfo.increasingIncomePercentage&&1*$scope.customerInfo.increasingIncomePercentage>100&&($scope.increasingIncomeErrorMsg="Allowed increasing monthly income is 0 to 100",$scope.errorObject.increasingIncomeError=!0,valid=!1),valid},$scope.isIndiaFirstPlan=function(planId){return CommonServiceTerm.isIndiaFirstPlan(planId)},$scope.changeMonthlyIncome=function(planId){var factorObject=CommonServiceTerm.monthlyIncomeFactor(planId);if(factorObject&&factorObject.length>0){var incomeFactor=factorObject[0].IncomeFactorMap[$scope.customerInfo.totalPayOutTerm];$scope.customerInfo.monthlyPayout=incomeFactor*CommonServiceTerm.removeCommas($scope.customerInfo.sumAssured)}},$scope.payoutSelected=function(value,modalVal){return value===modalVal},$scope.totaPayoutUpdate=function(value){$scope.customerInfo.totalPayout=$filter("addCommas")(value),$scope.saveDataAndGetQuotes("total")},$scope.saveDataAndGetQuotes=function(payoutVal){$scope.customerInfo.matrixleadId&&CommonServicePreQuotesTerm.checkIfChanged(customerInfoPreserved,$scope.customerInfo)&&!allValidAmount()&&$scope.isValidAge()&&isTobaccoSelected()&&!$scope.errorObject.coverageError&&$scope.isValidIncreasingIncome()&&$scope.postCustomerDetails(payoutVal)},$scope.showCoverageValue=function(value){var age=1*$scope.customerInfo.age;if(GenericService.isIPruSmartPlan($scope.planDetails.planId)){if(1*$scope.type.payOptionType===3)return age+40>=value;if(1*$scope.type.payOptionType===2)return age+20>=value}return!0},$scope.changePPT=function(){$scope.errorObject.coverageError=!1,1*$scope.type.payOptionType===3&&1*$scope.planDetails.ppt>=1*$scope.customerInfo.coverageUpto-1*$scope.customerInfo.age?$scope.errorObject.coverageError=!0:$scope.postCustomerDetails()},$scope.$on("validateAndUpdate",function(event,val){$scope.saveDataAndGetQuotes(val)})}function ProductIndexController($scope,$rootScope,$filter,CommonServicePreQuotesTerm,ProductService,$routeParams,CommonServiceTerm,$localStorage,$timeout,$cookies,$q,$window,$document,$location,GenericService,$mdDialog,CustomerService){function processPlanDetails(result){updatedData=angular.copy(result),CommonServicePreQuotesTerm.isEmptyObject(result)||"failed"===result.status?($scope.noResult=!0,planToSwitch=result.planToSwitch,populatePlanDetails("notOnLoad",result.supplierPlans,"failed")):($scope.statusError.errorMessage=result.errorMessage,$scope.statusError.statusFailed=!!result.errorMessage&&result.errorMessage.length>0,void 0!==result.custInfo&&null!==result.custInfo&&(custID=result.custInfo.custId,categoryIds=result.custInfo.categoryIds,result.custInfo.spouse&&result.custInfo.spouse.age&&($scope.modifySelection.spouse=angular.copy(result.custInfo.spouse),$cookies.get("childDob")&&($scope.modifySelection.child.dob=$cookies.get("childDob"),$scope.modifySelection.child.age=CommonServiceTerm.getAge($scope.modifySelection.child.dob)),$scope.quotesObj.spouse=!0),$scope.customerInfo=CommonServicePreQuotesTerm.prefillCustomerData(result.custInfo),maskPhoneNumber(),$scope.data=CommonServicePreQuotesTerm.extractDOB($scope.customerInfo.dob),$scope.data.dobMonth=parseInt($scope.data.dobMonth,10).toString(),getPremiumMode(),$timeout(function(){$scope.expandedToggle.personal=!(!$scope.customerInfo.city||$scope.customerInfo.city.name)},0)),planToSwitch=result.planToSwitch,populatePlanDetails("onLoad",result.supplierPlans)),$timeout(function(){$scope.$broadcast("someEvent",!0)},0),addAddtionalInfoQuestions(),populateSpouseDetails()}function populateSpouseDetails(){CommonServiceTerm.getSpouseData(enquiryId).then(function(result){result.data.spouseDate?$timeout(function(){$scope.modifySelection.spouse.dob=result.data.spouseDate,$scope.modifySelection.spouse.age=CommonServiceTerm.getAge($scope.modifySelection.spouse.dob)}):($scope.modifySelection.spouse.dob=null,$scope.modifySelection.spouse.age=null)})}function maskPhoneNumber(){$scope.maskedInput.mobileNo=angular.copy($scope.customerInfo.mobileNo)}function populatePlanDetails(load,supplierPlans,failedStatus){if($scope.planList=[],$scope.planList=CommonServicePreQuotesTerm.prefillPlanData(supplierPlans),$scope.clickedPlan=planToSwitch||$scope.clickedPlan,$scope.planList.length>0?($scope.planDetails=_.find($scope.planList,function(val){if(1*val.planId===1*$scope.clickedPlan||1*val.Plan_Id===1*$scope.clickedPlan)return val}),CommonServiceTerm.isRelianceDigiTermPlans($scope.planDetails.planId)&&($scope.showObject.lifeProtectionRider=!0,$scope.disableLifeProtectionRider=!0),CommonServiceTerm.isIndiaFirstPlan($scope.planDetails.planId)&&_.each($scope.planList,function(val){val.isLevelMonthlyPlan?val.planShortName="Income Benefit":val.isIncreasingMonthlyPlan?val.planShortName="Income Plus Benefit":val.isOneTimePlan&&CommonServiceTerm.isIndiaFirstPlan(val.planToSwitch)&&(val.planShortName="Life Benefit")}),!trackingCalled&&$scope.planDetails&&(CommonServicePreQuotesTerm.quotesSelectionTrackingEvent($scope.planDetails,$scope.customerInfo,$cookies.get("enquiryId")),trackingCalled=!0),$scope.planDetails?($scope.clickedPlan=$scope.planDetails.planId,$cookies.put("planId",$scope.clickedPlan),$cookies.put("basePlanId",$scope.planDetails.basePlanId),populateValuesFromPlanDetails(load,failedStatus)):($scope.planDetails=$scope.planList[0],$scope.clickedPlan=planToSwitch||$scope.planDetails.planId,$cookies.put("planId",$scope.clickedPlan),$cookies.put("basePlanId",$scope.planDetails.basePlanId),$scope.planTypeSelected.value=1,planOptionsInfo.selectedPlanId=$scope.planDetails.planId,populateValuesFromPlanDetails(load))):(supplierPlans&&supplierPlans.length>0&&supplierPlans[0].featuresExclusion&&($scope.benefits=CommonServicePreQuotesTerm.getAllFeatures(supplierPlans[0].featuresExclusion,"benefits"),$scope.features=CommonServicePreQuotesTerm.getAllFeatures(supplierPlans[0].featuresExclusion,"features"),$scope.eligibility=CommonServicePreQuotesTerm.getAllFeatures(supplierPlans[0].featuresExclusion,"eligibility"),$scope.cancerEligibility=CommonServicePreQuotesTerm.getAllFeatures($scope.planDetails.featuresExclusion,"cancer-eligibility"),$scope.exclusions=CommonServicePreQuotesTerm.getAllFeatures(supplierPlans[0].featuresExclusion,"exclusions")),1*$cookies.get("planId")===847&&($scope.statusError.statusFailed=!0,$scope.statusError.errorMessage="The plan is not available for age selected")),$scope.showObject.lifeProtectionRider&&_.each($scope.riderDetails.riders,function(rider){1*rider.categoryId===13&&($scope.disableLifeProtectionRider=rider.isSelected)}),CommonServiceTerm.isPNBPlan($scope.planDetails.planId)&&($scope.riderDetails.riders=ProductService.hideRidersForPnb($scope.riderDetails.riders,$scope.planDetails,$scope.customerInfo)),CommonServiceTerm.isPNBPlan($scope.planDetails.planId)&&$scope.customerInfo.nationality&&("nri"===$scope.customerInfo.nationality.toLowerCase()||"pio"===$scope.customerInfo.nationality.toLowerCase())&&($scope.customerInfo.isNri="NRI"===$scope.customerInfo.nationality,$scope.customerInfo.isPio="PIO"===$scope.customerInfo.nationality,$scope.updateRiderDetails()),pbTrackerObj.logEvent({leadId:$scope.customerInfo.matrixleadId,custId:$scope.customerInfo.custId,visitId:$scope.customerInfo.visitId,event:"Landing",pageName:"ProductPage",premium:$scope.quotesObj.isMonthly&&$scope.planDetails.montlyTotalPremiumWithRiders?$scope.planDetails.montlyTotalPremiumWithRiders:$scope.planDetails.totalPremiumWithRiders,planId:$scope.planDetails.planId,supplierName:$scope.planDetails.supplierName,supplierId:$scope.planDetails.supplierId,planName:$scope.planDetails.planName,planShortName:$scope.planDetails.planShortName,click:"Click"}),populateSpouseDetails(),!selectionAPICalled&&callSelection){selectionAPICalled=!0;var input={planId:$scope.planDetails.planId,refId:$cookies.get("enquiryId"),productId:"7",premium:$scope.quotesObj.isMonthly&&$scope.planDetails.montlyTotalPremiumWithRiders?$scope.planDetails.montlyTotalPremiumWithRiders:$scope.planDetails.totalPremiumWithRiders,supplierId:CommonServiceTerm.getRealSupplierId($scope.planDetails.supplierId),leadId:$scope.customerInfo.matrixleadId,mobileNo:$scope.customerInfo.mobileNo,encryptedMobileNo:$scope.customerInfo.encryptedMobileNo,selectedBy:$routeParams.AgentId&&window.atob?window.atob($routeParams.AgentId):"0",ipAddress:"127.0.0.1",sourcePage:"Quotes",enquiryId:$cookies.get("enquiryId")};CustomerService.saveQuoteSelection(input).success(function(data,status,headers,config){})}}function toggleCiPayout(){$scope.showObject.ciPayout=CommonServiceTerm.isSbiPoornaSuraksha($scope.planDetails.planId)}function toggleDeathBenefitPayout(){$scope.showObject.deathBenefitPayout=CommonServiceTerm.isSbiPoornaSuraksha($scope.planDetails.planId)}function togglelumpsumBenefitPercentage(){$scope.showObject.lumpsumBenefitPercentage=CommonServiceTerm.isExideTropPlan($scope.planDetails.planId)}function showPlanInfoIcon(){$scope.showObject.planInfoIcon=CommonServiceTerm.isSbiPoornaSuraksha($scope.planDetails.planId)}function populateValuesFromPlanDetails(load,failedStatus){$scope.showLoader=!1,$scope.rider.riderErrorMsg="";var selectedRiders=[];basePlan=$scope.planDetails.basePlanId||$scope.planDetails.planId,$scope.showPayOption=1*$scope.planDetails.planId!==851&&1*$scope.planDetails.planId!==2701&&supplierIdsSingLim.indexOf(1*$scope.planDetails.supplierId)>-1;var isKotakPlan=CommonServiceTerm.isKotakPlan($scope.planDetails.planId),totalCover=$scope.planDetails.maxTotalCover||$scope.planDetails.totalCover||1e7,oneTimPayout=$scope.planDetails.maxOneTimePayout||$scope.planDetails.oneTimePayout,sumAssured=$scope.planDetails.maxSumAssured||$scope.planDetails.sumAssured;if(!$scope.isOneTimePayoutEditable($scope.planDetails.planId)){$scope.customerInfo.staticOneTImePayout=oneTimPayout;var existingOneTimePayout=parseInt(CommonServiceTerm.removeCommas($scope.customerInfo.oneTimePayout));oneTimPayout=existingOneTimePayout&&1*existingOneTimePayout>0?existingOneTimePayout:oneTimPayout}if($scope.dObArrayObj.year=CommonServicePreQuotesTerm.getYearList($scope.planDetails.supplierId),$scope.customerInfo.totalPayout=$filter("addCommas")(totalCover),$scope.customerInfo.oneTimePayout=$filter("addCommas")(oneTimPayout),$scope.customerInfo.monthlyPayout=$filter("addCommas")($scope.planDetails.monthlyIncome),$scope.customerInfo.sumAssured=$filter("addCommas")(sumAssured),$scope.customerInfo.nationality=angular.copy($scope.preserveAdditionalInfo.nationality),$scope.customerInfo.occupation=angular.copy($scope.preserveAdditionalInfo.occupation),$scope.customerInfo.education=angular.copy($scope.preserveAdditionalInfo.education),$scope.customerInfo.totalPayOutTerm=angular.copy($scope.preserveAdditionalInfo.totalPayOutTerm),CommonServiceTerm.isUndefinedOrNullOrEmpty($scope.planDetails.selectedRidersName)||($scope.selectedRiderNames=$scope.planDetails.selectedRidersName.myArrayList||$scope.planDetails.selectedRidersName),
CommonServiceTerm.hideSinglePayOptionType($scope.planDetails.planId)?($scope.payOptionTypeList=[{value:1,displayValue:"Regular"},{value:3,displayValue:"Limited Pay"}],CommonServiceTerm.isETZindagiPlan($scope.planDetails.planId)&&($scope.payOptionTypeList=[{value:1,displayValue:"Regular"},{value:3,displayValue:"Pay Till 60"}]),$scope.customerInfo.age>=18&&$scope.customerInfo.age<=50&&$scope.customerInfo.coverageUpto>=65&&$scope.customerInfo.coverageUpto<=80||($scope.showPayOption=!1,$scope.type.payOptionType=1)):1*$scope.planDetails.planId===787||1*$scope.planDetails.planId===789?$scope.payOptionTypeList=[{value:1,displayValue:"Regular"},{value:2,displayValue:"Single Pay"}]:CommonServiceTerm.isExidePlan(1*$scope.planDetails.planId)?$scope.payOptionTypeList=[{value:1,displayValue:"Regular"},{value:2,displayValue:"Single Pay"},{value:3,displayValue:"Extended Term"}]:CommonServiceTerm.isIndiaFirstPlan($scope.planDetails.planId)?$scope.payOptionTypeList=[{value:1,displayValue:"Regular"},{value:2,displayValue:"Single Pay"}]:CommonServiceTerm.isBSLIUltimaPlan($scope.planDetails.planId)?$scope.payOptionTypeList=[{value:1,displayValue:"Regular"},{value:3,displayValue:"Limited Pay"}]:CommonServiceTerm.isICICITropPlan(1*$scope.planDetails.planId)?(($scope.customerInfo.coverageUpto-$scope.customerInfo.age<15||$scope.customerInfo.coverageUpto-$scope.customerInfo.age>30||$scope.customerInfo.coverageUpto>70)&&($scope.showPayOption=!1),$scope.payOptionTypeList=[{value:1,displayValue:"Regular"},{value:3,displayValue:"Limited Pay"}]):1*$scope.planDetails.planId===954||1*$scope.planDetails.planId===9542?$scope.payOptionTypeList=[{value:1,displayValue:"Regular"},{value:3,displayValue:"Limited Pay"}]:$scope.payOptionTypeList=angular.copy(payOptionList),$scope.planDetails.pptOptions&&$scope.planDetails.pptOptions.myArrayList){if($scope.pptOptions=$scope.planDetails.pptOptions.myArrayList,1*$scope.planDetails.supplierId===5){var tempPPT=1*$scope.planDetails.policyTerm-5;1*$scope.customerInfo.paymentTerm+1*$scope.customerInfo.age>=65?tempPPT===60-1*$scope.customerInfo.age?$scope.pptOptions.splice(3,0,60-1*$scope.customerInfo.age):($scope.pptOptions.splice(3,0,60-1*$scope.customerInfo.age),$scope.pptOptions.splice(4,0,tempPPT)):$scope.pptOptions.splice(3,0,tempPPT)}if(1*$scope.planDetails.supplierId===24&&1*$scope.type.payOptionType===3){var limit=CommonServiceTerm.getMaxPaymentTermForET($scope.customerInfo.age,$scope.planDetails.policyTerm);$scope.pptOptions=CommonServiceTerm.getListTillLast($scope.pptOptions,limit)}$scope.type.ppt=$scope.planDetails.ppt.toString(),$scope.pptOptions.indexOf(1*$scope.type.ppt)==-1&&$scope.pptOptions[0]&&($scope.type.ppt=$scope.pptOptions[0].toString())}if($scope.hideInputFields.total=void 0!==totalCover&&null!==totalCover&&0==totalCover,$scope.rider.riderErrorMsg=angular.isDefined($scope.planDetails.riderErrorMsg)?angular.copy($scope.planDetails.riderErrorMsg):"",$scope.hideInputFields.sumAssured=void 0!==sumAssured&&null!==sumAssured&&0==sumAssured&&$scope.planDetails.monthlyIncome>0,$scope.hideInputFields.sumAssured=$scope.hideInputFields.sumAssured||hideSumAssured($scope.planDetails.planId),$scope.hideInputFields.monthly=void 0!==$scope.planDetails.monthlyIncome&&null!==$scope.planDetails.monthlyIncome&&0==$scope.planDetails.monthlyIncome,908===$scope.planDetails.planId&&($scope.hideInputFields.monthly=!1),$scope.hideInputFields.oneTime=void 0!==oneTimPayout&&null!==oneTimPayout&&0==oneTimPayout,$scope.isOneTimePayoutEditable($scope.planDetails.planId)||0!=$scope.customerInfo.staticOneTImePayout||($scope.hideInputFields.oneTime=!0),$scope.coverages=$scope.planDetails.coverages.sort(),$scope.premiumMode=$scope.planDetails.modeOfPremium,$scope.customerInfo.age&&$scope.planDetails.policyTerm?$scope.customerInfo.coverageUpto=(1*$scope.customerInfo.age+1*$scope.planDetails.policyTerm).toString():$scope.customerInfo.coverageUpto=$scope.coverages.indexOf(65)>-1?65:CommonServiceTerm.closestToNumber($scope.coverages,65),resetCoverage(),CommonServiceTerm.isExidePlan($scope.planDetails.planId)&&3===$scope.type.payOptionType&&($scope.coverages=CommonServiceTerm.calculateCoveragesForExide($scope.customerInfo),$scope.customerInfo.coverageUpto=$scope.customerInfo.coverageUpto||angular.copy($scope.coverages[0])),CommonServiceTerm.isExidePlan($scope.planDetails.planId)&&($scope.dObArrayObj.year=CommonServicePreQuotesTerm.getYearList($scope.planDetails.supplierId,21)),CommonServiceTerm.isICICITropPlan($scope.planDetails.planId)&&($scope.dObArrayObj.year=CommonServicePreQuotesTerm.getYearList($scope.planDetails.supplierId,22,55)),CommonServiceTerm.isLICPlan($scope.planDetails.planId)?$scope.customerInfo.coverageUpto=$scope.planDetails.newCoverageUpto.toString():$scope.customerInfo.coverageUpto=$scope.planDetails.newCoverageUpto.toString(),$scope.planDetails.riderPermiumsValue=0,$scope.planDetails.riderDetails?($scope.riderDetails=angular.copy($scope.planDetails.riderDetails),$scope.riderDetails=ProductService.populateRiderDetails($scope.riderDetails,$scope.customerInfo.policyTerm)):$scope.riderDetails=[],0==$scope.selectedRiderNames.length){var ridersSelected=CommonServicePreQuotesTerm.checkSelectedRiders($scope.riderDetails);ridersSelected&&$scope.selectedRiderNames.push("There")}void 0!=$scope.riderDetails&&void 0!==$scope.riderDetails.riders&&($scope.riderDetails.riders=$scope.riderDetails.riders.sortByProp("riderId"),_.each($scope.riderDetails.riders,function(val){if(val.sumAssuredPercentagePresent=val.sumAssuredPercentage>0,val.riderDesShow=!1,val.isSelected=val.isSelected&&!val.isHidden,2==$scope.type.payOptionType&&(val.policyTermDetails.maxPolicyTerm=1),!isKotakPlan||$scope.planDetails.planId!=$scope.planDetails.basePlanId||10!=val.categoryId&&38!=val.categoryId||(val.isSelected=!1),CommonServiceTerm.isAegonItermPlusPlan($scope.planDetails.planId)&&(val.isRiderDisabled=!0,val.isSelected=!0),CommonServiceTerm.isSbiPoornaSuraksha($scope.planDetails.planId)&&15===val.categoryId&&(val.isRiderDisabled=!0,val.isSelected=!0,$scope.planDetails.premiumViewModel={basicPremium:$scope.planDetails.basicPremium-val.riderPremium,monthlyTotalPremium:$scope.planDetails.monthlyTotalPremium-val.monthlyRiderPremium,halfYearlyTotalPremium:$scope.planDetails.halfYearlyTotalPremium-val.halfYearlyRiderPremium,quarterlyTotalPremium:$scope.planDetails.quarterlyTotalPremium}),(768==$scope.planDetails.planId||767==$scope.planDetails.planId||766==$scope.planDetails.planId||892==$scope.planDetails.planId||893==$scope.planDetails.planId||894==$scope.planDetails.planId)&&val.errorMessage.length>0){var errorMessageArray=val.errorMessage.split(" "),polTerm=_.find(errorMessageArray,function(errVal){return!isNaN(errVal)});if(polTerm){var newErrorMessage="This option only covers you till "+polTerm+" years.",newErrorMessagePart=" Click here to reduce coverage";val.isSelected=!1,val.errorMessage=angular.copy(""),val.newErrorMessage=angular.copy(newErrorMessage),val.secondError=newErrorMessagePart,val.changePolTerm=angular.copy(polTerm)}}val.isSelected&&selectedRiders.push(val.categoryId)})),clickedToChange&&(selectedRiders=[],CommonServicePreQuotesTerm.ETSecurePlans($scope.planDetails.planId)&&_.each($scope.riderDetails.riders,function(val){1*val.categoryId!==15&&1*val.categoryId!==111||(val.isSelected=!1),val.isSelected&&selectedRiders.push(val.categoryId)}),clickedToChange=!1,$scope.setRiderSelected(selectedRiders),void 0===riderSelected||null===riderSelected||CommonServiceTerm.isEmptyObject(riderSelected)||$scope.updateRiderInfo(riderSelected)),$scope.errorRiderIds=angular.isDefined($scope.planDetails.errorRiders)?angular.copy($scope.planDetails.errorRiders):[],1*$scope.planDetails.supplierId===24&&($scope.rider.riderErrorMsg=$scope.rider.riderErrorMsg?$scope.rider.riderErrorMsg:isHospiCashInLimitForET($scope.riderDetails.riders)?"":"Premium of Hospi Cash cannot be greater than plan premium",$scope.planDetails.riderErrorMsg=angular.copy($scope.rider.riderErrorMsg)),1*$scope.planDetails.supplierId!==4&&1*$scope.planDetails.supplierId!==41&&1*$scope.planDetails.supplierId!==1124||void 0===$scope.riderDetails||null===$scope.riderDetails||void 0===$scope.riderDetails.riders||null===$scope.riderDetails.riders||((!$scope.rider.riderErrorMsg||$scope.rider.riderErrorMsg&&$scope.rider.riderErrorMsg.length>0&&1*$scope.planDetails.supplierId===41&&1===selectedRiders.length)&&(isAccidentalDeathInLimit($scope.riderDetails.riders).inLimit||($scope.rider.riderErrorMsg="Premium of "+isAccidentalDeathInLimit($scope.riderDetails.riders).riderName+" cannot be more than 30% of plan premium")),$scope.planDetails.riderErrorMsg=angular.copy($scope.rider.riderErrorMsg)),1*$scope.planDetails.supplierId===1124&&void 0!==$scope.riderDetails&&null!==$scope.riderDetails&&void 0!==$scope.riderDetails.riders&&null!==$scope.riderDetails.riders&&((!$scope.rider.riderErrorMsg||$scope.rider.riderErrorMsg&&$scope.rider.riderErrorMsg.length>0)&&(isRiderPremiumGreaterThanBasePremium($scope.riderDetails.riders).inLimit||($scope.rider.riderErrorMsg="Premium of "+isRiderPremiumGreaterThanBasePremium($scope.riderDetails.riders).riderName+" cannot be more than 100% of plan premium")),$scope.planDetails.riderErrorMsg=angular.copy($scope.rider.riderErrorMsg)),void 0!==$scope.planDetails.featuresExclusion&&($scope.benefits=CommonServicePreQuotesTerm.getAllFeatures($scope.planDetails.featuresExclusion,"benefits"),$scope.features=CommonServicePreQuotesTerm.getAllFeatures($scope.planDetails.featuresExclusion,"features"),$scope.eligibility=CommonServicePreQuotesTerm.getAllFeatures($scope.planDetails.featuresExclusion,"eligibility"),$scope.cancerEligibility=CommonServicePreQuotesTerm.getAllFeatures($scope.planDetails.featuresExclusion,"cancer-eligibility"),$scope.exclusions=CommonServicePreQuotesTerm.getAllFeatures($scope.planDetails.featuresExclusion,"exclusions"));var totalPyoutAmountBoundry=CommonServicePreQuotesTerm.getTotalPayoutAmountBoundry($scope.planDetails.planId,$scope.planDetails.policyTerm,$scope.customerInfo.age,$scope.customerInfo.childAge);$rootScope.amountBoundry.totalPayout.min=totalPyoutAmountBoundry.min,$rootScope.amountBoundry.totalPayout.max=totalPyoutAmountBoundry.max;var monthlyAmountBoundry=CommonServicePreQuotesTerm.getMonthlyAmountBoundry($scope.planDetails.planId,$scope.planDetails.policyTerm,$scope.customerInfo.age,$scope.customerInfo.childAge);$rootScope.amountBoundry.monthly.min=monthlyAmountBoundry.min,$rootScope.amountBoundry.monthly.max=monthlyAmountBoundry.max;var sumAssuredAmountBoundry=CommonServicePreQuotesTerm.getSumAssuredAmountBoundry($scope.planDetails.planId,$scope.planDetails.policyTerm,$scope.customerInfo.age,$scope.customerInfo.childAge);$rootScope.amountBoundry.sumAssured.min=sumAssuredAmountBoundry.min,$rootScope.amountBoundry.sumAssured.max=sumAssuredAmountBoundry.max;var oneTimeAmountBoundry=CommonServicePreQuotesTerm.getOneTimeAmountBoundry($scope.planDetails.planId,$scope.planDetails.policyTerm,$scope.customerInfo.age,$scope.customerInfo.childAge);if($rootScope.amountBoundry.oneTime.min=oneTimeAmountBoundry.min,$rootScope.amountBoundry.oneTime.max=oneTimeAmountBoundry.max,failedStatus||([780,781,782,783,703].indexOf(1*$scope.planDetails.planId)>-1?($scope.statusError.errorMessage="",$scope.statusError.statusFailed=!1):($scope.statusError.errorMessage=$scope.planDetails.errorMessage,$scope.statusError.statusFailed=!!$scope.planDetails.errorMessage&&$scope.planDetails.errorMessage.length>0)),CommonServiceTerm.isEtPlan($scope.planDetails.planId)&&$scope.quotesObj.isMonthly&&$scope.planDetails.monthlyTotalPremium<CommonServiceTerm.getEtMinimumMonthlyPremium()&&($scope.statusError.statusFailed=!0,$scope.statusError.errorMessage="Base monthly premium is Rs."+$scope.planDetails.monthlyTotalPremium+" which is less than minimum premium amount of Rs."+CommonServiceTerm.getEtMinimumMonthlyPremium()),$scope.customerInfo.annualIncome&&CommonServiceTerm.removeCommas($scope.customerInfo.annualIncome)&&recalculateTotalPayoutMaxForPNB(failedStatus),etzPlusPremiumValidations(),indiaFirstPremiumValidations(),void 0===$scope.riderDetails||void 0===$scope.riderDetails.riders||1*$scope.planDetails.planId!==1*$scope.planDetails.basePlanId&&0!=$scope.planDetails.basePlanId){$scope.planDetails.montlyTotalPremiumWithRiders=angular.copy($scope.planDetails.monthlyTotalPremium),$scope.planDetails.quarterlyTotalPremiumWithRiders=angular.copy($scope.planDetails.quarterlyTotalPremium),$scope.planDetails.halfYearlyTotalPremiumWithRiders=angular.copy($scope.planDetails.halfYearlyTotalPremium),1*$scope.planDetails.planId!==787&&1*$scope.planDetails.planId!==789||($scope.planDetails.totalPremiumWithRiders=angular.copy($scope.planDetails.basicPremium));var etPlanIds=[790,795,794,791,792,7901,7902,7911,7912,7921,7922,7941,7942,7951,7952,3178,3227,3199,3180,3179,3189,3238,3228,3229,3448];if(etPlanIds.indexOf(1*$scope.planDetails.planId)!=-1||CommonServiceTerm.isKotakPlan($scope.planDetails.planId)||CommonServiceTerm.isIndiaFirstPlan($scope.planDetails.planId)){var premiumObj=CommonServicePreQuotesTerm.addDifferentPayoutRiderPremiums($scope.planDetails,$scope.riderDetails.riders);$scope.planDetails.montlyTotalPremiumWithRiders=premiumObj.monthlyPremium,$scope.planDetails.quarterlyTotalPremiumWithRiders=premiumObj.quarterlyTotalPremium,$scope.planDetails.halfYearlyTotalPremiumWithRiders=premiumObj.halfYearlyPremium,$scope.planDetails.totalPremiumWithRiders=premiumObj.totalPremium,_.each($scope.riderDetails.riders,function(rider){(rider.newErrorMessage||rider.isRiderDisabled||rider.isHidden)&&rider.isSelected&&($scope.planDetails.montlyTotalPremiumWithRiders-=rider.monthlyRiderPremium,$scope.planDetails.quarterlyTotalPremiumWithRiders-=rider.quarterlyRiderPremium,$scope.planDetails.halfYearlyTotalPremiumWithRiders-=rider.halfYearlyRiderPremium,$scope.planDetails.totalPremiumWithRiders-=rider.riderPremium)})}}else{var premiumObj=CommonServicePreQuotesTerm.addDifferentPayoutRiderPremiums($scope.planDetails,$scope.riderDetails.riders);$scope.planDetails.montlyTotalPremiumWithRiders=premiumObj.monthlyPremium,$scope.planDetails.quarterlyTotalPremiumWithRiders=premiumObj.quarterlyTotalPremium,$scope.planDetails.halfYearlyTotalPremiumWithRiders=premiumObj.halfYearlyPremium,(CommonServiceTerm.isPNBPlan(1*planId)||1*$scope.planDetails.planId===787||1*$scope.planDetails.planId===789||isKotakPlan&&$scope.planDetails.planId==$scope.planDetails.basePlanId||CommonServiceTerm.isAegonItermPlusPlan($scope.planDetails.planId))&&($scope.planDetails.totalPremiumWithRiders=premiumObj.totalPremium)}if($scope.showRiderHead=!!$scope.riderDetails&&CommonServicePreQuotesTerm.isAllRidersAvailable($scope.riderDetails.riders),setViewPreiums($scope.planDetails),toggleCiPayout(),toggleDeathBenefitPayout(),showPlanInfoIcon(),populateTotalPayoutDropDownValues(),togglelumpsumBenefitPercentage(),(CommonServiceTerm.isAegoniTermForverPlan($scope.planDetails.planId)||CommonServiceTerm.isIndiaFirstPlan($scope.planDetails.planId))&&($scope.planListShowObj.showLogo=!0),CommonServiceTerm.isIndiaFirstPlan($scope.planDetails.planId)&&($scope.planListShowObj.showLogo=!0,$scope.showPlanSwitchOption=!0,$scope.showPlanSwitchOptions.option1="Lumpsum Options",$scope.showPlanSwitchOptions.option2="Income Options",$scope.planDetails.isOneTimePlan?($scope.planTypeSelected.value=1,planOptionsInfo.selectedPlanType="isOneTimePlan"):($scope.planDetails.isLevelMonthlyPlan||$scope.planDetails.isIncreasingMonthlyPlan)&&($scope.planTypeSelected.value=2,planOptionsInfo.selectedPlanType="isLevelMonthlyPlan"),planOptionsInfo.selectedPlanId=$scope.planDetails.planId,1*$scope.planDetails.basePlanId!==$scope.planDetails.planId)){var obj=_.find($scope.planList,function(plan){return 1*plan.planId===$scope.planDetails.basePlanId});setViewPreiums(null!==obj&&void 0!==obj?obj:$scope.planDetails)}if(CommonServiceTerm.isKotakPlan($scope.planDetails.planId)&&($scope.planListShowObj.showLogo=!0,$scope.showPlanSwitchOption=!0,$scope.showPlanSwitchOptions.option1="Immediate Payout",$scope.showPlanSwitchOptions.option2="Level Recurring Payout",$scope.showPlanSwitchOptions.option3="Increasing Recurring Payout",$scope.planDetails.isOneTimePlan?($scope.planTypeSelected.value=1,planOptionsInfo.selectedPlanType="isOneTimePlan"):$scope.planDetails.isLevelMonthlyPlan?($scope.planTypeSelected.value=2,planOptionsInfo.selectedPlanType="isLevelMonthlyPlan"):$scope.planDetails.isIncreasingMonthlyPlan&&($scope.planTypeSelected.value=3,planOptionsInfo.selectedPlanType="isIncreasingMonthlyPlan"),planOptionsInfo.selectedPlanId=$scope.planDetails.planId,1*$scope.planDetails.basePlanId!==$scope.planDetails.planId)){var obj=_.find($scope.planList,function(plan){return 1*plan.planId===$scope.planDetails.basePlanId});setViewPreiums(null!==obj&&void 0!==obj?obj:$scope.planDetails)}if(CommonServiceTerm.isETZindagiPlan($scope.planDetails.planId)&&($scope.customerInfo.sumAssured=1e3*Math.floor(parseInt($scope.customerInfo.sumAssured)/1e3),$scope.showPlanSwitchOption=!0,$scope.showPlanSwitchOptions.option1="Level SumAsured",$scope.showPlanSwitchOptions.option2="Decreasing SumAsured",$scope.planDetails.isLevelMonthlyPlan?($scope.planTypeSelected.value=1,planOptionsInfo.selectedPlanType="isLevelMonthlyPlan"):$scope.planDetails.isIncreasingMonthlyPlan&&($scope.planTypeSelected.value=2,planOptionsInfo.selectedPlanType="isIncreasingMonthlyPlan"),planOptionsInfo.selectedPlanId=$scope.planDetails.planId,1*$scope.planDetails.basePlanId!==$scope.planDetails.planId)){var obj=_.find($scope.planList,function(plan){return 1*plan.planId===$scope.planDetails.basePlanId});setViewPreiums(null!==obj&&void 0!==obj?obj:$scope.planDetails)}if(CommonServiceTerm.isHdfc3dPlan($scope.planDetails.planId)){if($scope.planListShowObj.showLogo=!0,$scope.showPlanSwitchOption=!0,CommonServiceTerm.isUndefinedOrNullOrEmpty($scope.planDetails.isIncomeOptionPlan)?$scope.planTypeSelected.value=1:$scope.planTypeSelected.value=2,1*$scope.planDetails.basePlanId!==$scope.planDetails.planId){var obj=_.find($scope.planList,function(plan){return 1*plan.planId===$scope.planDetails.basePlanId});setViewPreiums(null!==obj&&void 0!==obj?obj:$scope.planDetails)}$scope.showObject.incomeTerm=$scope.planDetails.hasOwnProperty("incomeTerm")&&1*$scope.planDetails.incomeTerm!=-1;var incomeTerm=$scope.planDetails.incomeTerm;$scope.isOneTimePayoutEditable($scope.planDetails.planId)||(incomeTerm=$scope.customerInfo.incomeTerm&&1*$scope.customerInfo.incomeTerm>=0?$scope.customerInfo.incomeTerm:incomeTerm,incomeTerm=incomeTerm&&incomeTerm!=-1?incomeTerm:20,$scope.showObject.incomeTerm=!1),$scope.customerInfo.topup=$scope.planDetails.topUpPercentage,$scope.customerInfo.incomeTerm=incomeTerm,$scope.showObject.premiumMode=!!($scope.planDetails.modeOfPremium&&$scope.planDetails.modeOfPremium.length>0),$scope.customerInfo.increasingIncomePercentage=$scope.customerInfo.increasingIncomePercentage||$scope.planDetails.increasingIncomePercentage,$scope.customerInfo.increasingIncomePercentage==-1&&($scope.customerInfo.increasingIncomePercentage=0),$scope.showObject.topup=$scope.planDetails.hasOwnProperty("topUpPercentage")&&1*$scope.planDetails.topUpPercentage>0,$scope.showObject.increasingIncome=$scope.planDetails.hasOwnProperty("increasingIncomePercentage")&&1*$scope.planDetails.increasingIncomePercentage!=-1,planOptionsInfo.selectedPlanId=$scope.planDetails.planId}if((CommonServiceTerm.isPNBPlan($scope.planDetails.planId)||CommonServiceTerm.isBSLIPlan($scope.planDetails.planId))&&($scope.showObject.lastName=!0,seperateFirstAndLastName($scope.customerInfo.fullName)),CommonServiceTerm.isPNBPlan($scope.planDetails.planId)&&($scope.showObject.lifeProtectionRider=!0,$scope.riderDetails=ProductService.addLifeStageProtectionRider($scope.riderDetails),$scope.checkIfProfileAllowed()),CommonServiceTerm.isETZindagiPlan($scope.planDetails.planId)&&($scope.riderDetails=ProductService.addLifeStageProtectionRider($scope.riderDetails)),$scope.customerInfo.lumpsumBenefitPercentage=$scope.planDetails.lumpsumBenefitPercentage.toFixed(2),CommonServiceTerm.isBSLIPlan($scope.planDetails.planId)){var birlaRiderMaxMaturityAge=70;_.each($scope.riderDetails.riders,function(rider){1*rider.policyTermDetails.maxPolicyTerm;$scope.customerInfo.age+1*rider.policyTermDetails.maxPolicyTerm<=birlaRiderMaxMaturityAge?rider.policyTermDetails.maxPolicyTerm=rider.policyTermDetails.maxPolicyTerm:rider.policyTermDetails.maxPolicyTerm=birlaRiderMaxMaturityAge-$scope.customerInfo.age,rider.selectedPolicyTerm=angular.copy(rider.policyTermDetails.maxPolicyTerm)})}$scope.showObject.premiumMode=!!($scope.planDetails.modeOfPremium&&$scope.planDetails.modeOfPremium.length>0),$scope.planDetails.totalPayOutOptions&&$scope.planDetails.totalPayOutOptions.myArrayList&&$scope.planDetails.totalPayOutOptions.myArrayList.length>0&&($scope.planDetails.totalPayoutTermOptions=$scope.planDetails.totalPayOutOptions.myArrayList,$scope.customerInfo.totalPayOutTerm=$scope.customerInfo.totalPayOutTerm||$scope.planDetails.totalPayoutTermOptions[0])}function indiaFirstPremiumValidations(){if($scope.planDetails){var minimumPremium,basePremium,preText="Yearly premium";!$scope.quotesObj.isMonthly&&$scope.planDetails.basicPremium&&(basePremium=$scope.planDetails.basicPremium,minimumPremium=Math.round(3540)),$scope.quotesObj.isMonthly&&$scope.planDetails.monthlyTotalPremium&&(basePremium=$scope.planDetails.monthlyTotalPremium,minimumPremium=Math.round(261*1.18*1),preText="Monthly premium"),$scope.quotesObj.isQuarterly&&$scope.planDetails.quarterlyTotalPremium&&(basePremium=$scope.planDetails.quarterlyTotalPremium,minimumPremium=Math.round(777*1.18*1),preText="Quarterly premium"),$scope.quotesObj.isHalfYearly&&$scope.planDetails.halfYearlyTotalPremium&&(basePremium=$scope.planDetails.halfYearlyTotalPremium,minimumPremium=Math.round(1812.48),preText="Half-Yearly premium"),basePremium&&minimumPremium&&CommonServiceTerm.isIndiaFirstPlan($scope.planDetails.planId)&&basePremium<minimumPremium&&($scope.statusError.statusFailed=!0,$scope.statusError.errorMessage=preText+" is Rs. "+basePremium+" which is less than minimum premium amount of Rs. "+minimumPremium)}}function etzPlusPremiumValidations(){var minimumPremium,basePremium;!$scope.quotesObj.isMonthly&&$scope.planDetails.basicPremium&&(basePremium=$scope.planDetails.basicPremium,minimumPremium=3e3),$scope.quotesObj.isMonthly&&$scope.planDetails.monthlyTotalPremium&&(basePremium=$scope.planDetails.monthlyTotalPremium,minimumPremium=500),$scope.quotesObj.isQuarterly&&$scope.planDetails.quarterlyTotalPremium&&(basePremium=$scope.planDetails.quarterlyTotalPremium,minimumPremium=1250),$scope.quotesObj.isHalfYearly&&$scope.planDetails.halfYearlyTotalPremium&&(basePremium=$scope.planDetails.halfYearlyTotalPremium,minimumPremium=2e3),basePremium&&minimumPremium&&CommonServiceTerm.isETZindagiPlan($scope.planDetails.planId)&&basePremium<minimumPremium&&($scope.statusError.statusFailed=!0,$scope.statusError.errorMessage="Base monthly premium is Rs."+basePremium+" which is less than minimum premium amount of Rs."+minimumPremium)}function setDropDownModalForPayouts(val){var type=typeof val;return void 0!=type&&"string"===type&&(val=parseInt(CommonServiceTerm.removeCommas(val))),val}function populateTotalPayoutDropDownValues(){$scope.totalPayoutOptionModal=setDropDownModalForPayouts($scope.customerInfo.totalPayout),$scope.monthlyPayoutOptionModal=setDropDownModalForPayouts($scope.customerInfo.monthlyPayout),$scope.totalPayoutOptions=CommonServiceTerm.populateOptionsList($rootScope.amountBoundry.totalPayout.min,$rootScope.amountBoundry.totalPayout.max,1e5),$scope.monthlyPayoutOptions=CommonServiceTerm.populateOptionsList($rootScope.amountBoundry.monthly.min,$rootScope.amountBoundry.monthly.max,1e4)}function isIncreasingMonthlyPlanExist(){var exist=!1;return _.each($scope.planList,function(val){val.isIncreasingMonthlyPlan&&(exist=!0)}),exist}function isPlanTypeExist(planType){var exist=!1;return _.each($scope.planList,function(val){val[planType]&&(exist=!0)}),exist}function seperateFirstAndLastName(nameValue){$scope.customerInfo.firstName=CommonServiceTerm.getFirstName(nameValue),$scope.customerInfo.lastName=CommonServiceTerm.getLastName(nameValue)||($scope.customerInfo.lastName?$scope.customerInfo.lastName:""),$scope.customerInfo.fullName=angular.copy($scope.customerInfo.firstName)}function hideSumAssured(planId){var planIds=[751,780,781,782,783,764,765];return planIds.indexOf(planId)>-1}function recalculateTotalPayoutMaxForPNB(failedStatus){1*$scope.planDetails.supplierId===31&&$scope.customerInfo.annualIncome&&CommonServiceTerm.removeCommas($scope.customerInfo.annualIncome)>=$scope.planDetails.minimumAnnualIncome&&($rootScope.amountBoundry.totalPayout.max=CommonServicePreQuotesTerm.recalculateTotalPayoutAccToAI($scope.customerInfo,$rootScope.amountBoundry.totalPayout.max),$rootScope.amountBoundry.totalPayout.max<$rootScope.amountBoundry.totalPayout.min&&($rootScope.amountBoundry.totalPayout.min=angular.copy($rootScope.amountBoundry.totalPayout.max)),$rootScope.amountBoundry.totalPayout.max<1e6?($scope.statusError.statusFailed=!0,$scope.notEligible=!0,$scope.statusError.errorMessage="This plan is not available for your profile",$("html, body").animate({scrollTop:0},"slow")):"failed"!=failedStatus&&($scope.statusError.statusFailed=!1,$scope.statusError.errorMessage="",$scope.notEligible=!1),$rootScope.amountBoundry.totalPayout.max>25e7&&($rootScope.amountBoundry.totalPayout.max=25e7),isError=!CommonServicePreQuotesTerm.isValidAmount($scope.customerInfo.totalPayout,CommonServicePreQuotesTerm.isMonthlyJourney(),CommonServicePreQuotesTerm.isCancerJourney(),$rootScope.amountBoundry.totalPayout,planId,"total"),$scope.errorObject.totalPayoutError=isError),populateTotalPayoutDropDownValues()}function kotakSumAssuredEditable(planId){var planId=parseInt(planId,10),isKotakPlan=[884,885,2961,2941,2991,2971];return isKotakPlan.indexOf(planId)!=-1}function isHospiCashInLimitForET(riders){var inLimit=!0,obj={};return obj=_.find(riders,function(val){return val.isSelected&&47==val.categoryId}),obj&&(inLimit=obj.riderPremium<=$scope.planDetails.basicPremium,inLimit||$scope.errorRiderIds.push(obj.riderId)),inLimit}function isAccidentalDeathInLimit(riders){var retObj={inLimit:!0,categoryId:0},obj={};return obj=_.find(riders,function(val){return val.isSelected&&!val.isHidden&&(10==val.categoryId||12==val.categoryId)}),obj&&(retObj.inLimit=obj.riderPremium/1.18<=$scope.planDetails.basicPremium/1.18*.3,retObj.riderName=obj.riderName,retObj.inLimit||$scope.errorRiderIds.push(obj.riderId)),retObj}function isRiderPremiumGreaterThanBasePremium(riders,categoryId){var retObj={inLimit:!0,categoryId:0},obj={};return obj=_.find(riders,function(val){return val.isSelected&&!val.isHidden&&val.categoryId==categoryId}),obj&&(retObj.inLimit=obj.riderPremium<$scope.planDetails.basicPremium,retObj.riderName=obj.riderName,retObj.inLimit||$scope.errorRiderIds.push(obj.riderId)),retObj}function resetCoverage(){var age=1*$scope.customerInfo.age,limit=$scope.coverages[$scope.coverages.length-1];GenericService.isIPruSmartPlan($scope.planDetails.planId)&&(1*$scope.type.payOptionType===3?limit=age+40:1*$scope.type.payOptionType===2&&(limit=age+20),1*$scope.customerInfo.coverageUpto>limit&&($scope.customerInfo.coverageUpto=angular.copy(limit)))}function addAddtionalInfoQuestions(){var planId=$scope.planDetails.planId;$scope.childData={dobDate:null,dobMonth:null,dobYear:null},$cookies.get("childDob")&&($scope.childData=CommonServicePreQuotesTerm.extractDOB($cookies.get("childDob")),updateChildDOB($scope.childData)),$scope.errorObject={emptyDob:!1,inValidDob:!1,ageAboveMax:!1,ageBelowMin:!1,emptyEmail:!1,emptyFirstName:!1},$scope.showNationalityOptions=!!CommonServiceTerm.isPNBPlan(planId),$scope.showOccupationOptions=!!CommonServiceTerm.isPNBPlan(planId),$scope.showEducationOptions=!!CommonServiceTerm.isPNBPlan(planId),$scope.showChildDobOptions=!!CommonServiceTerm.isChildPlan(planId),($scope.showNationalityOptions||$scope.showOccupationOptions||$scope.showEducationOptions)&&ProductService.getAdditionalQA(enquiryId).then(function(result){result.data.nationality&&($scope.customerInfo.nationality=result.data.nationality),result.data.occupation&&($scope.customerInfo.occupation=result.data.occupation),result.data.educationalQualification&&($scope.customerInfo.education=result.data.educationalQualification),CommonServiceTerm.isPNBPlan($scope.planDetails.planId)&&$scope.customerInfo.nationality&&("nri"===$scope.customerInfo.nationality.toLowerCase()||"pio"===$scope.customerInfo.nationality.toLowerCase())&&($scope.customerInfo.isNri="NRI"===$scope.customerInfo.nationality,$scope.customerInfo.isPio="PIO"===$scope.customerInfo.nationality,$scope.updateRiderDetails())}),$scope.showNationalityOptions&&($scope.nationalityOptions=[{value:"Resident Indian"},{value:"NRI"},{value:"PIO"}]),$scope.showOccupationOptions&&($scope.occupationOptions=[{value:"Service"},{value:"Self employed"},{value:"Professional"},{value:"Business"},{value:"Others"}]),$scope.showEducationOptions&&($scope.educationOptions=[{value:"Post Grad & Above"},{value:"Graduate"},{value:"Diploma"},{value:"12th pass"}])}function updateRider(rider){var isError=!1,selectedRiders=[];_.each($scope.riderDetails.riders,function(val){val.isSelected&&selectedRiders.push(val.categoryId),val.sumAssuredDetails&&val.sumAssuredDetails.isError&&(isError=!0)}),$scope.setRiderSelected(selectedRiders),isError||$scope.updateRiderInfo(rider).then(function(){riderInfoPreserved=angular.copy($scope.riderDetails)})}function switchPlans(rider){1*$scope.planDetails.planId===820&&1*rider.categoryId===15&&rider.isSelected&&($scope.planDetails=_.find($scope.planList,function(val){if(1*val.planId===821)return val})),1*$scope.planDetails.planId!==818&&1*$scope.planDetails.planId!==819||(1*rider.categoryId===15&&rider.isSelected&&($scope.planDetails=_.find($scope.planList,function(val){if(1*val.planId===821)return val})),1*rider.categoryId===11&&rider.isSelected&&($scope.planDetails=_.find($scope.planList,function(val){if(1*val.planId===820)return val}))),1*$scope.planDetails.planId===818&&(1*rider.categoryId===101&&rider.isSelected&&($scope.planDetails=_.find($scope.planList,function(val){if(1*val.planId===819)return val})),1*rider.categoryId===38&&rider.isSelected&&($scope.planDetails=_.find($scope.planList,function(val){if(1*val.planId===819)return val}))),$scope.clickedPlan!==$scope.planDetails.planId&&($scope.clickedPlan=$scope.planDetails.planId,populateValuesFromPlanDetails())}function getPremiumMode(){$scope.quotesObj.isMonthly?$scope.customerInfo.premiumMode="Monthly":$scope.quotesObj.isHalfYearly?$scope.customerInfo.premiumMode="Half-Yearly":$scope.quotesObj.isQuarterly?$scope.customerInfo.premiumMode="Quarterly":$scope.customerInfo.premiumMode="Yearly",CommonServiceTerm.isEtPlan($scope.planDetails.planId)&&$scope.quotesObj.isMonthly&&$scope.planDetails.monthlyTotalPremium<CommonServiceTerm.getEtMinimumMonthlyPremium()?($scope.statusError.statusFailed=!0,$scope.statusError.errorMessage="Base monthly premium is Rs."+$scope.planDetails.monthlyTotalPremium+" which is less than minimum premium amount of Rs."+CommonServiceTerm.getEtMinimumMonthlyPremium()):$scope.planDetails.errorMessage?$scope.statusError.errorMessage=$scope.planDetails.errorMessage:($scope.statusError.errorMessage=$scope.planDetails.errorMessage,$scope.statusError.statusFailed=!!$scope.planDetails.errorMessage&&$scope.planDetails.errorMessage.length>0),etzPlusPremiumValidations(),indiaFirstPremiumValidations()}function setViewPreiums(plan){$scope.planDetails.viewBasicPremium=plan.basicPremium,$scope.planDetails.viewMonthlyTotalPremium=angular.copy(plan.monthlyTotalPremium),$scope.planDetails.viewQuarterlyTotalPremium=angular.copy(plan.quarterlyTotalPremium),$scope.planDetails.viewHalfYearlyTotalPremium=angular.copy(plan.halfYearlyTotalPremium),21===plan.supplierId&&($scope.planDetails.viewBasicPremium=Math.round(plan.annualPremiumWGST+plan.annualPremiumGST),
$scope.planDetails.viewMonthlyTotalPremium=Math.round(angular.copy(plan.monthlyPremiumGST+plan.monthlyPremiumWGST))),setRiderErrorMsg()}function setRiderErrorMsg(){var isKotakPlan=CommonServiceTerm.isKotakPlan($scope.planDetails.planId);_.each($scope.riderDetails.riders,function(val){if(isKotakPlan&&11==val.categoryId&&val.isSelected){var ciPremium=$scope.quotesObj.isMonthly?val.monthlyRiderPremium:val.riderPremium,planBasePremiumShown=$scope.planDetails.basicPremium;0==$scope.planDetails.monthlyTotalPremium?planBasePremiumShown=$scope.planDetails.basicPremium:$scope.planDetails.monthlyTotalPremium>0&&($scope.planDetails.monthlyTotalPremium>0&&!$scope.quotesObj.isMonthly?planBasePremiumShown=$scope.planDetails.viewBasicPremium:$scope.planDetails.monthlyTotalPremium>0&&$scope.quotesObj.isMonthly&&(planBasePremiumShown=$scope.planDetails.viewMonthlyTotalPremium)),ciPremium>planBasePremiumShown&&($scope.rider.riderErrorMsg=$scope.rider.riderErrorMsg||"Critical Illness Rider's premium is greater than Plan Base Premium.",$scope.planDetails.riderErrorMsg=angular.copy($scope.rider.riderErrorMsg))}})}$scope.showLoader=!0;var premiumMode=$cookies.get("monthPrem");$scope.quotesObj={isMonthly:!1,spouse:!1,isMulti:!1},$scope.quotesObj.isQuarterly=!1,$scope.quotesObj.isHalfYearly=!1,$scope.submitted=!1;var previousAnnualIncome=0;$scope.preserveAdditionalInfo={},$rootScope.footerLoad=!1,$scope.notEligible=!1,$scope.lifeProtectionRiderModel=!1,$scope.emptyTotalPayoutError=!1,$scope.disableLifeProtectionRider=!1,$scope.lastNameError=!1,$scope.maskedInput={mobileNo:"97XXXXXX12"},$scope.changePremiumMode=function(premMode){premMode&&"monthly"!=premMode.toLowerCase()?"half-yearly"==premMode.toLowerCase()?($scope.quotesObj.isMonthly=!1,$scope.quotesObj.isHalfYearly=!0,$scope.quotesObj.isQuarterly=!1):"yearly"==premMode.toLowerCase()?($scope.quotesObj.isMonthly=!1,$scope.quotesObj.isHalfYearly=!1,$scope.quotesObj.isQuarterly=!1):"quarterly"==premMode.toLowerCase()&&($scope.quotesObj.isMonthly=!1,$scope.quotesObj.isHalfYearly=!1,$scope.quotesObj.isQuarterly=!0):($scope.quotesObj.isMonthly=!0,$scope.quotesObj.isHalfYearly=!1,$scope.quotesObj.isQuarterly=!1),$cookies.put("monthPrem",premMode?premMode.toLowerCase():""),indiaFirstPremiumValidations()},$scope.showPlanSwitchOptions={option1:"Lumpsum Options",option2:" Lumpsum +  Income Options ",option3:""},$scope.changePremiumMode(premiumMode),$rootScope.fromApp=!(!$location.$$search.rSource||"pbmobileapp"!=$location.$$search.rSource.toLowerCase());var planOptionsInfo={selectedPlanId:0},supplierIdsSingLim=[2,4,22,24,116,117,10,3,5,9,41,1124,21,141,555],maxAgeSixtyPlans=[99,12],maxAgeFiftyFiveYearsSuppliers=[21];$scope.showPayOption=!0,$scope.selectedTermNotEmpty=!0,$scope.dObArrayObj={date:CommonServicePreQuotesTerm.populateDates(),month:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],year:CommonServicePreQuotesTerm.getYearList()},$scope.mobileLengthValidation={min:10,max:10};var payOptionType=$location.$$search.payOptionType,custId=-1,basePlan=0,planToSwitch=0,clickedToChange=!1,riderSelected={},payOptionList=[{value:1,displayValue:"Regular"},{value:2,displayValue:"Single Pay"},{value:3,displayValue:"Limited Pay"}];$scope.payOptionTypeList=angular.copy(payOptionList),$scope.type={payOptionType:$localStorage.payOptionType&&""!=$localStorage.payOptionType?1*$localStorage.payOptionType:1,ppt:$location.$$search.ppt||10},$scope.pptOptions=[],"SinglePay"===payOptionType?($scope.type.payOptionType=2,$scope.type.ppt=1):"LimitedPay"===payOptionType?$scope.type.payOptionType=3:"RegularPay"===payOptionType&&($scope.type.payOptionType=1),gtmObj.callGAOnPageLoad($location.$$url);var trackingCalled=!1,enquiryId=$location.$$search.enquiryId||$cookies.get("enquiryId");$location.$$search.enquiryId&&(CustomerService.setEnquiryCookie(enquiryId),$location.search("enquiryId",null).replace());var selectionAPICalled=!1,callSelection=$location.$$search.smsLead;enquiryId=CommonServiceTerm.getEnquiryId(),$scope.isLanding=!!enquiryId;var planId=$location.$$search.planId||$cookies.get("planId"),basePlanId=$cookies.get("basePlanId");$location.$$search.planId&&($cookies.put("planId",planId),$location.search("planId",null));var updatedData={},updateCustomerCalled=!1;$scope.hideObject={buyLoader:!0,showRedirectionError:!0,premDet:!1};var categoryIds=[];$scope.hideObject.premDet=!$rootScope.isMobileDevice,$scope.clickedPlan=planId,$scope.expandedToggle={},$scope.errorRiderIds=[],$scope.navObject={isFirst:!0},$scope.confirmObj={confirm:!0},$scope.country={name:""},$rootScope.$on("duScrollspy:becameActive",function($event,$element,$target){$timeout(function(){$scope.navObject.isFirst="nav1"==$element[0].id},100)}),$scope.nationalityValid=!0,$scope.occupationValid=!0,$scope.educationValid=!0,$scope.showPlanSwitchOption=!1,$scope.rider={riderErrorMsg:""},$scope.errorObject={totalPayoutError:!1,monthlyError:!1,oneTimeError:!1,sumAssuredError:!1,mobileError:!1,emailError:!1,cityError:!1,otherCountryCodeError:!1,nameError:!1,coverageError:!1},$scope.statusError={statusFailed:!1},$scope.annualError={annualIncomeError:!1},$scope.showObject={showAllCoverFields:!1,totalCover:!1,monthly:!1,lastName:!1,lifeProtectionRider:!1,ciPayout:!1,deathBenefitPayout:!1,planInfoIcon:!1,lumpsumBenefitPercentage:!1},$rootScope.amountBoundry={},$rootScope.amountBoundry={totalPayout:{min:1e6,max:2e8,step:0},oneTime:{min:1e6,max:2e8},sumAssured:{min:1e6,max:2e8},monthly:{min:3e4,max:2e6},coverage:{min:28,max:80},incomeTerm:{min:0,max:20}},$scope.focusObj={monthlyFocusOut:!0,oneTimeFocusOut:!0,sumAssuredFocusOut:!0,totalPayoutFocusOut:!0},$scope.hideInputFields={oneTime:!1,sumAssured:!1,monthly:!1,total:!1},$scope.expandedToggle={cover:!1,personal:!1,additional:!1,riders:!1},enquiryId?$scope.expandedToggle={cover:!1,personal:!1,additional:!0,riders:!0}:$scope.expandedToggle={cover:!0,personal:!0,additional:!0,riders:!1},$scope.offsetValues={first:145,second:150,third:150,fourth:150,fifth:0},$rootScope.isMobileDevice&&($scope.offsetValues={first:200,second:90,third:90,fourth:90,fifth:90}),$scope.planList=[],$rootScope.pageClass="product",$scope.planDetails={},$scope.coverages=[],$scope.premiumMode=[],$scope.incomeTerm=[],$scope.planDetails.riderPermiumsValue=0,$scope.benefits={},$scope.selectedRiderNames=[],$scope.keyFeatures={},$scope.eligibility={},$scope.cancerEligibility={},$scope.exclusions={},$scope.riderDetails={},$scope.planTypeSelected={value:1},$scope.planListShowObj={showLogo:!1},$scope.data={dobDate:null,dobMonth:null,dobYear:null},$scope.customerInfo={amount:$filter("addCommas")(1e7),totalPayout:"",oneTimePayout:"",monthlyPayout:"",sumAssured:"",coverageUpto:"",isTobacco:0,dob:null,gender:"1",fullName:"",emailId:"",city:{name:"",id:null,stateId:null},countryCode:392,otherCountryCode:0,mobileNo:"",annualIncome:""},$scope.spouse={tobacco:[{value:1,label:"Yes"},{value:0,label:"No"}],isWorking:[{value:1,label:"Yes"},{value:0,label:"No"}]},$scope.modifySelection={spouse:{age:null,isWorking:0,tobacco:0,dob:""},child:{age:null,dob:""}},$scope.isValidSpouseDetails=function(data){return!angular.isUndefined(data)&&!angular.isUndefined(data.spouse)&&(angular.isDefined(data.spouse)&&data.spouse&&angular.isDefined(data.spouse.age)&&data.spouse.age&&CommonServiceTerm.isSpouseAgeValid(data.spouse.age)&&null!==data.spouse.tobacco&&null!==data.spouse.isWorking)},$scope.toggleModal=function(status){$("#productSpouseProfileModal").modal(status)},$scope.isValidDateOfBirth=function(){return $scope.customerInfo.dob&&CommonServicePreQuotesTerm.isValidDateOfBirth($scope.customerInfo.dob)||!1},$scope.getMaxAge=function(){return maxAgeFiftyFiveYearsSuppliers.indexOf($scope.planDetails.supplierId)>-1?55:maxAgeSixtyPlans.indexOf($scope.planDetails.supplierId)>-1?60:CommonServiceTerm.isICICITropPlan($scope.planDetails.planId)?54:65},$scope.getMinAge=function(){return $scope.minAge=18,CommonServiceTerm.isExidePlan(1*$scope.planDetails.planId)&&($scope.minAge=21),CommonServiceTerm.isICICITropPlan(1*$scope.planDetails.planId)&&($scope.minAge=22),$scope.minAge},$scope.showViewMore=function(planId){var planList=[949,823,954];return planList.indexOf(planId)==-1};var planIdToSend=basePlanId&&basePlanId>0&&1*basePlanId!==1*planId?basePlanId:planId,incomeTerm=20,increasingIncomePercentage=$scope.isHdfcIncomeOptionIncreasingPlan?10:0,monthlyIncome=$scope.customerInfo.monthlyPayout?$scope.customerInfo.monthlyPayout:0,oneTimePayout=$scope.customerInfo.oneTimePayout?$scope.customerInfo.oneTimePayout:0,isEncrypted=!0,variantPlanId=CommonServiceTerm.getVariantPlanId($scope.planDetails.planId,$scope.planDetails.variantPlanId);ProductService.prefillData(planIdToSend,enquiryId,!1,$scope.type,oneTimePayout,incomeTerm,increasingIncomePercentage,monthlyIncome,oneTimePayout,variantPlanId,isEncrypted).then(function(result){if("failed"!==result.status){if(result.custInfo){custId=result.custInfo.custId;var leadId=result.custInfo.matrixLeadId;CustomerService.setEnquiryCookie(result.custInfo.encodedEnquiryId),$cookies.put("enquiryId",result.custInfo.encodedEnquiryId),leadId&&CommonServiceTerm.createRevisit({leadId:leadId,productId:$rootScope.cancerJourney?CommonServiceTerm.getCancerCareProductId():termConfigObj.getTermProductId(),pageName:"ProductPage"})}result.isAllPlanLoaded&&($scope.quotesObj.isMulti=!0),processPlanDetails(result)}else $scope.showLoader=!1,$scope.statusError.errorMessage="Some error occurred. Please try again later",$scope.statusError.statusFailed=!0}),$scope.getMultiplePlans=function(onClick){var deferred=$q.defer();$scope.showLoader=!0;var variantPlanId=CommonServiceTerm.getVariantPlanId($scope.planDetails.planId,$scope.planDetails.variantPlanId);return ProductService.getCustomerData(planId,CommonServiceTerm.getEnquiryId(),!0,$scope.type,CommonServiceTerm.removeCommas($scope.customerInfo.oneTimePayout),$scope.customerInfo.incomeTerm,$scope.customerInfo.increasingIncomePercentage,CommonServiceTerm.removeCommas($scope.customerInfo.monthlyPayout),CommonServiceTerm.removeCommas($scope.customerInfo.oneTimePayout),variantPlanId,isEncrypted).then(function(result){$scope.showLoader=!1;result&&result.data?(result.data.isAllPlanLoaded&&($scope.quotesObj.isMulti=!0),$scope.customerInfo.nationality&&"nri"==$scope.customerInfo.nationality.toLowerCase()&&onClick?$scope.postCustomerDetails():processPlanDetails(result.data),pbTrackerObj.logEvent({leadId:result.data.custInfo.matrixLeadId,custId:result.data.custInfo.custId,visitId:result.data.custInfo.visitId,event:"On View More Plans click",pageName:"ProductPage",click:"Click"})):processPlanDetails(updatedData),deferred.resolve()}),deferred.promise},$scope.unmaskInput=function(form,event){var mobileLocal=$scope.customerInfo.mobileNo;"focus"==event&&mobileLocal&&mobileLocal.indexOf("*")>-1&&($scope.customerInfo.mobileNo=""),"blur"!=event||!$scope.maskedInput.mobileNo||""==$scope.maskedInput.mobileNo||""!=$scope.customerInfo.mobileNo&&null!=$scope.customerInfo.mobileNo||""==form.mobileNo.$viewValue&&($scope.customerInfo.mobileNo=$scope.maskedInput.mobileNo)},$scope.syncMaskedInput=function(form){$scope.maskedInput.mobileNo&&$scope.maskedInput.mobileNo.length==$scope.mobileLengthValidation.max&&($scope.customerInfo.mobileNo=angular.copy($scope.maskedInput.mobileNo)),form.mobileNo.$error.pattern||maskPhoneNumber()},$scope.unmaskPhoneNumber=function(form){form.mobileNo.$error.pattern||($scope.maskedInput.mobileNo=""),$scope.maskedInput.mobileNo&&$scope.maskedInput.mobileNo.toString().length===$scope.mobileLengthValidation.max&&($scope.maskedInput.mobileNo=angular.copy($scope.customerInfo.mobileNo))},$scope.postCustomerDetails=function(payoutVal){!payoutVal&&CommonServiceTerm.isIndiaFirstPlan(1*$scope.planDetails.planId)&&(payoutVal="sumAssured"),$rootScope.isMobileDevice&&$scope.saveAnnualIncome(),$scope.showLoader=!0;var payout=payoutVal||"all";if(updateCustomerCalled)$scope.showLoader=!1;else{if(updateCustomerCalled=!0,$scope.showObject.lastName&&($scope.customerInfo.fullName=$scope.customerInfo.fullName+" "+$scope.customerInfo.lastName),$scope.customerInfo.nationality&&($scope.preserveAdditionalInfo.nationality=$scope.customerInfo.nationality),$scope.customerInfo.occupation&&($scope.preserveAdditionalInfo.occupation=$scope.customerInfo.occupation),$scope.customerInfo.education&&($scope.preserveAdditionalInfo.education=$scope.customerInfo.education),$scope.customerInfo.totalPayOutTerm&&($scope.preserveAdditionalInfo.totalPayOutTerm=$scope.customerInfo.totalPayOutTerm),!CommonServiceTerm.isUndefinedOrNullOrEmpty($scope.customerInfo.emailId)&&$scope.customerInfo.emailId.length>0&&($scope.errorObject.emptyEmail=!1),!CommonServiceTerm.isUndefinedOrNullOrEmpty($scope.customerInfo.fullName)&&$scope.customerInfo.fullName.length>0&&($scope.errorObject.emptyFirstName=!1),$scope.customerInfo.isNri="NRI"===$scope.customerInfo.nationality,CommonServiceTerm.isExidePlan(1*$scope.planDetails.planId)){var difference=70-$scope.customerInfo.age,maxTerm=difference>35?35:difference;$scope.type.ppt=maxTerm}ProductService.updateProductInfoData($scope.customerInfo,payout,planId,$scope.planDetails,$scope.quotesObj.isMulti,$scope.type,basePlan,isEncrypted).success(function(data){$scope.showLoader=!1,"failed"!==data.status?($scope.statusError.statusFailed=!1,updatedData=angular.copy(data),data.custInfo.encodedEnquiryId?(custId=data.custInfo.custId,$cookies.put("custId",data.custInfo.custId,{domain:"policybazaar.com"}),CustomerService.setEnquiryCookie(data.custInfo.encodedEnquiryId),CommonServicePreQuotesTerm.setDecodedEnquiryId(data.custInfo.enquiryId),$cookies.put("enquiryId",data.custInfo.encodedEnquiryId),$localStorage.enquiryId=data.custInfo.encodedEnquiryId,$scope.customerInfo=CommonServicePreQuotesTerm.prefillCustomerData(data.custInfo),maskPhoneNumber(),getPremiumMode(),CommonServiceTerm.callLeadGenerationTracking($scope.customerInfo.matrixleadId,data.custInfo.custId,data.isMatrixLeadCreated,!1),custID=data.custInfo.custId,$scope.data=CommonServicePreQuotesTerm.extractDOB($scope.customerInfo.dob),$scope.data.dobMonth=parseInt($scope.data.dobMonth,10).toString(),$scope.saveAnnualIncome(),data.supplierPlans.length>0?(planToSwitch=data.planToSwitch,populatePlanDetails("notOnLoad",data.supplierPlans),$timeout(function(){$scope.$broadcast("someEvent",!0)},0)):($scope.planDetails={},$scope.planList=[],$scope.benefits={},$scope.keyFeatures={},$scope.eligibility={},$scope.cancerEligibility={},$scope.riderDetails={},$scope.exclusions={},1*$cookies.get("planId")===847&&($scope.statusError.statusFailed=!0,$scope.statusError.errorMessage="The plan is not available for age selected"))):populatePlanDetails("notOnLoad",updatedData.supplierPlans)):($scope.statusError.statusFailed=!0,$scope.statusError.errorMessage=data.errorMessage||"Some error Occured. Please try again later.",$document.scrollTopAnimated(0).then(function(){}),populatePlanDetails("notOnLoad",updatedData.supplierPlans,"failed")),updateCustomerCalled=!1})}CommonServiceTerm.isExidePlan($scope.planDetails.planId)&&3===$scope.type.payOptionType&&($scope.coverages=CommonServiceTerm.calculateCoveragesForExide($scope.customerInfo),$scope.customerInfo.coverageUpto=(1*$scope.customerInfo.age+1*$scope.planDetails.policyTerm).toString(),$scope.customerInfo.coverageUpto=$scope.customerInfo.coverageUpto||angular.copy($scope.coverages[0])),CommonServiceTerm.isExidePlan($scope.planDetails.planId)&&2===$scope.type.payOptionType},$scope.hideForPnb=function(rider){},$scope.changePlanDetails=function(plan){if(pbTrackerObj.logEvent({leadId:$scope.customerInfo.matrixLeadId,custId:$scope.customerInfo.custId,visitId:$scope.customerInfo.visitId,event:"Change Plan Click",previous_plan:$scope.planListShowObj.showLogo?$scope.planDetails.planShortName:$scope.planDetails.planName,current_plan:$scope.planListShowObj.showLogo?plan.planShortName:plan.planName,pageName:"ProductPage",click:"Click"}),1*$scope.clickedPlan!==1*plan.planId){basePlan=plan.basePlanId;var categoryIds=[11,111,10,38,15,12,1012],planCategoryId=1*plan.categoryId;if(categoryIds.indexOf(planCategoryId)!=-1){var planObj=_.find($scope.planList,function(val){return 1*val.planId===basePlan});$scope.planDetails=angular.copy(planObj),$scope.errorObject.totalPayoutError=!1,$scope.errorObject.monthlyError=!1,$scope.errorObject.oneTimeError=!1,$scope.errorObject.sumAssuredError=!1,$scope.errorObject.incomeTermError=!1,$scope.errorObject.intervalError=!1,populateValuesFromPlanDetails("notOnLoad");var rider={},selectedRiders=[];_.each($scope.riderDetails.riders,function(val){val.isSelected=!1,1*val.categoryId===planCategoryId&&(val.isSelected=!0,rider=angular.copy(val),selectedRiders.push(val.categoryId))}),$scope.setRiderSelected(selectedRiders),void 0===rider||null===rider||CommonServiceTerm.isEmptyObject(rider)?($scope.clickedPlan=angular.copy(plan.planId),$scope.planDetails=angular.copy(plan),populateValuesFromPlanDetails("notOnLoad")):$scope.updateRiderInfo(rider)}else if(plan.basePlanId>0&&1*plan.planId===plan.basePlanId){if($scope.planDetails=angular.copy(plan),$scope.errorObject.totalPayoutError=!1,$scope.errorObject.monthlyError=!1,$scope.errorObject.oneTimeError=!1,$scope.errorObject.sumAssuredError=!1,$scope.errorObject.incomeTermError=!1,populateValuesFromPlanDetails("notOnLoad"),CommonServiceTerm.isKotakPlan(plan.planId)){var kotakRider={},kotakSelectedRiders=[];_.each($scope.riderDetails.riders,function(val){val.isSelected&&(kotakRider=angular.copy(val),kotakSelectedRiders.push(val.categoryId))}),$scope.setRiderSelected(kotakSelectedRiders),void 0===kotakRider||null===kotakRider||CommonServiceTerm.isEmptyObject(kotakRider)||$scope.updateRiderInfo(kotakRider)}else if(CommonServicePreQuotesTerm.ETSecurePlans(plan.planId)){var etRider={},etSelectedRiders=[];_.each($scope.riderDetails.riders,function(val){val.isHidden=!1,[15,111].indexOf(1*val.categoryId)!=-1?val.isSelected=!1:val.isSelected&&(etRider=angular.copy(val),etSelectedRiders.push(val.categoryId))}),$scope.setRiderSelected(selectedRiders),void 0===etRider||null===etRider||CommonServiceTerm.isEmptyObject(etRider)||$scope.updateRiderInfo(etRider)}else _.each($scope.riderDetails.riders,function(val){categoryIds.indexOf(1*val.categoryId)!=-1&&(val.isSelected=!1)});if(1*$scope.planDetails.supplierId===116||1*$scope.planDetails.supplierId===21){var selectedRiders=[];$scope.setRiderSelected(selectedRiders).then(function(data){planId=$scope.planDetails.planId,$scope.getMultiplePlans()})}else $scope.clickedPlan=angular.copy(plan.planId),$cookies.put("planId",plan.planId),$cookies.put("basePlanId",plan.basePlanId)}else $scope.clickedPlan=angular.copy(plan.planId),$cookies.put("planId",plan.planId),$cookies.put("basePlanId",plan.basePlanId),gaTagsNew.trackVariantChange(plan,custId),CommonServicePreQuotesTerm.ETSecurePlans(plan.planId)&&(clickedToChange=!0,riderSelected=_.find($scope.riderDetails.riders,function(val){return(15==val.categoryId||111==val.categoryId)&&val.isSelected})),$scope.planDetails=angular.copy(plan),$scope.errorObject.totalPayoutError=!1,$scope.errorObject.monthlyError=!1,$scope.errorObject.oneTimeError=!1,$scope.errorObject.sumAssuredError=!1,$scope.errorObject.incomeTermError=!1,populateValuesFromPlanDetails("notOnLoad"),$timeout(function(){$scope.$broadcast("someEvent",!0)},0);addAddtionalInfoQuestions(),CommonServiceTerm.isPNBPlan($scope.planDetails.planId)&&($scope.riderDetails.riders=ProductService.hideRidersForPnb($scope.riderDetails.riders,$scope.planDetails,$scope.customerInfo)),$scope.planDetails&&($scope.showObject.totalCover=!$scope.planDetails.monthlyIncome||0==$scope.planDetails.monthlyIncome,$scope.showObject.monthly=$scope.planDetails.monthlyIncome>0)}},$scope.isKotakPlan=function(planId){return CommonServiceTerm.isKotakPlan(planId)},$scope.isIndiaFirstPlan=function(planId){return CommonServiceTerm.isIndiaFirstPlan(planId)},$scope.updateRiderInfo=function(rider){$scope.showLoader=!0,$scope.customerInfo.nationality&&($scope.preserveAdditionalInfo.nationality=$scope.customerInfo.nationality),$scope.customerInfo.occupation&&($scope.preserveAdditionalInfo.occupation=$scope.customerInfo.occupation),$scope.customerInfo.education&&($scope.preserveAdditionalInfo.education=$scope.customerInfo.education);var deferred=$q.defer();return $scope.riderDetails?ProductService.updateProductRiderInfoData($scope.riderDetails,rider,$scope.planDetails,$scope.customerInfo,$scope.planList,$scope.quotesObj.isMulti,basePlan,$scope.modifySelection,$scope.type).success(function(data){"failed"!==data.status?($scope.statusError.statusFailed=!1,planToSwitch=data.planToSwitch,updatedData=angular.copy(data),populatePlanDetails("notOnLoad",data.supplierPlans),(CommonServiceTerm.isPNBPlan($scope.planDetails.planId)||CommonServiceTerm.isBSLIPlan($scope.planDetails.planId))&&seperateFirstAndLastName(data.custInfo.name),(CommonServiceTerm.isPNBPlan($scope.planDetails.planId)||CommonServiceTerm.isRelianceDigiTermPlans($scope.planDetails.planId))&&($scope.showObject.lifeProtectionRider=!0)):($scope.statusError.statusFailed=!0,$scope.statusError.errorMessage=data.errorMessage||"Some error Occured. Please try again later.",$document.scrollTopAnimated(0).then(function(){}),populatePlanDetails("notOnLoad",updatedData.supplierPlans,"failed")),$scope.showLoader=!1,deferred.resolve()}):deferred.resolve(),deferred.promise},$scope.isHDFCplan=function(planId){return CommonServiceTerm.isHdfc3dPlan(planId)},$scope.isHdfcIncomeOptionIncreasingPlan=function(planId){return CommonServiceTerm.isHdfcIncomeOptionIncreasingPlan(planId)},$scope.isOneTimePayoutEditable=function(planId){return CommonServiceTerm.isOneTimePayoutEditable(planId)},$scope.isPnbOrBsli=function(){return CommonServiceTerm.isPNBPlan($scope.planDetails.planId)||CommonServiceTerm.isBSLIPlan($scope.planDetails.planId)},$scope.hideFeatureTab=function(planId){var planIds=[949];return planIds.indexOf(planId)>-1},$scope.renderRiderErrorMsg=function(riderErrorMsg){if(CommonServiceTerm.isPNBPlan($scope.planDetails.planId)&&$scope.rider.riderErrorMsg&&$scope.quotesObj.isMonthly){var pnbRiderMonthlyLimit=Math.round(1*$scope.planDetails.monthlyTotalPremium);return"Total rider premium cannot exceed 100% of base plan premium (ie. Rs "+pnbRiderMonthlyLimit+"). Please reduce Sum Assured of the selected riders"}return riderErrorMsg},$scope.renderCiPayout=function(){return.2*parseInt(CommonServiceTerm.removeCommas($scope.customerInfo.totalPayout))},$scope.renderDeathBenefitPayout=function(){return.8*parseInt(CommonServiceTerm.removeCommas($scope.customerInfo.totalPayout))},$scope.rendershowPlanInfo=function(){return"Life Cover is split 80:20 between Life Cover & Critical Illness Cover, Critical Illness cover would increase at every policy anniversary & Life cover would decrease by the same amount."},$scope.showSpouseAgeDifferenceMessage=function(){var difference,show=!1;return CommonServiceTerm.isETZindagiPlan($scope.planDetails.planId)&&$scope.customerInfo.age&&$scope.modifySelection.spouse&&$scope.modifySelection.spouse.age&&(difference=CommonServiceTerm.findDifference(1*$scope.customerInfo.age,1*$scope.modifySelection.spouse.age),show=difference>10),show},$scope.viewOnlyBasePremium=function(){var value=$scope.planDetails.basicPremium;return CommonServiceTerm.isIndiaFirstPlan($scope.planDetails.planId)&&0==$scope.planDetails.monthlyTotalPremium&&(value=Math.round($scope.planDetails.annualPremiumWGST+$scope.planDetails.annualPremiumGST)),value},$scope.showPlanOptionType=function(type,planId){if(1*type===3)return $scope.isKotakPlan(planId)&&isIncreasingMonthlyPlanExist();if(1*type===2){if(CommonServiceTerm.isETZindagiPlan(planId)&&isPlanTypeExist("isIncreasingMonthlyPlan"))return!0;if(CommonServiceTerm.isIndiaFirstPlan(planId)&&(isPlanTypeExist("isLevelMonthlyPlan")||isPlanTypeExist("isIncreasingMonthlyPlan")))return!0}return!0},$scope.dropdownValues=function(min,max,interval){return CommonServiceTerm.populateOptionsList(min,max,interval)||[]},$scope.getClassForHeader=function(){return CommonServiceTerm.isIndiaFirstPlan($scope.planDetails.planId)},$scope.showPlanType=function(plan){var showPlanOption=!1;return CommonServiceTerm.isHdfc3dPlan(plan.planId)?showPlanOption=1*$scope.planTypeSelected.value===1?!plan.isIncomeOptionPlan:!!plan.isIncomeOptionPlan:CommonServiceTerm.isKotakPlan(plan.planId)?1*$scope.planTypeSelected.value===1?showPlanOption=plan.isOneTimePlan===!0:1*$scope.planTypeSelected.value===2?showPlanOption=plan.isLevelMonthlyPlan===!0:1*$scope.planTypeSelected.value===3&&(showPlanOption=plan.isIncreasingMonthlyPlan===!0):CommonServiceTerm.isETZindagiPlan(plan.planId)?1*$scope.planTypeSelected.value===1?showPlanOption=plan.isLevelMonthlyPlan===!0:1*$scope.planTypeSelected.value===2&&(showPlanOption=plan.isIncreasingMonthlyPlan===!0):CommonServiceTerm.isIndiaFirstPlan(plan.planId)?1*$scope.planTypeSelected.value===1?showPlanOption=plan.isOneTimePlan===!0:1*$scope.planTypeSelected.value===2&&(showPlanOption=plan.isLevelMonthlyPlan===!0||plan.isIncreasingMonthlyPlan===!0):showPlanOption=!0,showPlanOption},$scope.recalculateTotalPayoutMaxForPNB=function(){recalculateTotalPayoutMaxForPNB()},$scope.changeLifeStageRider=function(val){$scope.lifeProtectionRiderModel=val,$scope.riderDetails.riders=CommonServiceTerm.toggleRiderHidden(13,$scope.riderDetails.riders,$scope.lifeProtectionRiderModel),CommonServiceTerm.isETZindagiPlan($scope.planDetails.planId)&&($scope.riderDetails.riders=CommonServiceTerm.toggleRiderHidden(38,$scope.riderDetails.riders,$scope.lifeProtectionRiderModel))},$scope.proceedMobile=function($event){var event=$event;$scope.hideObject.buyLoader=!1,$timeout(function(){$scope.buyNow(event)},0)},$scope.buyNow=function($event){$event.stopPropagation(),$scope.submitted=!0;var preservedPlanDetails={planShortName:angular.copy($scope.planDetails.planShortName)},planDetails=$scope.planDetails;if($scope.quotesObj.isMonthly?preservedPlanDetails.maxMonthlyTotalPremium=$scope.planDetails.maxMonthlyTotalPremium||$scope.planDetails.monthlyTotalPremium:preservedPlanDetails.BasicPremium=$scope.planDetails.BasicPremium||$scope.planDetails.basicPremium,CommonServiceTerm.isKotakPlan($scope.planDetails.planId)&&("Mizoram"!=$scope.customerInfo.state&&"Nagaland"!=$scope.customerInfo.state||($scope.statusError.statusFailed=!0,$scope.statusError.errorMessage="This plan is not available in "+$scope.customerInfo.state,$document.scrollTopAnimated(0),$scope.hideObject.buyLoader=!0)),CommonServiceTerm.isSbiPoornaSuraksha($scope.planDetails.planId)){var annualLimit=3540;12*$scope.planDetails.montlyTotalPremiumWithRiders<annualLimit&&($scope.statusError.statusFailed=!0,$scope.statusError.errorMessage="Annual Premium should be greater than Rs.3540, Please increase your sum assured.",$document.scrollTopAnimated(0),$scope.hideObject.buyLoader=!0)}if($scope.hideInputFields.monthly||$scope.isValidAmount("monthly",$scope.planDetails.planId),$scope.isSAEditable($scope.planDetails.planId)&&CommonServiceTerm.isKotakPlan($scope.planDetails.planId)&&$scope.isValidAmount("sumAssured",$scope.planDetails.planId),$scope.riderDetails&&CommonServicePreQuotesTerm.checkIfPlanHasSpouseAndDOBisrequired($scope.customerInfo,$scope.planDetails,$scope.riderDetails.riders)&&!$scope.modifySelection.spouse.dob){var obj=_.find($scope.riderDetails.riders,function(rider){return 1*rider.categoryId===13});$scope.toggleModal("show"),changedRider=obj}else if($scope.statusError.statusFailed)CommonServiceTerm.scrollToError();else{$scope.hideObject.buyLoader=!1;var riderValid=!0;if($scope.riderDetails&&(riderValid=!ProductService.validateRiders($scope.riderDetails.riders,$scope.planDetails.riderErrorMsg),_.each($scope.riderDetails.riders,function(rider){if(rider.isSelected&&rider.policyTermDetails.isPolicyTermPresent){var policyTermList=rider.policyTermList,selectedTerm=rider.policyTermSelected;$scope.selectedTermNotEmpty=!1,policyTermList.forEach(function(term){term.id===selectedTerm&&($scope.selectedTermNotEmpty=!0)})}})),riderValid&&CommonServiceTerm.isPNBPlan($scope.planDetails.planId)&&$scope.customerInfo.nationality&&"nri"===$scope.customerInfo.nationality.toLowerCase()){var cancerRiders=[229,227,228],obj=_.find($scope.riderDetails.riders,function(rider){if(cancerRiders.indexOf(rider.riderId)!=-1&&rider.isSelected)return rider});if(riderValid=void 0==obj||null==obj,!riderValid)return $scope.statusError.statusFailed=!0,$scope.statusError.errorMessage="Cancer/Heart care not allowed for NRI",$scope.hideObject.buyLoader=!0,$timeout(function(){var errorMessage=angular.element(".head-error");errorMessage&&$("html, body").animate({scrollTop:0},"slow")},100),!1}!$scope.isRangeMet()&&$scope.planDetails.minimumAnnualIncome>0&&$scope.isValidAnnualIncome(),$scope.annualError.annualIncomeError||(recalculateTotalPayoutMaxForPNB(),$scope.errorObject.totalPayoutError=31==$scope.planDetails.supplierId?CommonServicePreQuotesTerm.detectTotalPayoutError($scope.customerInfo,$scope.planDetails.supplierId):$scope.errorObject.totalPayoutError,$scope.errorObject.totalPayoutError&&31==$scope.planDetails.supplierId?($scope.statusError.statusFailed=!0,$scope.statusError.errorMessage="Maximum Life Cover allowed as per the details entered by you is Rs."+CommonServiceTerm.changeDisplayNumberFormat($rootScope.amountBoundry.totalPayout.max)):31==$scope.planDetails.supplierId&&($scope.statusError.statusFailed=!1,$scope.statusError.errorMessage="")),$scope.lastNameError=!($rootScope.isMobileDevice||!$scope.customerInfo.hasOwnProperty("lastName")||!CommonServiceTerm.isUndefinedOrNullOrEmpty($scope.customerInfo.lastName)),$scope.showNationalityOptions&&CommonServiceTerm.isUndefinedOrNullOrEmpty($scope.customerInfo.nationality)&&"Select Nationality"!=$scope.customerInfo.nationality?$scope.nationalityValid=!1:$scope.nationalityValid=!0,$scope.showOccupationOptions&&CommonServiceTerm.isUndefinedOrNullOrEmpty($scope.customerInfo.occupation)&&"Select Occupation"!=$scope.customerInfo.occupation?$scope.occupationValid=!1:$scope.occupationValid=!0,$scope.showEducationOptions&&CommonServiceTerm.isUndefinedOrNullOrEmpty($scope.customerInfo.education)&&"Select Education"!=$scope.customerInfo.education?$scope.educationValid=!1:$scope.educationValid=!0;var childDobError=!1;if($scope.showChildDobOptions&&($scope.errorObject.emptyDob=!($scope.childData.dobDate&&$scope.childData.dobMonth&&$scope.childData.dobYear),childDobError=!!($scope.errorObject.emptyDob||$scope.errorObject.inValidDob||$scope.errorObject.ageAboveMax||$scope.errorObject.ageBelowMin)),""==$scope.customerInfo.emailId&&($scope.errorObject.emptyEmail=!0,$scope.expandedToggle.personal=!0,$timeout(function(){$scope.expandedToggle.personal=!0;var email=angular.element("[name='emailAdd']"),offset=email.offset()+10;$("html, body").animate({scrollTop:offset.top},"slow"),email.focus(),email.blur()},100)),""==$scope.customerInfo.fullName&&($scope.errorObject.emptyFirstName=!0,$scope.expandedToggle.personal=!0,$timeout(function(){$scope.expandedToggle.personal=!0;var email=angular.element("[name='fullName']"),offset=email.offset()+10;$("html, body").animate({scrollTop:offset.top},"slow"),email.focus(),email.blur()},100)),$scope.showChildDobOptions&&!childDobError?$cookies.put("childDob",$scope.modifySelection.child.dob):"",basePlan&&(planDetails=_.find($scope.planList,function(val){return val.planId===basePlan})),CommonServiceTerm.isKotakPlan(planDetails.planId)&&(planDetails.planShortName=angular.copy(preservedPlanDetails.planShortName),planDetails.BasicPremium=angular.copy(preservedPlanDetails.BasicPremium),planDetails.maxMonthlyTotalPremium=angular.copy(preservedPlanDetails.maxMonthlyTotalPremium)),$scope.showObject.lifeProtectionRider&&($scope.customerInfo.lifeStageProtection=$scope.lifeProtectionRiderModel?1:0),!$scope.annualError.annualIncomeError&&$scope.nationalityValid&&$scope.occupationValid&&$scope.educationValid&&!childDobError&&!$scope.lastNameError)if($cookies.get("enquiryId")&&riderValid&&$scope.selectedTermNotEmpty&&!ProductService.validateCustomerDetails($scope.customerInfo,$scope.errorObject)&&!CommonServiceTerm.isEmptyObject(planDetails)&&planDetails.maxTotalPremium>0){
var custId=$cookies.get("custId")||-1;gtmObj.buyNowImpression(planDetails,$scope.customerInfo.matrixleadId,custId,"product",7);var customerInfo=angular.copy($scope.customerInfo);_.each($scope.riderDetails.riders,function(val){val.isSelected&&13===val.categoryId&&(customerInfo.spouse=angular.copy($scope.modifySelection.spouse))}),$scope.modifySelection&&$scope.modifySelection.child&&$scope.modifySelection.child.dob&&(customerInfo.child=angular.copy($scope.modifySelection.child)),pbTrackerObj.logEvent({leadId:$scope.customerInfo.matrixleadId,custId:$scope.customerInfo.custId,visitId:$scope.customerInfo.visitId,event:"On Proceed click",pageName:"ProductPage",premium:$scope.quotesObj.isMonthly&&$scope.planDetails.montlyTotalPremiumWithRiders?$scope.planDetails.montlyTotalPremiumWithRiders:$scope.planDetails.totalPremiumWithRiders,planId:$scope.planDetails.planId,supplierName:$scope.planDetails.supplierName,supplierId:$scope.planDetails.supplierId,planName:$scope.planDetails.planName,planShortName:$scope.planDetails.planShortName,click:"Click"}),gaTagsNew.productProceedClick("ProceedClick",planDetails.totalPremiumWithRiders,$scope.modifySelection.custId,7),$rootScope.isMobileDevice?$scope.saveAnnualIncome().then(function(){CommonServicePreQuotesTerm.getInsurerDetails(planDetails,customerInfo,$scope.type.payOptionType,$scope.quotesObj.isMonthly,$scope.riderDetails,$scope.quotesObj).then(function(data){"error"===data?$scope.hideObject.showRedirectionError=!1:$scope.hideObject.showRedirectionError=!0,$scope.hideObject.buyLoader=!0})}):CommonServicePreQuotesTerm.getInsurerDetails(planDetails,customerInfo,$scope.type.payOptionType,$scope.quotesObj.isMonthly,$scope.riderDetails,$scope.quotesObj).then(function(data){"error"===data?$scope.hideObject.showRedirectionError=!1:$scope.hideObject.showRedirectionError=!0,$scope.hideObject.buyLoader=!0})}else $scope.hideObject.buyLoader=!0,CommonServiceTerm.scrollToError();else $scope.hideObject.buyLoader=!0,CommonServiceTerm.scrollToError()}},$scope.trackPayoutGa=function(type){gaTagsNew.trackpayOutEdit(type,custId)},$scope.isValidAmount=function(type,planId){var isError=!1;return CommonServiceTerm.isHdfcIncomeOptionPlan(planId)?("oneTime"===type&&(isError=!CommonServicePreQuotesTerm.isValidAmount($scope.customerInfo.oneTimePayout,CommonServicePreQuotesTerm.isMonthlyJourney(),CommonServicePreQuotesTerm.isCancerJourney(),$rootScope.amountBoundry.oneTime,planId,type),$scope.errorObject.oneTimeError=isError),!0):(CommonServiceTerm.isUndefinedOrNullOrEmpty($scope.customerInfo.totalPayout)?$scope.emptyTotalPayoutError=!0:$scope.emptyTotalPayoutError=!1,"total"===type&&$scope.isTotalPayoutEditable($scope.planDetails.planId)?(isError=!CommonServicePreQuotesTerm.isValidAmount($scope.customerInfo.totalPayout,CommonServicePreQuotesTerm.isMonthlyJourney(),CommonServicePreQuotesTerm.isCancerJourney(),$rootScope.amountBoundry.totalPayout,planId,type),$scope.errorObject.totalPayoutError=isError,$scope.planDetails.sumAssuredInterval>0&&parseInt(CommonServiceTerm.removeCommas($scope.customerInfo.totalPayout))%$scope.planDetails.sumAssuredInterval!=0?$scope.errorObject.totalPayoutStepError=!0:$scope.errorObject.totalPayoutStepError=!1,CommonServiceTerm.isKotakPlan($scope.planDetails.planId)&&($scope.planDetails.sumAssuredInterval=1e3,$scope.errorObject.totalPayoutStepError=!(parseInt(CommonServiceTerm.removeCommas($scope.customerInfo.totalPayout))%1e3==0),$scope.errorObject.totalPayoutStepError&&(isError=!0,$scope.errorObject.totalPayoutError=isError))):"monthly"===type?(isError=!CommonServicePreQuotesTerm.isValidAmount($scope.customerInfo.monthlyPayout,CommonServicePreQuotesTerm.isMonthlyJourney(),CommonServicePreQuotesTerm.isCancerJourney(),$rootScope.amountBoundry.monthly,planId,type),$scope.errorObject.monthlyError=isError):"sumAssured"===type&&$scope.isSAEditable($scope.planDetails.planId)?(isError=!CommonServicePreQuotesTerm.isValidAmount($scope.customerInfo.sumAssured,CommonServicePreQuotesTerm.isMonthlyJourney(),CommonServicePreQuotesTerm.isCancerJourney(),$rootScope.amountBoundry.sumAssured,planId,type),$scope.errorObject.sumAssuredError=isError,$scope.errorObject.intervalError=!!CommonServiceTerm.isKotakPlan($scope.planDetails.planId)&&!(parseInt(CommonServiceTerm.removeCommas($scope.customerInfo.sumAssured))%1e3==0),$scope.errorObject.intervalError&&($scope.focusObj.sumAssuredFocusOut=!1,isError=!0,CommonServiceTerm.isKotakPlan($scope.planDetails.planId)&&$rootScope.isMobileDevice&&$scope.showHidePremiumDetails(!0,0))):"oneTime"===type&&$scope.isOneTimePayoutEditable($scope.planDetails.planId)?(isError=!CommonServicePreQuotesTerm.isValidAmount($scope.customerInfo.oneTimePayout,CommonServicePreQuotesTerm.isMonthlyJourney(),CommonServicePreQuotesTerm.isCancerJourney(),$rootScope.amountBoundry.oneTime,planId,type),$scope.errorObject.oneTimeError=isError):"incomeTerm"===type?(isError=!CommonServicePreQuotesTerm.isValidAmount($scope.customerInfo.incomeTerm,CommonServicePreQuotesTerm.isMonthlyJourney(),CommonServicePreQuotesTerm.isCancerJourney(),$rootScope.amountBoundry.incomeTerm,planId,type),$scope.errorObject.incomeTermError=isError):"lumpsumBenefitPercentage"===type&&$scope.customerInfo.lumpsumBenefitPercentage&&(isError=!(1*$scope.customerInfo.lumpsumBenefitPercentage>=0&&1*$scope.customerInfo.lumpsumBenefitPercentage<=99),$scope.errorObject.lumpsumBenefitPercentage=isError),!isError)},$scope.saveAndGetQuotes=function(val,planId){$scope.isValidAmount(val,planId)&&($scope.isValidAmount("total",planId)&&($scope.focusObj.totalPayoutFocusOut=!0),($scope.planDetails.maxOneTimePayout||$scope.planDetails.oneTimePayout)>0&&$scope.isValidAmount("oneTime",planId)&&($scope.focusObj.oneTimeFocusOut=!0),($scope.planDetails.maxSumAssured||$scope.planDetails.sumAssured)>0&&$scope.isValidAmount("sumAssured",planId)&&($scope.focusObj.sumAssuredFocusOut=!0),$scope.planDetails.monthlyIncome>0&&$scope.isValidAmount("monthly",planId)&&($scope.focusObj.monthlyFocusOut=!0),$scope.$broadcast("validateAndUpdate",val))},$scope.isValidAnnualIncome=function(){$scope.annualError.annualIncomeError=!(CommonServiceTerm.removeCommas($scope.customerInfo.annualIncome)>=$scope.planDetails.minimumAnnualIncome)},$scope.focusOnInput=function(id){$timeout(function(){var newId="id"+id,element=$window.document.getElementById(newId);element&&element.focus()},100)},$scope.showHidePremiumDetails=function(flag,$event){$scope.hideObject.premDet=flag,flag?angular.element("body").addClass("overflow-hidden"):angular.element("body").removeClass("overflow-hidden"),$event&&$event.stopPropagation()},$scope.isAllValid=function(){var isValid=!$scope.statusError.statusFailed;if(!$scope.statusError.statusFailed){var riderValid=!0;$scope.riderDetails&&(riderValid=!ProductService.validateRiders($scope.riderDetails.riders,$scope.planDetails.riderErrorMsg)),isValid=!!($cookies.get("enquiryId")&&riderValid&&!ProductService.validateCustomerDetails($scope.customerInfo,$scope.errorObject)&&!CommonServiceTerm.isEmptyObject($scope.planDetails)&&$scope.planDetails.maxTotalPremium>0)}return isValid},$scope.isAdditionalInfoVald=function(){var isValid=!0;return $scope.showNationalityOptions&&CommonServiceTerm.isUndefinedOrNullOrEmpty($scope.customerInfo.nationality)&&"Select Nationality"!=$scope.customerInfo.nationality&&(isValid=!1),$scope.showOccupationOptions&&CommonServiceTerm.isUndefinedOrNullOrEmpty($scope.customerInfo.occupation)&&"Select Occupation"!=$scope.customerInfo.occupation&&(isValid=!1),$scope.showEducationOptions&&CommonServiceTerm.isUndefinedOrNullOrEmpty($scope.customerInfo.education)&&"Select Education"!=$scope.customerInfo.education&&(isValid=!1),$scope.planDetails.minimumAnnualIncome>0&&("undefined"==typeof $scope.customerInfo.annualIncome||$scope.customerInfo.annualIncome.length<=0)&&(isValid=!1),isValid},$scope.setRiderSelected=function(selectedRiders){var deferred=$q.defer(),categorys=CommonServicePreQuotesTerm.getAllCategoryIds($scope.riderDetails.riders),newCategoryIds=CommonServicePreQuotesTerm.getUniqueIdsFromFirst(categoryIds,categorys);return newCategoryIds=newCategoryIds.concat(selectedRiders),CommonServiceTerm.setRiderSelected($scope.customerInfo.custId,newCategoryIds).success(function(data){deferred.resolve(data)}),deferred.promise},$scope.isSAEditable=function(planId){var planIds=[732,758,735,750,755,766,767,768,776,777,778,791,792,794,795,789,797,798,799,801,802,806,807,808,809,810,845,908,941,942];return planIds.indexOf(planId)>-1||kotakSumAssuredEditable(planId)},$scope.isTotalPayoutEditable=function(planId){var planIds=[884,885,2961,2941,2991,2971,941,942];return planIds.indexOf(planId)==-1},$scope.isMonthlyIncomeEditable=function(planId){var planIds=[941,942];return planIds.indexOf(planId)==-1},$scope.changePolTerm=function(polTerm){$scope.customerInfo.coverageUpto=angular.copy(polTerm),$scope.postCustomerDetails()},$scope.editSumAssured=function(planId){$scope.isSAEditable(planId)&&($scope.focusObj.sumAssuredFocusOut=!1,$scope.focusOnInput("SumAssured"))},$scope.isRangeMet=function(){var supplierId=$scope.planDetails.supplierId,isMet=!1;switch(supplierId){case 24:isMet=$scope.customerInfo.annualId>2;break;case 10:isMet=$scope.customerInfo.annualId>1}return isMet},$scope.expandCallback=function(index){var name=0==index?"Cover details":1==index?"Personal Details":"Additional information",proceed=0==index?"PersonalDetailsOpen":1==index?"LifeCoverDetailsOpen":"AdditionalInformation";gaTagsNew.trackExpansionAccordian(proceed,name,custId)},$scope.reversePremiumType=function(flag,plan){$scope.quotesObj.isMonthly=!flag,$scope.quotesObj.isQuarterly=!1,$scope.quotesObj.isHalfYearly=!1,$cookies.put("monthPrem",$scope.quotesObj.isMonthly?"monthly":"yearly");var name=$scope.quotesObj.isMonthly?"monthly":"yearly",array=[];array.push(name),array.push(plan.planId);var premium=0;premium=$scope.quotesObj.isMonthly?plan.montlyTotalPremiumWithRiders:plan.totalPremiumWithRiders,array.push(premium),gaTagsNew.trackChangePremiumType(array,"ProductPage",custId),getPremiumMode(),pbTrackerObj.logEvent({leadId:$scope.customerInfo.matrixLeadId,custId:$scope.customerInfo.custId,visitId:$scope.customerInfo.visitId,event:"On Payment freq. change click",pageName:"ProductPage",click:"Click"})},$scope.getSavedAmount=function(plan){var yearlyPremium=plan.totalPremiumWithRiders,monthlyPremium=plan.montlyTotalPremiumWithRiders;return $scope.planDetails.policyTerm==-1?(12*monthlyPremium-yearlyPremium)*(65-$scope.customerInfo.age):(12*monthlyPremium-yearlyPremium)*$scope.planDetails.policyTerm};var setDefaultPlan=function(){var planToSelect,planId=planOptionsInfo.selectedPlanId,type=$scope.planTypeSelected.value;if(CommonServiceTerm.isHdfc3dPlan($scope.planDetails.planId))var planType1=ProductService.sortPlanArrayByOrder(ProductService.getIncomePlusOptionPlans($scope.planList)),planType2=ProductService.sortPlanArrayByOrder(ProductService.getNonIncomePlusOptionPlans($scope.planList));if(CommonServiceTerm.isKotakPlan($scope.planDetails.planId))var planType1=ProductService.sortPlanArrayByOrder(_.filter($scope.planList,function(plan){return plan.isOneTimePlan})),planType2=ProductService.sortPlanArrayByOrder(_.filter($scope.planList,function(plan){return plan.isLevelMonthlyPlan})),planType3=ProductService.sortPlanArrayByOrder(_.filter($scope.planList,function(plan){return plan.isIncreasingMonthlyPlan}));if(CommonServiceTerm.isETZindagiPlan($scope.planDetails.planId))var planType1=ProductService.sortPlanArrayByOrder(_.filter($scope.planList,function(plan){return plan.isLevelMonthlyPlan})),planType2=ProductService.sortPlanArrayByOrder(_.filter($scope.planList,function(plan){return plan.isIncreasingMonthlyPlan}));if(CommonServiceTerm.isIndiaFirstPlan($scope.planDetails.planId))var planType1=ProductService.sortPlanArrayByOrder(_.filter($scope.planList,function(plan){return plan.isOneTimePlan})),planType2=ProductService.sortPlanArrayByOrder(_.filter($scope.planList,function(plan){return plan.isLevelMonthlyPlan||plan.isIncreasingMonthlyPlan}));planToSelect||(1*type===1&&planType1?planToSelect=planType1[0]:1*type===2&&planType2?planToSelect=planType2[0]:1*type===3&&planType3&&(planToSelect=planType3[0])),!planToSelect&&planId&&(planToSelect=_.find($scope.planList,function(plan){return 1*plan.planId===planId})),planToSelect&&$scope.changePlanDetails(planToSelect)};$scope.changePlanType=function(){setDefaultPlan()},$scope.renderPolicyTerm=function(){var text;return text=(!CommonServiceTerm.isHdfc3dPlan($scope.planDetails.planId)||851!=$scope.planDetails.planId&&2701!=$scope.planDetails.planId)&&879!=$scope.planDetails.planId||$scope.planDetails.policyTerm!=-1?$scope.planDetails.policyTerm+" Years":"Whole Life"},$scope.renderPayTerm=function(){var text;return text=3==$scope.type.payOptionType?$scope.planDetails.ppt:2==$scope.type.payOptionType?1:(!CommonServiceTerm.isHdfc3dPlan($scope.planDetails.planId)||851!=$scope.planDetails.planId&&2701!=$scope.planDetails.planId)&&879!=$scope.planDetails.planId||$scope.planDetails.policyTerm!=-1?$scope.planDetails.policyTerm:65-$scope.customerInfo.age},$scope.setPayOptionType=function(type){1*type===2?(payOptionType="SinglePay",$scope.type.ppt=1,$scope.quotesObj.isMonthly=!1):1*type===3&&(payOptionType="LimitedPay",1*$scope.planDetails.supplierId===116?$scope.type.ppt=$scope.planDetails.policyTerm-5:1*$scope.planDetails.supplierId===10?$scope.type.ppt=60-$scope.customerInfo.age:1*$scope.planDetails.supplierId===41?$scope.type.ppt=5:CommonServiceTerm.isExidePlan(1*$scope.planDetails.planId)?($scope.coverages=CommonServiceTerm.calculateCoveragesForExide($scope.customerInfo),$scope.customerInfo.coverageUpto=angular.copy($scope.coverages[0]),$scope.type.ppt=CommonServiceTerm.calculatepptForExide($scope.customerInfo.coverageUpto,$scope.coverages)):1*$scope.planDetails.supplierId===1124?$scope.type.ppt=61-$scope.customerInfo.age:$scope.type.ppt=10),resetCoverage(),$localStorage.payOptionType=type,$scope.postCustomerDetails()};var updateRiderMaxSumAssured=function(){_.each($scope.riderDetails.riders,function(rider){if(14==rider.categoryId||17==rider.categoryId||18==rider.categoryId){rider.sumAssuredDetails.maxSumAssuredOriginal=rider.sumAssuredDetails.maxSumAssuredOriginal||rider.sumAssuredDetails.maxSumAssured;var newMaxSumAssured=Math.min(5*CommonServiceTerm.removeCommas($scope.customerInfo.annualIncome),1*rider.sumAssuredDetails.maxSumAssuredOriginal);rider.sumAssuredDetails.maxSumAssured=newMaxSumAssured.toString()}})};$scope.saveAnnualIncome=function(){var deferred=$q.defer();return $scope.planDetails.isIncomeOptionPlan&&deferred.resolve(),$scope.isValidAnnualIncome(),$scope.annualError.annualIncomeError||(previousAnnualIncome!==CommonServiceTerm.removeCommas($scope.customerInfo.annualIncome)?(CommonServiceTerm.saveAnnualIncome(CommonServiceTerm.removeCommas($scope.customerInfo.annualIncome)).then(function(){deferred.resolve()}),$scope.riderDetails&&$scope.riderDetails.riders&&(updateRiderMaxSumAssured(),recalculateTotalPayoutMaxForPNB()),previousAnnualIncome=CommonServiceTerm.removeCommas($scope.customerInfo.annualIncome)):deferred.resolve()),deferred.promise};var updateChildDOB=function(data){$scope.modifySelection.child.dob=data.dobDate+"-"+(data.dobMonth&&1==data.dobMonth.length?"0"+data.dobMonth:data.dobMonth)+"-"+data.dobYear,$scope.modifySelection.child.age=CommonServiceTerm.getAge($scope.modifySelection.child.dob)};$scope.changeInRiderValues=function(rider){1*rider.categoryId===13&&rider.isSelected?(populateSpouseDetails(),$scope.toggleModal("show"),changedRider=angular.copy(rider)):1*rider.categoryId===96?$scope.changeLifeStageRider(rider.isSelected):updateRider(rider),$scope.selectedTermNotEmpty=!0};var successCallbackSpouse=function(){$scope.toggleModal("hide"),$scope.quotesObj.spouse=!0,$cookies.put("isSpouseSelected",!0),updateRider(changedRider)};$scope.updateSpouseDetails=function(form){form.$valid&&CommonServiceTerm.isSpouseAgeValid($scope.modifySelection.spouse.age)&&($scope.modifySelection.visitId=$scope.customerInfo.visitId,gaTagsNew.editProfileTrack("SpouseDetailsSave",$scope.modifySelection.spouse.age,$scope.modifySelection.custId),CommonServiceTerm.updateSpouseDob($scope.modifySelection,$cookies.get("enquiryId"),$scope.planDetails.planId).success(function(data,status,headers,config){successCallbackSpouse()}).error(function(data,status,headers,config){}))},$scope.hideRider=function(categoryId){return!(!CommonServiceTerm.isPNBPlan($scope.planDetails.planId)||11!=categoryId)},$scope.switchAegonPlans=function(rider){$scope.quotesObj.isMulti?switchPlans(rider):$scope.getMultiplePlans().then(function(){switchPlans(rider)})},$scope.updateRiderDetails=function(){var selectedRiders=[];_.each($scope.riderDetails.riders,function(rider){$scope.customerInfo.isNri||$scope.customerInfo.isPio?(rider.isSelected&&($scope.planDetails.totalPremiumWithRiders=$scope.planDetails.totalPremiumWithRiders-rider.riderPremium,$scope.planDetails.montlyTotalPremiumWithRiders=$scope.planDetails.montlyTotalPremiumWithRiders-rider.monthlyRiderPremium,$scope.planDetails.quarterlyTotalPremiumWithRiders=$scope.planDetails.quarterlyTotalPremiumWithRiders-rider.quarterlyRiderPremium,$scope.planDetails.halfYearlyTotalPremiumWithRiders=$scope.planDetails.halfYearlyTotalPremiumWithRiders-rider.halfYearlyRiderPremium,$scope.selectedRiderNames.pop(rider.riderName),rider.isSelected=!1),rider.isHidden=!0):rider.isHidden=!1,rider.isSelected&&selectedRiders.push(rider.categoryId),$scope.riderDetails.riders.indexOf(rider)+1==$scope.riderDetails.riders.length&&$scope.setRiderSelected(selectedRiders)})},$scope.checkIfProfileAllowed=function(){var notAllowedOccupation=["self employed","others"],notAllowedEducation=["diploma","12th pass"],isNotAllowed=$scope.planDetails.sumAssured<3e6&&$scope.customerInfo.occupation&&notAllowedOccupation.indexOf($scope.customerInfo.occupation.toLowerCase())>-1&&$scope.customerInfo.education&&notAllowedEducation.indexOf($scope.customerInfo.education.toLowerCase())>-1;isNotAllowed?($scope.statusError.statusFailed=!0,$scope.statusError.errorMessage="Sorry, your profile does not meet the required conditions for applying for this product.",$document.scrollTopAnimated(0).then(function(){})):($scope.statusError.statusFailed=!1,$scope.statusError.errorMessage="")},$scope.isSbiPlan=function(planId){var status=!1;return(GenericService.isSBIIncomePlans(planId)||GenericService.isSBIIncreasingIncomePlans(planId)||GenericService.isSBIPlan(planId))&&(status=!0),status},$scope.toggleMode=function($event){$event.stopPropagation(),$scope.reversePremiumType($scope.quotesObj.isMonthly,$scope.planDetails)},$scope.hideBreakupModal=function(){$("#productBreakupModal").modal("hide")},$scope.showBreakupModal=function(ev){$("#productBreakupModal").modal("show")},$scope.hideBreakupModal=function(){$mdDialog.cancel()}}function ProductLifeStyleDetailsController($scope,$rootScope,CommonServicePreQuotesTerm,CommonServiceTerm,ProductService){$scope.lifeStyleDetails={heightFeet:5,heightInch:0,weight:null,smoker:$scope.customerInfo.isTobacco||0,smokerCigaretteCount:0,smokerTobaccoItemCount:0,drinker:0,drinkerSpiritCount:0,drinkerWineCount:0,drinkerBeerCount:0,drinkerWithdrawlTreatment:0,healthQuestion1:0,healthQuestion2:0,healthQuestion3:0,healthQuestion4:0,healthQuestion5:0,healthQuestion6:0,healthQuestion7:0,healthQuestion8:0,healthQuestion9:0},ProductService.getLifeStyleAnswers(CommonServiceTerm.getEnquiryId(),$scope.planDetails.planId).then(function(result){result.data&&_.each(result.data,function(val,key){$scope.lifeStyleDetails[key]=result.data[key]}),$scope.customerInfo.isDifferentPayer=0,$scope.customerInfo.payer=$scope.lifeStyleDetails.payerRelationship||"Father",$scope.lifeStyleDetails.smoker=$scope.customerInfo.isTobacco,ProductService.saveLifeStlyeAnswers($scope.lifeStyleDetails)});var togggleErrorMsg=function(){$scope.errorObject.tobaccoError=1==$scope.customerInfo.isTobacco&&!$scope.lifeStyleDetails.smokerCigaretteCount&&!$scope.lifeStyleDetails.smokerTobaccoItemCount,$scope.errorObject.alcoholError=!(1!=$scope.lifeStyleDetails.drinker||$scope.lifeStyleDetails.drinkerSpiritCount||$scope.lifeStyleDetails.drinkerWineCount||$scope.lifeStyleDetails.drinkerBeerCount),$scope.errorObject.weightError=void 0==$scope.lifeStyleDetails.weight||0==$scope.lifeStyleDetails.weight,$scope.statusError.statusFailed=!1,$scope.statusError.errorMessage=""},syncSmokerField=function(){$scope.customerInfo.isTobacco=angular.copy($scope.lifeStyleDetails.smoker)};$scope.resetSmokerFields=function(){$scope.lifeStyleDetails.smokerCigaretteCount=0,$scope.lifeStyleDetails.smokerTobaccoItemCount=0,$scope.errorObject.tobaccoError=!1},$scope.resetAlcoholFields=function(){$scope.lifeStyleDetails.drinkerSpiritCount=0,$scope.lifeStyleDetails.drinkerWineCount=0,$scope.lifeStyleDetails.drinkerBeerCount=0,$scope.lifeStyleDetails.drinkerWithdrawlTreatment=0},$scope.$on("changeistobacco",function(){$scope.lifeStyleDetails.smoker=angular.copy($scope.customerInfo.isTobacco),$scope.resetSmokerFields()}),$scope.onChangeDrinkerField=function(){$scope.resetAlcoholFields(),$scope.errorObject.alcoholError=!1},$scope.onChange=function(){$scope.lifeStyleDetails.smokerCigaretteCount=1*$scope.lifeStyleDetails.smokerCigaretteCount,$scope.lifeStyleDetails.smokerTobaccoItemCount=1*$scope.lifeStyleDetails.smokerTobaccoItemCount,$scope.lifeStyleDetails.drinkerSpiritCount=1*$scope.lifeStyleDetails.drinkerSpiritCount,$scope.lifeStyleDetails.drinkerWineCount=1*$scope.lifeStyleDetails.drinkerWineCount,$scope.lifeStyleDetails.drinkerBeerCount=1*$scope.lifeStyleDetails.drinkerBeerCount,togggleErrorMsg(),syncSmokerField(),ProductService.saveLifeStlyeAnswers($scope.lifeStyleDetails)},$scope.heightOption={feet:[1,2,3,4,5,6,7,8],inch:[0,1,2,3,4,5,6,7,8,9,10,11]}}function ProductPersonalDetailsController($scope,$rootScope,CommonServicePreQuotesTerm,CommonServiceTerm,$q,$timeout,$location){function isGenderEntered(){return!CommonServiceTerm.isUndefinedOrNullOrEmpty($scope.customerInfo.gender)}function checkIfRegexIsValid(regex,number){var numberRegex=new RegExp(regex);return numberRegex.test(number)}function checkForLastName(){var lastName=CommonServiceTerm.getLastName($scope.customerInfo.fullName)||($scope.customerInfo.lastName?$scope.customerInfo.lastName:"");0==lastName.length?$timeout(function(){$scope.errorObject.nameError=!0,$scope.errorObject.lastNameError=!0,$scope.expandedToggle.personal=!0},0):$timeout(function(){$scope.errorObject.nameError=!1,$scope.errorObject.lastNameError=!1},0)}function getCountryCodes(){var countryObj=CommonServicePreQuotesTerm.getOtherCountryCodeFromId($scope.countryCodes,$scope.customerInfo.countryCode);void 0!==countryObj.CountryCode&&null!==countryObj.CountryCode&&($scope.customerInfo.otherCountryCode=countryObj.CountryCode,$scope.country.name=countryObj.CountryName)}var previousCityName="";$scope.cityModal={isVisible:!1},$scope.cityList=[],$scope.countryCodes=[],$scope.errorObject={cityError:!1,lastNameError:!1},$scope.gender=[{value:"1",displayValue:"Mr."},{value:"2",displayValue:"Ms."}],$scope.regexForMobileNo=new RegExp("^[6789]\\w{9}$"),$scope.cityObject={isNRI:!1};var customerInfoPreserved={};$scope.trackSectionChange=function(val){gaTagsNew.trackSectionChange("personal",val)},$scope.selectedCityCallBack=function($item,$model,$label,$event){$scope.customerInfo.city.id=$item.CityId,$scope.customerInfo.city.stateId=$item.StateId,$scope.customerInfo.city.name=$item.CityName,previousCityName=angular.copy($scope.customerInfo.city.name),$scope.errorObject.errorCity=!1,$rootScope.isMobileDevice&&$scope.toggleCityModal(!1),$scope.saveDataAndGetQuotes(!0)},$scope.getCountryList=function(){var deferred=$q.defer();return CommonServiceTerm.getCountryCodes().then(function(data){if($scope.countryCodes=data,1*$scope.customerInfo.countryCode===999){var countryObj=CommonServicePreQuotesTerm.getOtherCountryCodeFromId($scope.countryCodes,$scope.customerInfo.countryCode);void 0!==countryObj.CountryCode&&null!==countryObj.CountryCode&&($scope.country.name=countryObj.CountryName)}else getCountryCodes();$scope.cityObject.isNRI=1*$scope.customerInfo.countryCode!==392,deferred.resolve()}),deferred.promise};var getCountryValidations=function(countryCodeId){CommonServiceTerm.getRegexForCountry(countryCodeId).success(function(data,status,headers,config){if(data.regexInfo){$scope.mobileLengthValidation.min=data.regexInfo.minLength,$scope.mobileLengthValidation.max=data.regexInfo.maxLength;var string=/d{/g,regularExp=data.regexInfo.regex.replace(string,"w{"),re=new RegExp(regularExp);$scope.regexForMobileNo=re}else $scope.mobileLengthValidation.min=10,$scope.mobileLengthValidation.max=10,$scope.regexForMobileNo=new RegExp("^[6789]\\w{9}$");$scope.errorObject.mobileError=!($scope.customerInfo.mobileNo&&$scope.customerInfo.mobileNo.indexOf("*")>-1)&&!checkIfRegexIsValid($scope.regexForMobileNo,$scope.customerInfo.mobileNo)})},getAllCityList=function(){var deferred=$q.defer(),cityData={};return CommonServiceTerm.getCityData().then(function(cityObj){cityData=angular.copy(cityObj),deferred.resolve(cityData)}),deferred.promise};getAllCityList().then(function(cityData){$scope.cityList=cityData.response.CityList}),$scope.changeCountry=function(){$scope.customerInfo.city.id=9999,$scope.customerInfo.city.stateId=99,$scope.customerInfo.city.name=null,$scope.customerInfo.mobileNo="",$scope.maskedInput.mobileNo=""},$scope.getMobileNumberRegexForCountry=function(){getCountryCodes(),getCountryValidations($scope.customerInfo.countryCode),$scope.cityObject.isNRI=1*$scope.customerInfo.countryCode!==392,$scope.cityObject.cityLabelName=$scope.cityObject.isNRI?"Country":"City"},$scope.checkIfAvailableList=function(countryId){_.each($scope.countryCodes,function(val){val.CountryCode===1*$scope.customerInfo.otherCountryCode&&($scope.customerInfo.countryCode=val.CountryCodeId,$scope.getMobileNumberRegexForCountry())})};$scope.isInvalidCityEntered=function(isValid,val){if("cityTwo"!==val||!$rootScope.isMobileDevice)if(""!==$scope.customerInfo.city.name&&void 0!==$scope.customerInfo.city.name){var cityObject=CommonServiceTerm.getValidCityEntered($scope.customerInfo.city.name,$scope.cityList);$scope.customerInfo.city.id&&cityObject&&previousCityName.toLowerCase()===cityObject.CityName.toLowerCase()?$scope.errorObject.errorCity=!1:CommonServiceTerm.isEmptyObject(cityObject)?$scope.errorObject.errorCity=!0:($scope.selectedCityCallBack(cityObject),$scope.saveDataAndGetQuotes(isValid))}else $scope.customerInfo.city.name="",$scope.customerInfo.city.id=null,$scope.customerInfo.city.stateId=null,$scope.errorObject.errorCity=!1},$rootScope.isMobileDevice&&($scope.topCities=CommonServiceTerm.getTopCitiesList()),$scope.isValidInputCountryCode=function(){return $scope.errorObject.otherCountryCodeError=CommonServiceTerm.isUndefinedOrNullOrEmpty($scope.customerInfo.otherCountryCode),!$scope.errorObject.otherCountryCodeError},$scope.saveDataAndGetQuotes=function(isValid){CommonServiceTerm.isFGCancerProtect($scope.planDetails.planId)&&checkForLastName(),$scope.isValidInputCountryCode(),$scope.errorObject.mobileError=!($scope.customerInfo.mobileNo&&$scope.customerInfo.mobileNo.indexOf("*")>-1)&&!checkIfRegexIsValid($scope.regexForMobileNo,$scope.customerInfo.mobileNo),$scope.errorObject.emailError=!checkIfRegexIsValid("^[_a-zA-Z0-9]+(.[_a-zA-Z0-9]+)*@[a-zA-Z0-9-]+(.[a-zA-Z0-9-]+)*(.[a-zA-Z]{2,4})$",$scope.customerInfo.emailId),$scope.errorObject.mobileError||CommonServicePreQuotesTerm.checkIfChanged(customerInfoPreserved,$scope.customerInfo)&&isValid&&(!$scope.errorObject.errorCity||$scope.customerInfo.city.id)&&$scope.customerInfo.fullName&&isGenderEntered()&&($scope.postCustomerDetails(),customerInfoPreserved=angular.copy($scope.customerInfo))},$scope.noResult&&$scope.getCountryList().then(function(){customerInfoPreserved=angular.copy($scope.customerInfo)}),$scope.$on("someEvent",function(event){0==$scope.countryCodes.length?$scope.getCountryList().then(function(){customerInfoPreserved=angular.copy($scope.customerInfo),getCountryValidations($scope.customerInfo.countryCode)}):(customerInfoPreserved=angular.copy($scope.customerInfo),1*$scope.customerInfo.countryCode===999||getCountryCodes(),getCountryValidations($scope.customerInfo.countryCode),$scope.cityObject.isNRI=1*$scope.customerInfo.countryCode!==392),$scope.errorObject.emailError=!checkIfRegexIsValid("^[_a-zA-Z0-9]+(.[_a-zA-Z0-9]+)*@[a-zA-Z0-9-]+(.[a-zA-Z0-9-]+)*(.[a-zA-Z]{2,4})$",$scope.customerInfo.emailId),CommonServiceTerm.isFGCancerProtect($scope.planDetails.planId)&&checkForLastName()}),$scope.toggleCityModal=function(flag){flag||$scope.customerInfo.city.id||($scope.customerInfo.city.name=null),$timeout(function(){$scope.cityModal.isVisible=flag,$timeout(function(){$("input#city").first().focus()},100)},50)},$scope.callback=function(data){$scope.customerInfo.city.id=data.id||data.cityId,$scope.customerInfo.city.name=data.name,$scope.customerInfo.city.stateId=data.stateId,$scope.customerInfo.city.state=data.state,$rootScope.isMobileDevice&&$scope.toggleCityModal(!1),$scope.saveDataAndGetQuotes(!0)}}function ProductRidersController($scope,$rootScope,CommonServicePreQuotesTerm,$timeout,CommonServiceTerm,$filter,$localStorage,$cookies,GenericService){var riderInfoPreserved={};$scope.payoutdropdown={11:"Monthly Income",1012:"Monthly Income"},$scope.$on("someEvent",function(event){$scope.planDetails.riderPermiumsValue=0,riderInfoPreserved=angular.copy($scope.riderDetails),CommonServiceTerm.isIndiaFirstPlan($scope.planDetails.planId)&&("LumpSum"==$("#payoutDropdown_11").val()?$("#lumpsum_11").show()&&$("#monthly_11").hide():$("#monthly_11").show()&&$("#lumpsum_11").hide(),"LumpSum"==$("#payoutDropdown_1012").val()?$("#lumpsum_1012").show()&&$("#monthly_1012").hide():$("#monthly_1012").show()&&$("#lumpsum_1012").hide())}),$scope.showRiderHead=function(){return!CommonServiceTerm.isBaxaNewPlans($scope.planDetails.planId)||1*$scope.customerInfo.coverageUpto<=75},$scope.hideSumAssured=function(rider){return!(!rider||!CommonServiceTerm.isPNBPlan($scope.planDetails.planId))&&rider.isRiderDisabled},$scope.showExclamationTriangle=function(rider){return rider&&CommonServiceTerm.isPNBPlan($scope.planDetails.planId)?rider.isRiderDisabled||rider.isHidden:rider.isHidden},$scope.hidePayTerm=function(rider){return!(!rider||!CommonServiceTerm.isPNBPlan($scope.planDetails.planId))&&rider.isRiderDisabled},$scope.notAvailableInMonthly=function(rider){return!(!CommonServiceTerm.isAegonPlan($scope.planDetails.planId)||!$scope.$parent.quotesObj.isMonthly)&&!rider.monthlyRiderPremium},$scope.updateModel=function(item,category){item=$("#payoutDropdown_"+category).val(),$scope.payoutdropdown[category]="LumpSum"==item?"LumpSum":"Monthly Income","LumpSum"==item?$("#lumpsum_"+category).show()&&$("#monthly_"+category).hide():$("#monthly_"+category).show()&&$("#lumpsum_"+category).hide()},$scope.validateRiderValues=function(value,rider){if(rider.sumAssuredDetails.isError=!1,void 0!==value){var sumAssuredEntered=CommonServiceTerm.removeCommas(value);sumAssuredEntered%rider.sumAssuredDetails.sumAssuredInterval===0?(rider.sumAssuredDetails.isError=!(parseInt(sumAssuredEntered)>=parseInt(rider.sumAssuredDetails.minSumAssured)&&parseInt(sumAssuredEntered)<=parseInt(rider.sumAssuredDetails.maxSumAssured)),rider.sumAssuredDetails.errorMessage="Enter value between "+$filter("amountToString")(rider.sumAssuredDetails.minSumAssured)+" and "+$filter("amountToString")(rider.sumAssuredDetails.maxSumAssured)):rider.sumAssuredDetails.sumAssuredInterval>0&&(rider.sumAssuredDetails.isError=!0,rider.sumAssuredDetails.errorMessage="Enter value in multiples of "+$filter("amountToString")(rider.sumAssuredDetails.sumAssuredInterval))}else rider.sumAssuredDetails.isError=!0,rider.sumAssuredDetails.errorMessage="Enter sum assured value"},$scope.validateRiderSumAssuredPercentage=function(value,rider){if(rider.sumAssuredDetails.isError=!1,void 0!==value){var sumAssuredEnteredPercentage=CommonServiceTerm.removeCommas(value);
sumAssuredEnteredPercentage>100&&(rider.sumAssuredDetails.isError=!0,rider.sumAssuredDetails.errorMessage="Maximum limit is 100")}else rider.sumAssuredDetails.isError=!0,rider.sumAssuredDetails.errorMessage="Enter sum assured percentage"},$scope.isRiderError=function(rider){return rider.isSelected&&$scope.errorRiderIds.indexOf(rider.riderId)>-1},$scope.trackRiderCheck=function(rider){var custId=$cookies.get("custId")||-1;rider.isSelected?(gaTagsNew.trackRiderSelect(rider.riderName,"RiderSelect",custId),pbTrackerObj.logEvent({leadId:$scope.customerInfo.matrixLeadId,custId:$scope.customerInfo.custId,visitId:$scope.customerInfo.visitId,event:"On Rider Select",pageName:"ProductPage",riderName:rider.riderName,click:"Click"})):(gaTagsNew.trackRiderSelect(rider.riderName,"RiderDeselect",custId),pbTrackerObj.logEvent({leadId:$scope.customerInfo.matrixLeadId,custId:$scope.customerInfo.custId,visitId:$scope.customerInfo.visitId,event:"On Rider DeSelect",pageName:"ProductPage",riderName:rider.riderName,click:"Click"}))},$scope.showRiderTypeColumn=function(){var planId=$scope.planDetails.planId,showType=!1;return(GenericService.isPNBPlan(planId)||CommonServiceTerm.isHdfc3dPlan(planId)||CommonServiceTerm.isDHFLPlan(planId))&&(showType=!0),showType},$scope.sumAssuredOfADB=function(){var obj={};return obj=_.find($scope.riderDetails.riders,function(val){return 1*val.categoryId===12}),obj&&obj.sumAssuredSelected?obj.sumAssuredSelected:""},$scope.isPolTermInLimitForBaxa=function(rider){return!CommonServiceTerm.isBaxaNewPlans($scope.planDetails.planId)||(1*rider.categoryId!==10?1*$scope.customerInfo.coverageUpto<=65:1*$scope.customerInfo.coverageUpto<=75)},$scope.isSumAssuredGreaterThanZero=function(riderSumAssured){return!!riderSumAssured&&parseInt(CommonServiceTerm.removeCommas(riderSumAssured))>0},angular.element(document).ready(function(){$("#spouseProfileModal").on("hidden.bs.modal",function(){$scope.quotesObj.spouse||_.each($scope.riderDetails.riders,function(val){1*val.categoryId===13&&(val.isSelected=!1)}),$scope.$apply()})})}function ProductSpouseController($scope,$rootScope,CommonServicePreQuotesTerm,CommonServiceTerm,$cookies,$localStorage){$scope.spouseDobArray=angular.copy($scope.dObArrayObj),$scope.errorObject={emptyDob:!1,inValidDob:!1,ageAboveMax:!1,ageBelowMin:!1},$scope.spouseData={dobDate:null,dobMonth:null,dobYear:null},CommonServiceTerm.getSpouseData($cookies.get("enquiryId")).then(function(result){result.data.spouseDate?$scope.spouseData=CommonServicePreQuotesTerm.extractDOB(result.data.spouseDate):($scope.spouseData.dobDate=null,$scope.spouseData.dobMonth=null,$scope.spouseData.dobYear=null)}),$scope.selectSpousedobMonth=function(index,dobMonth){return index+1===parseInt(dobMonth)},$scope.closeSpouseModal=function(){_.each($scope.riderDetails.riders,function(val){1*val.categoryId===13&&(val.isSelected=!1,$scope.changeInRiderValues(val))}),CommonServiceTerm.getSpouseData($cookies.get("enquiryId")).then(function(result){result.data.spouseDate?$scope.spouseData=CommonServicePreQuotesTerm.extractDOB(result.data.spouseDate):($scope.spouseData.dobDate=null,$scope.spouseData.dobMonth=null,$scope.spouseData.dobYear=null)})},$scope.changeSpouseDOB=function(data){$scope.modifySelection.spouse.dob=data.dobDate+"-"+(data.dobMonth&&1==data.dobMonth.length?"0"+data.dobMonth:data.dobMonth)+"-"+data.dobYear,$scope.modifySelection.spouse.age=CommonServiceTerm.getAge($scope.modifySelection.spouse.dob),$scope.errorObject.ageAboveMax=isAgeAboveMaximum($scope.spouseData,$scope.modifySelection.spouse.dob),$scope.errorObject.ageBelowMin=isAgeBelowMinimum($scope.spouseData,$scope.modifySelection.spouse.dob)},$scope.changeDateAccToMonthAndYear=function(month){if($scope.spouseDobArray.date=CommonServicePreQuotesTerm.populateDates($scope.spouseData.dobMonth,$scope.spouseData.dobYear),null!==$scope.spouseData.dobDate&&void 0!==$scope.spouseData.dobDate&&""!==$scope.spouseData.dobDate){var date=$scope.spouseData.dobDate.length>1?$scope.spouseData.dobDate:"0"+$scope.spouseData.dobDate;$scope.spouseDobArray.date.indexOf(date)==-1&&($scope.spouseData.dobDate=$scope.spouseDobArray.date[$scope.spouseDobArray.date.length-1],$scope.changeSpouseDOB($scope.spouseData))}};var isDOBMissing=function(data){return!data.dobDate||!data.dobMonth||!data.dobYear},isAgeBelowMinimum=function(data,dob){return!isDOBMissing(data)&&isValidDateOfBirth(dob)&&CommonServiceTerm.getAge(dob)<18},isAgeAboveMaximum=function(data,dob){return!isDOBMissing(data)&&isValidDateOfBirth(dob)&&CommonServiceTerm.getAge(dob)>65},isValidDateOfBirth=function(dob){return dob&&CommonServicePreQuotesTerm.isValidDateOfBirth(dob)||!1};$scope.isYearSelected=function(index,dobYear){return index==$scope.spouseDobArray.year.indexOf(parseInt(dobYear))},$scope.isValidSpouseDetails=function(data){return angular.isDefined(data.spouse)&&data.spouse&&angular.isDefined(data.spouse.age)&&data.spouse.age&&CommonServiceTerm.isSpouseAgeValid(data.spouse.age)&&null!==data.spouse.tobacco&&null!==data.spouse.isWorking},$scope.validateSpouseDetails=function(frmSpouseDetails){$scope.errorObject.emptyDob=isDOBMissing($scope.spouseData),$scope.errorObject.inValidDob=!isValidDateOfBirth($scope.modifySelection.spouse.dob),$scope.errorObject.ageAboveMax=isAgeAboveMaximum($scope.spouseData,$scope.modifySelection.spouse.dob),$scope.errorObject.ageBelowMin=isAgeBelowMinimum($scope.spouseData,$scope.modifySelection.spouse.dob),$scope.errorObject.ageBelowMin||$scope.errorObject.ageBelowMin||$scope.errorObject.ageBelowMin||$scope.errorObject.ageBelowMin||$scope.updateSpouseDetails(frmSpouseDetails)}}function CommonServicePreQuotesTerm($rootScope,$cookies,$filter,CommonServiceTerm,PlanService,CustomerService,$q,ServerUtilityService,$location,$localStorage){function isLeapYear(year){return!(year%4)&&year%100||!(year%400)}function doNotAddRider(planId,categoryId){return!(!CommonServiceTerm.isPNBPlan(planId)||11!=categoryId&&15!=categoryId)}function addRiderPremiumsDiffPayout(riders,type,planId){var riderPremiums=0;return _.each(riders,function(val){!val.isSelected||val.isHidden||riderPremiumAlreadyAdded(planId,val.categoryId)||doNotAddRider(planId,val.categoryId)||("monthly"===type?riderPremiums+=val.monthlyRiderPremium:"quarterly"===type?riderPremiums+=val.quarterlyRiderPremium:"halfyearly"===type?riderPremiums+=val.halfYearlyRiderPremium:"yearly"===type&&(riderPremiums+=val.riderPremium))}),riderPremiums}function riderPremiumAlreadyAdded(planId,categoryId){var alreadyAddedRiderMap={2931:38,2911:10,2961:38,2941:10,2991:38,2971:10,890:15};return!(!CommonServiceTerm.isKotakPlan(planId)&&!CommonServiceTerm.isSbiPoornaSuraksha(planId))&&alreadyAddedRiderMap[planId]==categoryId}function policyTermInRange(customerInfo,range){return!self.isValidDateOfBirth(customerInfo.dob)||customerInfo.coverageUpto-CommonServiceTerm.getAge(customerInfo.dob)<=40}function callGaQuotesSelection(plan,leadId,custId){var obj={};obj.Plan_Name=plan.planName,obj.Plan_Id=plan.planId,obj.Supplier_Name=plan.supplierName,obj.maxTotalPremium=plan.totalPremiumWithRiders;var custId=$cookies.get("custId")||-1;gtmObj.quotesSelection(obj,leadId,custId,1,!1)}function populatePrePaymentData(data,custData,isMonthly){var obj={};return obj.premium=data.showPremium,obj.matrixLeadId=custData.matrixleadId,obj.planId=data.planId,obj.enquiryId=custData.enquiryId,obj.insurerId=data.supplierId||31,obj.customerId=custData.custId,obj.productId=$rootScope.cancerJourney?String(termConfigObj.getCancerCareProductId()):String(termConfigObj.getTermProductId()),obj.mobile=custData.mobileNo,obj.email=custData.emailId,obj.userAgent="bb",obj.name=custData.fullName,obj.refId=custData.encodedEnquiryId,obj.visitId=custData.visitId,obj.creditReport=custData.creditReportCheck,obj}function paymentInitiateObject(data,planData,payOptionType,custData){var obj={},currentDate=new Date;currentDate.getFullYear();return obj.planId=planData.planId,obj.custId=custData.custId.toString(),obj.email=custData.email,obj.mobileNo=custData.mobileNo,obj.name=custData.firstName+" "+custData.lastName,obj.refId=CommonServiceTerm.getEnquiryId(),obj.productId=$rootScope.cancerJourney?termConfigObj.getCancerCareProductId():termConfigObj.getTermProductId(),obj.txnAmount=planData.showPremium,obj}var self=this,decodedEnquiryId=0;this.setDecodedEnquiryId=function(enquiryId){decodedEnquiryId=enquiryId};var getValue=function(value){return angular.isDefined(value)?value:null};this.extractDOB=function(dob){var data={};return data.dobDate=getValue(dob)?self.extractDateMonthYearFromDOB(dob,0):null,data.dobMonth=getValue(dob)?self.extractDateMonthYearFromDOB(dob,1):null,data.dobYear=getValue(dob)?self.extractDateMonthYearFromDOB(dob,2):null,data},this.populateDates=function(month,year){var dates=[];return dates=1*month===4||1*month===6||1*month===9||1*month===11?self.getDateList(30):1*month===2?isLeapYear(year)?self.getDateList(29):self.getDateList(28):self.getDateList(31)},this.isValidDateOfBirth=function(dob){if(angular.isUndefined(dob)||!dob)return!1;var dobRegX=/^(0?[1-9]|[12][0-9]|3[01])[\/\-](0?[1-9]|1[012])[\/\-]\d{4}$/;if(dob.match(dobRegX)){var dobArray=dob.split("-"),date=parseInt(dobArray[0],10),month=parseInt(dobArray[1],10),year=parseInt(dobArray[2],10),listOfDays=[31,28,31,30,31,30,31,31,30,31,30,31];if((1==month||month>2)&&date>listOfDays[month-1])return!1;if(2==month){var leapYear=isLeapYear(year);if(!leapYear&&date>=29)return!1;if(leapYear&&date>29)return!1}return!0}return!1},this.getDateList=function(max){for(var dateList=[],i=1;i<=max;i++)i<=9?dateList.push("0"+i):dateList.push(i.toString());return dateList},this.getYearList=function(supplierId,minYear,maxYear){var minYear=minYear||18,maxYear=maxYear||66,currentYear=(new Date).getFullYear(),min=currentYear-maxYear,max=currentYear-minYear,yearList=[];1*supplierId===6&&(min=currentYear-61);for(var i=max;i>=min;i--)yearList.push(i);return yearList},this.getChildBirthYearList=function(){for(var currentYear=(new Date).getFullYear(),min=currentYear-13,max=currentYear,yearList=[],i=max;i>=min;i--)yearList.push(i);return yearList},this.extractDateMonthYearFromDOB=function(dobString,index){var dobArray=dobString.split("-");return dobArray[index]},this.getOtherCountryCodeFromId=function(codes,countryId){var countryCodeId=91,countryObj=_.find(codes,function(data){if(1*data.CountryCodeId===1*countryId)return data});return countryCodeId=countryObj.CountryCode,countryObj.CountryCode=1*countryId===999?"":countryObj.CountryCode,countryObj},this.removeCommas=function(x){var returnedAmount=0;return isNaN(x)?void 0!==x&&null!==x&&null!==x.match(/\d+/g)&&(returnedAmount=isNaN(x)?x.replace(/,/g,""):x):returnedAmount=x,returnedAmount},this.isEmptyObject=function(obj){for(var prop in obj)if(obj.hasOwnProperty(prop))return!1;return!0},this.getNumberFromCommaSeparation=function(val){return void 0!==val&&isNaN(val)&&(val=val.replace(/,/g,"")),val},this.isValidAmount=function(amount,isMonthlyIncomeJourney,cancerJourney,limitObject,planId,type){var allowedAmont=limitObject.min,maxAllowedAmt=limitObject.max;return limitObject.step&&limitObject.step>1?self.removeCommas(amount)>=allowedAmont&&self.removeCommas(amount)<=maxAllowedAmt&&self.removeCommas(amount)%limitObject.step===0:self.removeCommas(amount)>=allowedAmont&&self.removeCommas(amount)<=maxAllowedAmt},this.getTotalPayoutAmountBoundry=function(planId,term,age,childAge){var amountBoundry={min:0,max:0},allowedAmont=1e6,maxAllowedAmt=2e8;if(309===planId)allowedAmont=5e6,maxAllowedAmt=2e8;else if(739===planId)allowedAmont=5000040,maxAllowedAmt=36e7;else if(740===planId)allowedAmont=5e6,maxAllowedAmt=646888064;else if(762===planId)allowedAmont=5e6,maxAllowedAmt=2e8;else if(776===planId)allowedAmont=25e5,maxAllowedAmt=2e8;else if(777===planId)allowedAmont=37e5,maxAllowedAmt=296e6;else if(778===planId)allowedAmont=424e4,maxAllowedAmt=3392e5;else if(766===planId||892===planId)allowedAmont=1e6,maxAllowedAmt=2e8;else if(767===planId||893===planId)allowedAmont=1e6,maxAllowedAmt=199999992;else if(768===planId||894===planId)allowedAmont=145e4,maxAllowedAmt=289999988;else if(703===planId)allowedAmont=2e6,maxAllowedAmt=2e8;else if(705===planId)allowedAmont=25e5,maxAllowedAmt=2e8;else if(724===planId)allowedAmont=2e6,maxAllowedAmt=2e8;else if(733===planId)allowedAmont=5e6,maxAllowedAmt=2e8;else if(736===planId)allowedAmont=3e6,maxAllowedAmt=4e7;else if(750===planId)allowedAmont=5125e3,maxAllowedAmt=41e7;else if(763===planId)allowedAmont=5e6,maxAllowedAmt=2e8;else if(732===planId)allowedAmont=25e5,maxAllowedAmt=2e8;else if(735===planId)allowedAmont=2875e3,maxAllowedAmt=23e7;else if(758===planId)allowedAmont=325e4,maxAllowedAmt=26e7;else if(749===planId)allowedAmont=1e6,maxAllowedAmt=2e8;else if(752===planId)allowedAmont=1196e3,maxAllowedAmt=2e8;else if(753===planId)allowedAmont=1220720,maxAllowedAmt=2e8;else if(CommonServiceTerm.isLICPlan(planId))allowedAmont=25e5,maxAllowedAmt=2e8;else if(void 0!==angular.isDefined(age)&&age>0&&(751===planId||764===planId||765===planId)){if(751===planId){var minMaxTotalPayout=this.getAgeBaseTotalPayoutiIncome(age);void 0!=angular.isDefined(minMaxTotalPayout)&&minMaxTotalPayout.length>0&&(allowedAmont=Math.round(minMaxTotalPayout[0]),maxAllowedAmt=Math.round(minMaxTotalPayout[1]))}else if(765===planId){var minMaxTotalPayout=this.getAgeBaseTotalPayoutFgIncreasingIncome(age);void 0!=angular.isDefined(minMaxTotalPayout)&&minMaxTotalPayout.length>0&&(allowedAmont=Math.round(minMaxTotalPayout[0]),maxAllowedAmt=Math.round(minMaxTotalPayout[1]))}else if(764===planId){var minMaxTotalPayout=this.getAgeBaseTotalPayoutFgLevelIncome(age);void 0!=angular.isDefined(minMaxTotalPayout)&&minMaxTotalPayout.length>0&&(allowedAmont=Math.round(minMaxTotalPayout[0]),maxAllowedAmt=Math.round(minMaxTotalPayout[1]))}}else if(void 0!==angular.isDefined(childAge)&&childAge>=0&&756===planId){var minMaxTotalPayout=this.getChildAgeBaseTotalPayout(childAge);void 0!=angular.isDefined(minMaxTotalPayout)&&minMaxTotalPayout.length>0&&(allowedAmont=Math.round(minMaxTotalPayout[0]),maxAllowedAmt=Math.round(minMaxTotalPayout[1]))}else if(void 0!==angular.isDefined(term)&&term>=0&&(780===planId||781===planId||782===planId||783===planId||755===planId)){if(780===planId){var minMaxTotalPayout=this.getTermBaseTotalPayoutSBIOptionA(term);void 0!=angular.isDefined(minMaxTotalPayout)&&minMaxTotalPayout.length>0&&(allowedAmont=Math.round(minMaxTotalPayout[0]),maxAllowedAmt=Math.round(minMaxTotalPayout[1]))}else if(781===planId){var minMaxTotalPayout=this.getTermBaseTotalPayoutSBIOptionB(term);void 0!=angular.isDefined(minMaxTotalPayout)&&minMaxTotalPayout.length>0&&(allowedAmont=Math.round(minMaxTotalPayout[0]),maxAllowedAmt=Math.round(minMaxTotalPayout[1]))}else if(782===planId){var minMaxTotalPayout=this.getTermBaseTotalPayoutSBIOptionC(term);void 0!=angular.isDefined(minMaxTotalPayout)&&minMaxTotalPayout.length>0&&(allowedAmont=Math.round(minMaxTotalPayout[0]),maxAllowedAmt=Math.round(minMaxTotalPayout[1]))}else if(783===planId){var minMaxTotalPayout=this.getTermBaseTotalPayoutSBIOptionD(term);void 0!=angular.isDefined(minMaxTotalPayout)&&minMaxTotalPayout.length>0&&(allowedAmont=Math.round(minMaxTotalPayout[0]),maxAllowedAmt=Math.round(minMaxTotalPayout[1]))}else if(755===planId){var minMaxTotalPayout=this.termBaseTotalPayoutForRelianceIprotect(term);void 0!=angular.isDefined(minMaxTotalPayout)&&minMaxTotalPayout.length>0&&(allowedAmont=Math.round(minMaxTotalPayout[0]),maxAllowedAmt=Math.round(minMaxTotalPayout[1]))}}else 786===planId?(allowedAmont=25e5,maxAllowedAmt=2e8):790===planId?(allowedAmont=25e5,maxAllowedAmt=1e8):791===planId?(allowedAmont=3627e3,maxAllowedAmt=14508e4):792===planId?(allowedAmont=3063500,maxAllowedAmt=12254e4):794===planId?(allowedAmont=3676987.235,maxAllowedAmt=147079489.4):795===planId?(allowedAmont=3088493.618,maxAllowedAmt=123539744.7):793===planId||697===planId?(allowedAmont=5e6,maxAllowedAmt=2e8):796===planId||798===planId?(allowedAmont=5e6,maxAllowedAmt=2e8):797===planId?(allowedAmont=54e5,maxAllowedAmt=216e6):799===planId?(allowedAmont=8335509,maxAllowedAmt=333420376):787===planId?(allowedAmont=25e5,maxAllowedAmt=2e8):789===planId?(allowedAmont=275e4,maxAllowedAmt=22e7):800===planId?(allowedAmont=3e6,maxAllowedAmt=2e8):802===planId?(allowedAmont=4366500,maxAllowedAmt=2911e5):801===planId?(allowedAmont=4788399,maxAllowedAmt=319226613):806===planId?(allowedAmont=5e6,maxAllowedAmt=2e8):807===planId?(allowedAmont=6613200,maxAllowedAmt=264528001):808===planId?(allowedAmont=6839070,maxAllowedAmt=273562801):809===planId?(allowedAmont=5806600,maxAllowedAmt=232264001):810===planId?(allowedAmont=5919535,maxAllowedAmt=236781401):681===planId?(allowedAmont=15e5,maxAllowedAmt=5e7):844===planId||845===planId||846===planId?(allowedAmont=5e6,maxAllowedAmt=2e8):880===planId||881===planId||882===planId?(allowedAmont=1e6,maxAllowedAmt=5e6):883===planId||8831===planId||8832===planId||2931===planId||2911===planId?(allowedAmont=25e5,maxAllowedAmt=2e8):884===planId||8841===planId||8842===planId||2961===planId||2941===planId?(allowedAmont=2469400,maxAllowedAmt=197552e3):885===planId||8851===planId||8852===planId||2991===planId||2971===planId?(allowedAmont=4022980,maxAllowedAmt=321838400):CommonServiceTerm.isSbiPoornaSuraksha(planId)?(allowedAmont=2e6,maxAllowedAmt=25e6):CommonServiceTerm.isAegonItermPlusPlan(planId)?(allowedAmont=25e5,maxAllowedAmt=2e8):891===planId?(allowedAmont=35e5,maxAllowedAmt=2e8):896==planId||8961==planId||8962==planId?(allowedAmont=5e6,maxAllowedAmt=15e6):898==planId||8981==planId||8982==planId?(allowedAmont=642e4,maxAllowedAmt=1926e4):899==planId||8991==planId||8922==planId?(allowedAmont=535e4,maxAllowedAmt=1605e4):906==planId?(allowedAmont=3e6,maxAllowedAmt=2e8):900==planId?(allowedAmont=75e5,maxAllowedAmt=2e8):CommonServiceTerm.isIndiaFirstPlan(planId)?(allowedAmont=5e6,maxAllowedAmt=2e8):939===planId?(allowedAmont=2e6,maxAllowedAmt=1e8):921==planId?(allowedAmont=25e5,maxAllowedAmt=2e8):CommonServiceTerm.isICICITropPlan(planId)&&(allowedAmont=25e5,maxAllowedAmt=2e7);return amountBoundry.min=allowedAmont,amountBoundry.max=maxAllowedAmt,amountBoundry},this.getMonthlyAmountBoundry=function(planId,term,age,childAge){var amountBoundry={min:0,max:0},allowedAmont=3e4,maxAllowedAmt=2e6;if(777===planId||778===planId)allowedAmont=1e4,maxAllowedAmt=8e5;else if(767===planId||768===planId||893===planId||894===planId)allowedAmont=8333,maxAllowedAmt=1666667;else if(780===planId||781===planId||782===planId||783===planId)allowedAmont=25e3,maxAllowedAmt=2e6;else if(750===planId)allowedAmont=43750,maxAllowedAmt=35e5;else if(751===planId)allowedAmont=3e4,maxAllowedAmt=2e6;else if(764===planId)age>=25&&age<=43?(allowedAmont=25e3,maxAllowedAmt=2e6):age>=44&&age<=48?(allowedAmont=35e3,maxAllowedAmt=2e6):age>=49&&age<=55&&(allowedAmont=42e3,maxAllowedAmt=2e6);else if(765===planId)age>=25&&age<=48?(allowedAmont=25e3,maxAllowedAmt=2e6):age>=49&&age<=55&&(allowedAmont=3e4,maxAllowedAmt=2e6);else if(735===planId)allowedAmont=12500,maxAllowedAmt=1e6;else if(758===planId)allowedAmont=25e3,maxAllowedAmt=2e6;else if(752===planId)allowedAmont=5800,maxAllowedAmt=1212375;else if(753===planId)allowedAmont=3900,maxAllowedAmt=798700;else if(739===planId)allowedAmont=27778,maxAllowedAmt=2e6;else if(740===planId)allowedAmont=15459,maxAllowedAmt=2e6;else if(void 0!==angular.isDefined(childAge)&&childAge>=0&&756==planId){var minMaxMonthlyIncome=this.getChildAgeBaseMonthlyIncome(childAge);void 0!=angular.isDefined(minMaxMonthlyIncome)&&minMaxMonthlyIncome.length>0&&(allowedAmont=Math.round(minMaxMonthlyIncome[0]),maxAllowedAmt=Math.round(minMaxMonthlyIncome[1]))}else 755===planId?(allowedAmont=17500,maxAllowedAmt=2e6):791===planId?(allowedAmont=20150,maxAllowedAmt=806e3):792===planId?(allowedAmont=10075,maxAllowedAmt=403e3):794===planId?(allowedAmont=14200,maxAllowedAmt=568e3):795===planId?(allowedAmont=7100,maxAllowedAmt=284e3):797===planId?(allowedAmont=3e4,maxAllowedAmt=12e5):798===planId||799===planId?(allowedAmont=25e3,maxAllowedAmt=1e6):789===planId?(allowedAmont=15e3,maxAllowedAmt=12e5):802===planId?(allowedAmont=20925,maxAllowedAmt=1395e3):801===planId?(allowedAmont=16175,maxAllowedAmt=1078333):807===planId?(allowedAmont=55110,maxAllowedAmt=2204400):808===planId?(allowedAmont=39305,maxAllowedAmt=1572200):809===planId?(allowedAmont=27555,maxAllowedAmt=1102200):810===planId?(allowedAmont=19652,maxAllowedAmt=786100):884===planId||8841===planId||8842===planId||2961===planId||2941===planId?(allowedAmont=12330,maxAllowedAmt=986400):885===planId||8851===planId||8852===planId||2991===planId||2971===planId?(allowedAmont=12330,maxAllowedAmt=986400):898===planId||8981===planId||8982===planId?(allowedAmont=53500,maxAllowedAmt=160500):899!==planId&&8991!==planId&&8992!==planId||(allowedAmont=47500,maxAllowedAmt=142500);return amountBoundry.min=allowedAmont,amountBoundry.max=maxAllowedAmt,amountBoundry},this.getSumAssuredAmountBoundry=function(planId,term,age,childAge){var amountBoundry={min:0,max:0},allowedAmont=1e6,maxAllowedAmt=2e8;return 739===planId?(allowedAmont=3291232,maxAllowedAmt=236966825):740===planId?(allowedAmont=4095e3,maxAllowedAmt=529801325):777===planId||778===planId?(allowedAmont=25e5,maxAllowedAmt=2e8):767===planId||768===planId||893===planId||894===planId?(allowedAmont=1e6,maxAllowedAmt=2e8):736===planId?(allowedAmont=3e6,maxAllowedAmt=4e7):750===planId?(allowedAmont=25e5,maxAllowedAmt=2e8):764===planId||765===planId?(allowedAmont=5e6,maxAllowedAmt=2e8):735===planId||758===planId?(allowedAmont=25e5,maxAllowedAmt=2e8):752===planId?(allowedAmont=1e6,maxAllowedAmt=209030100):753===planId?(allowedAmont=1e6,maxAllowedAmt=209030100):756===planId?(allowedAmont=1e6,maxAllowedAmt=2e8):755===planId?(allowedAmont=35e5,maxAllowedAmt=4e8):791===planId||792===planId||794===planId||795===planId?(allowedAmont=25e5,maxAllowedAmt=1e8):797===planId||798===planId||799===planId?(allowedAmont=5e6,maxAllowedAmt=2e8):787===planId||789===planId?(allowedAmont=25e5,maxAllowedAmt=2e8):800===planId||801===planId||802===planId?(allowedAmont=3e6,maxAllowedAmt=2e8):806===planId||807===planId||808===planId||809===planId||810===planId?(allowedAmont=5e6,maxAllowedAmt=2e8):CommonServiceTerm.isKotakPlan(planId)?(allowedAmont=25e5,maxAllowedAmt=2e8):883===planId||884===planId||885===planId||8831===planId||8832===planId||8841===planId||8842===planId||8851===planId||8852===planId||2931===planId||2911===planId||2961===planId||2941===planId||2991===planId||2971===planId?(allowedAmont=25e5,maxAllowedAmt=2e8):891===planId?(allowedAmont=35e5,maxAllowedAmt=2e8):CommonServiceTerm.isExidePlan(planId)?(allowedAmont=5e6,maxAllowedAmt=15e6):906===planId?(allowedAmont=3e6,maxAllowedAmt=2e8):911===planId||912===planId?(allowedAmont=25e5,maxAllowedAmt=2e8):CommonServiceTerm.isIndiaFirstPlan(planId)?(allowedAmont=5e6,maxAllowedAmt=2e8):939===planId?(allowedAmont=2e6,maxAllowedAmt=2e8):CommonServiceTerm.isICICITropPlan(planId)&&(allowedAmont=25e5,maxAllowedAmt=2e7),amountBoundry.min=allowedAmont,amountBoundry.max=maxAllowedAmt,amountBoundry},this.getOneTimeAmountBoundry=function(planId,term,age,childAge){var amountBoundry={min:0,max:0},allowedAmont=25e5,maxAllowedAmt=2e8;if(884===planId||885===planId||8841===planId||8842===planId||8851===planId||8852===planId||2961===planId||2941===planId||2991===planId||2971===planId)var allowedAmont=25e4,maxAllowedAmt=2e8;return amountBoundry.min=allowedAmont,amountBoundry.max=maxAllowedAmt,amountBoundry},this.populatePolicyTermList=function(min,max,interval,polList){var arr=[];if(polList.length>0)_.each(polList,function(val){var obj={};obj.name=val+" years",obj.id=val,arr.push(obj)});else for(var i=min;i<=max;){var obj={};obj.name=i+" years",obj.id=i,arr.push(obj),i=parseInt(i)+interval}return arr},this.isMonthlyJourney=function(){return!1},this.isCancerJourney=function(){return!1},this.prefillCustomerData=function(data){var isMobileDefault=!!$location.$$search.isMobileDefault,customerData={};return customerData.city={name:"",id:null,stateId:null},customerData.totalPayout=$filter("addCommas")(data.totalPayout),customerData.oneTimePayout=$filter("addCommas")(data.oneTimePayout),customerData.monthlyPayout=$filter("addCommas")(data.monthlyPayout),customerData.sumAssured=$filter("addCommas")(data.sumAssured),customerData.annualIncome=$filter("addCommas")(data.annualIncomeStr)||data.annualIncome||"",customerData.dob=data.dob,customerData.isTobacco=data.isTobaccoUser,customerData.gender=data.gender.toString(),customerData.city.name=isMobileDefault?null:data.city,customerData.city.id=isMobileDefault?null:data.cityId,customerData.city.stateId=isMobileDefault?null:data.stateId,customerData.countryCode=data.countryId,customerData.fullName=data.name,customerData.emailId=data.emailId,customerData.mobileNo=data.mobileNo,customerData.encryptedMobileNo=data.encryptedMobileNo,customerData.coverageUpto=data.policyTerm.toString(),customerData.otherCountryCode=data.otherCountryCode,customerData.matrixleadId=data.matrixLeadId,customerData.visitId=data.visitId,customerData.custId=data.custId,customerData.age=data.customerAge,customerData.paymentTerm=data.paymentTerm,customerData.monthlyIncome=data.monthlyIncome>0?data.monthlyIncome:3e4,customerData.childAge=!angular.isUndefined(data.child)&&null!==data.child&&data.child&&"null"!==data.child&&"undefined"!==data.child?data.child.age:-1,customerData.annualId=data.annualIncome,customerData.state=isMobileDefault?null:data.state,customerData.decodedEnquiryId=data.enquiryId||0,customerData},this.prefillPlanData=function(data){var planData=[];return _.each(data,function(value){if(value.planDetails.length>0){var eachPlan={};eachPlan=value.planDetails[0],eachPlan.basePlanId=CommonServiceTerm.setPlanId(eachPlan.planId),void 0!==value.riderDetails&&(eachPlan.riderDetails=value.riderDetails),void 0!==value.featuresExclusion&&(eachPlan.featuresExclusion=value.featuresExclusion),planData.push(eachPlan)}}),planData},this.prefillCancerPlanData=function(data){var planData=[];return data&&_.each(data[0].cancerPlanDetails,function(value){var eachPlan={};eachPlan=value,planData.push(eachPlan)}),planData.sortByProp("planId")},this.checkIfChanged=function(preserved,changed){return!angular.equals(preserved,changed)},this.checkIfSumAssured=function(riderInfoPreserved,riderDetails){var isChanged=!1;return _.each(riderInfoPreserved.riders,function(preserved){_.each(riderDetails.riders,function(rider){preserved.sumAssuredSelected!==rider.sumAssuredSelected&&(isChanged=!0)})}),isChanged},this.getAllFeatures=function(exclusions,type){var obj={};return void 0!==exclusions.mainDescription&&(obj=_.find(exclusions.mainDescription,function(val){if("benefits"===type){if("benefits"===val.mainHeading.toLowerCase())return val}else if("features"===type){if("key features"===val.mainHeading.toLowerCase())return val}else if("eligibility"===type){if(val.mainHeading.toLowerCase().startsWith("eligibility"))return val}else if("exclusions"===type){if(val.mainHeading.toLowerCase().startsWith("exclusions"))return val}else if("cancer-eligibility"===type&&val.mainHeading.toLowerCase().startsWith("cancer"))return val.cancerEligibilityList})),obj};var saveQuoteSelection=function(plan,customerInfo,enquiryId){var input={planId:plan.planId,refId:enquiryId,productId:"7",premium:plan.finalPremium,supplierId:plan.supplierId,leadId:customerInfo.matrixleadId,mobileNo:customerInfo.mobileNo,encryptedMobileNo:customerInfo.encryptedMobileNo,selectedBy:"0",ipAddress:"127.0.0.1",sourcePage:"ProductPage"};CustomerService.saveQuoteSelection(input).success(function(data,status,headers,config){})},getRiderRequestedParameters=function(riders,isRider,isMonthly,planId){var requestedArray=[];return angular.isDefined(riders)&&angular.forEach(riders,function(value,key){var riderPremium=0;if(isRider===value.isRider&&((planId&&CommonServiceTerm.isPNBPlan(planId)&&13==value.categoryId&&(value.isRiderDisabled||value.isHidden)||11==value.categoryId&&!CommonServiceTerm.isIndiaFirstPlan(planId))&&(value.isSelected=!1),riderPremium=isMonthly?value.monthlyRiderPremium:value.riderPremium,value.isSelected&&riderPremium>0)){var requestedObj={riderId:value.riderId,riderName:value.riderName,riderPremium:riderPremium,riderPremiumAnnually:value.riderPremium,riderSumAssured:CommonServiceTerm.removeCommas(value.sumAssuredSelected),riderPolicyTerm:angular.isDefined(value.selectedPolicyTerm)?value.selectedPolicyTerm:0,riderType:CommonServiceTerm.isUndefinedOrNullOrEmpty(value.typeSelected)?"":value.typeSelected,supportedRiderPremium:value.supportedRiderPremium,supportedRiderPremiumSA:value.supportedRiderPremiumSA,annualPremiumGST:PlanService.isUndefinedOrNull(value.annualPremiumGST)?0:value.annualPremiumGST,annualPremiumWGST:PlanService.isUndefinedOrNull(value.annualPremiumWGST)?0:value.annualPremiumWGST,monthlyPremiumGST:PlanService.isUndefinedOrNull(value.monthlyPremiumGST)?0:value.monthlyPremiumGST,monthlyPremiumWGST:PlanService.isUndefinedOrNull(value.monthlyPremiumWGST)?0:value.monthlyPremiumWGST,halfYearlyPremiumGST:PlanService.isUndefinedOrNull(value.halfYearlyPremiumGST)?0:value.halfYearlyPremiumGST,halfYearlyPremiumWGST:PlanService.isUndefinedOrNull(value.halfYearlyPremiumWGST)?0:value.halfYearlyPremiumWGST,quarterlyPremiumGST:PlanService.isUndefinedOrNull(value.quarterlyPremiumGST)?0:value.quarterlyPremiumGST,quarterlyPremiumWGST:PlanService.isUndefinedOrNull(value.quarterlyPremiumWGST)?0:value.quarterlyPremiumWGST};CommonServiceTerm.isIndiaFirstPlan(planId)&&value.incomeOptionValue&&(requestedObj.incomeOptionValue=PlanService.isUndefinedOrNull(value.incomeOptionValue)||"LumpSum"==$("#payoutDropdown_"+value.categoryId).val()?0:value.incomeOptionValue),requestedArray.push(requestedObj)}}),requestedArray};this.getInsurerDetails=function(plan,customerInfo,payOptionType,isMonthly,ridersArray,quotesObj){var isMonthly=isMonthly;if(1*payOptionType===2&&(isMonthly=!1),ridersArray)var riderDetails=ridersArray.riders;var deferred=$q.defer(),enquiryId=CommonServiceTerm.getEnquiryId();saveQuoteSelection(plan,customerInfo,enquiryId);var riderArray=[],planArray=[],basePremium=307==plan.planId||309==plan.planId?plan.totalPremium:null;ridersArray&&(riderArray=getRiderRequestedParameters(riderDetails,!0,isMonthly,plan.planId),planArray=getRiderRequestedParameters(riderDetails,!1,isMonthly)),customerInfo.totalPayout=CommonServiceTerm.removeCommas(customerInfo.totalPayout),customerInfo.sumAssured=CommonServiceTerm.removeCommas(customerInfo.sumAssured),customerInfo.annualIncome=CommonServiceTerm.removeCommas(customerInfo.annualIncome),customerInfo.annualIncomeStr=CommonServiceTerm.isAvivaPlan(plan.planId)?CommonServiceTerm.changeDisplayNumberFormat(CommonServiceTerm.removeCommas(customerInfo.annualIncome)):CommonServiceTerm.removeCommas(customerInfo.annualIncome),customerInfo.oneTimePayout=CommonServiceTerm.removeCommas(customerInfo.oneTimePayout);var obj=angular.copy(customerInfo);obj.isMonthly=!!(isMonthly&&plan.montlyTotalPremiumWithRiders>0),obj.payOptionType=1*payOptionType===3?"Limited":1*payOptionType===2?"Single":"Regular",obj.countryId=obj.countryCode,obj.customerAge=obj.customerAge?obj.customerAge:obj.age,obj.productId=termConfigObj.getTermProductId(),plan.PolicyTerm=plan.policyTerm,obj.paymentFrequency=isMonthly?12:1;var totalPremium=obj.isMonthly?plan.montlyTotalPremiumWithRiders:plan.totalPremiumWithRiders;return PlanService.getInsurerDetails(obj,plan,enquiryId,totalPremium,riderArray,planArray,basePremium,quotesObj).success(function(data,status,headers,config){if(CommonServiceTerm.isPNBPlan(plan.planId))data.InsurerDetails&&data.InsurerDetails.fields&&data.InsurerDetails.fields.partnerTransactionId?$location.path("/checkout/"+plan.planName).search({enquiryId:CommonServiceTerm.getEnquiryId(),planId:plan.planId,payOptionType:payOptionType,ppt:plan.ppt,premiumType:isMonthly?"monthly":"yearly"}):deferred.resolve("error");else{var leadId=customerInfo.matrixleadId,isE2ePlan=plan.Plan_Id?termConfigObj.getE2EPlanIds().indexOf(plan.Plan_Id)!=-1:void 0;if(leadId&&CommonServiceTerm.createRevisit({leadId:leadId,
productId:$rootScope.cancerJourney?CommonServiceTerm.getCancerCareProductId():termConfigObj.getTermProductId(),pageName:isE2ePlan?"E2eRedirect":"InsurerRedirect"}),data.InsurerDetails&&data.InsurerDetails.action&&"POST"===data.InsurerDetails.action){var riders="";if(angular.isDefined(data.InsurerDetails.fields.riderName)&&""!==data.InsurerDetails.fields.riderName&&(riders='<input type="hidden" name="Riders[0][Rider_Name]" value='+data.InsurerDetails.fields.riderName+' /><input type="hidden" name="Riders[0][Rider_Amount]" value='+data.InsurerDetails.fields.riderAmount+' /><input type="hidden" name="Riders[0][Rider_Term]" value='+data.InsurerDetails.fields.riderTerm+" />"),CommonServiceTerm.isLICPlan(plan.planId)||CommonServiceTerm.isKotakPlan(plan.planId)||CommonServiceTerm.isAvivaIsmartPlan(plan.planId)||CommonServiceTerm.isIndiaFirstPlan(plan.planId)){var redirectUrl=data.InsurerDetails.url,fields=data.InsurerDetails.fields;if(CommonServiceTerm.isKotakPlan(plan.planId)?redirectUrl+="?PID=EON&PageRedirect=PersonalDetails":CommonServiceTerm.isAvivaIsmartPlan(plan.planId)&&(redirectUrl+="?key=POLICYBAZAAR"),!CommonServiceTerm.isUndefinedOrNullOrEmpty(fields)){var jForm=$('<form type="hidden"></form>'),jInput=$("<input type='hidden'>");jForm.attr("action",redirectUrl),jForm.attr("method","post"),jForm.attr("enctype","text/html");for(key in fields)"partnerTransactionId"!=key&&(jInput=$("<input type='hidden'>"),jInput.attr("name",key),jInput.attr("value",data.InsurerDetails.fields[key]),jForm.append(jInput));jForm.appendTo("body").submit()}}else{var form=$('<form action="/api/redirect" method="post" enctype="application/json"><input type="hidden" id="Partner_Transaction_Id" name="enquiryId" value='+data.InsurerDetails.fields.partnerTransactionId+" /></form>");$("body").append(form),$(form).submit()}}else data.InsurerDetails&&data.InsurerDetails.url?window.location=data.InsurerDetails.url:deferred.resolve("error");deferred.resolve()}}),deferred.promise},this.getAllCategoryIds=function(riders){var categorys=[];return _.each(riders,function(val){categorys.push(val.categoryId)}),categorys},this.getUniqueIdsFromFirst=function(master,slave){var tempArray=[];return _.each(master,function(val){slave.indexOf(val)==-1&&tempArray.push(val)}),tempArray},this.getAgeBaseTotalPayoutiIncome=function(age){var ageTotalPayoutMapping={25:[34861076.1789974,2324071745.26649],26:[32875310.6466642,2191687376.44428],27:[30984105.3777754,2065607025.18503],28:[29182957.5026433,1945530500.17622],29:[27467578.573946,1831171904.92973],30:[25833884.356139,1722258957.07593],31:[24277985.1010848,1618532340.07232],32:[22796176.2867474,1519745085.78316],33:[21384929.7969023,1425661986.46015],34:[20040885.5208593,1336059034.72396],35:[18760843.3531994,1250722890.21329],36:[17541755.5744756,1169450371.63171],37:[16380719.5947386,1092047972.98258],38:[15274971.0426082,1018331402.84055],39:[14221877.1834364,948125145.562427],40:[13218930.6508918,881262043.392788],41:[12263743.4770398,817582898.469322],42:[11354041.4067046,756936093.780307],43:[10487658.4825758,699177232.171721],44:[9662531.88816744,644168792.544496],45:[8876697.03634994,591779802.423329],46:[8128282.89176185,541885526.117457],47:[7415507.51596366,494367167.730911],48:[6736673.8247273,449111588.315153],49:[6090165.54735933,406011036.490622],50:[5474443.37843746,364962891.895831]},minMaxTotalPayout=ageTotalPayoutMapping[age];return minMaxTotalPayout},this.getTermBaseTotalPayoutSBIOptionA=function(term){var termTotalPayoutMapping={10:[33e5,264e6],11:[36e5,288e6],12:[39e5,312e6],13:[42e5,336e6],14:[45e5,36e7],15:[48e5,384e6],16:[51e5,408e6],17:[54e5,432e6],18:[57e5,456e6],19:[6e6,48e7],20:[63e5,504e6],21:[66e5,528e6],22:[69e5,552e6],23:[72e5,576e6],24:[75e5,6e8],25:[78e5,624e6],26:[81e5,648e6],27:[84e5,672e6],28:[87e5,696e6],29:[9e6,72e7],30:[93e5,744e6],31:[96e5,768e6],32:[99e5,792e6],33:[102e5,816e6],34:[105e5,84e7],35:[108e5,864e6]},minMaxTotalPayout=termTotalPayoutMapping[term];return minMaxTotalPayout},this.getTermBaseTotalPayoutSBIOptionB=function(term){var termTotalPayoutMapping={10:[3705e3,2964e5],11:[4095e3,3276e5],12:[4494e3,35952e4],13:[4902e3,39216e4],14:[5319e3,42552e4],15:[5745e3,4596e5],16:[618e4,4944e5],17:[6624e3,52992e4],18:[7077e3,56616e4],19:[7539e3,60312e4],20:[801e4,6408e5],21:[849e4,6792e5],22:[8979e3,71832e4],23:[9477e3,75816e4],24:[9984e3,79872e4],25:[105e5,84e7],26:[11025e3,882e6],27:[11559e3,92472e4],28:[12102e3,96816e4],29:[12654e3,101232e4],30:[13215e3,10572e5],31:[13785e3,11028e5],32:[14364e3,114912e4],33:[14952e3,119616e4],34:[15549e3,124392e4],35:[16155e3,12924e5]},minMaxTotalPayout=termTotalPayoutMapping[term];return minMaxTotalPayout},this.getTermBaseTotalPayoutSBIOptionC=function(term){var termTotalPayoutMapping={10:[3975e3,318e6],11:[4425e3,354e6],12:[489e4,3912e5],13:[537e4,4296e5],14:[5865e3,4692e5],15:[6375e3,51e7],16:[69e5,552e6],17:[744e4,5952e5],18:[7995e3,6396e5],19:[8565e3,6852e5],20:[915e4,732e6],21:[975e4,78e7],22:[10365e3,8292e5],23:[10995e3,8796e5],24:[1164e4,9312e5],25:[123e5,984e6],26:[12975e3,1038e6],27:[13665e3,10932e5],28:[1437e4,11496e5],29:[1509e4,12072e5],30:[15825e3,1266e6],31:[16575e3,1326e6],32:[1734e4,13872e5],33:[1812e4,14496e5],34:[18915e3,15132e5],35:[19725e3,1578e6]},minMaxTotalPayout=termTotalPayoutMapping[term];return minMaxTotalPayout},this.getTermBaseTotalPayoutSBIOptionD=function(term){var termTotalPayoutMapping={10:[465e4,372e6],11:[525e4,42e7],12:[588e4,4704e5],13:[654e4,5232e5],14:[723e4,5784e5],15:[795e4,636e6],16:[87e5,696e6],17:[948e4,7584e5],18:[1029e4,8232e5],19:[1113e4,8904e5],20:[12e6,96e7],21:[129e5,1032e6],22:[1383e4,11064e5],23:[1479e4,11832e5],24:[1578e4,12624e5],25:[168e5,1344e6],26:[1785e4,1428e6],27:[1893e4,15144e5],28:[2004e4,16032e5],29:[2118e4,16944e5],30:[2235e4,1788e6],31:[2355e4,1884e6],32:[2478e4,19824e5],33:[2604e4,20832e5],34:[2733e4,21864e5],35:[2865e4,2292e6]},minMaxTotalPayout=termTotalPayoutMapping[term];return minMaxTotalPayout},this.getChildAgeBaseTotalPayout=function(childAge){var childAgeTotalPayoutMapping={0:[1432400,2e8],1:[1412e3,2e8],2:[1389200,2e8],3:[1364e3,2e8],4:[1336400,2e8],5:[1306400,2e8],6:[1292e3,2e8],7:[1272800,2e8],8:[1248800,2e8],9:[1234400,2e8],10:[1212800,2e8],11:[1196e3,2e8],12:[1180400,2e8],13:[1152800,2e8],14:[1138400,2e8],15:[1119200,2e8]},minMaxTotalPayout=childAgeTotalPayoutMapping[childAge];return minMaxTotalPayout},this.getChildAgeBaseMonthlyIncome=function(childAge){var childAgeMonthlyIncomeMapping={0:[3700,645769.338173694],1:[3800,672804.532577904],2:[3900,701842.787215664],3:[4e3,733137.829912024],4:[4100,766985.932355582],5:[4200,803735.456215554],6:[4400,851393.188854489],7:[4600,903519.798868636],8:[4800,960922.485586163],9:[5100,1032890.47310434],10:[5400,1113126.64907652],11:[5800,1212374.5819398],12:[6300,1334293.45984412],13:[6800,1474670.36780014],14:[7600,1669009.13562895],15:[8600,1921015.01072194]},minMaxMonthlyIncome=childAgeMonthlyIncomeMapping[childAge];return minMaxMonthlyIncome},this.getAgeBaseTotalPayoutFgLevelIncome=function(age){var ageTotalPayoutMapping={25:[105e5,84e7],26:[102e5,816e6],27:[99e5,792e6],28:[96e5,768e6],29:[93e5,744e6],30:[9e6,72e7],31:[87e5,696e6],32:[84e5,672e6],33:[81e5,648e6],34:[78e5,624e6],35:[75e5,6e8],36:[72e5,576e6],37:[69e5,552e6],38:[66e5,528e6],39:[63e5,504e6],40:[6e6,48e7],41:[57e5,456e6],42:[54e5,432e6],43:[51e5,408e6],44:[672e4,384e6],45:[63e5,36e7],46:[588e4,336e6],47:[546e4,312e6],48:[504e4,288e6],49:[5544e3,264e6],50:[504e4,24e7],51:[504e4,24e7],52:[504e4,24e7],53:[504e4,24e7],54:[504e4,24e7],55:[504e4,24e7]},minMaxTotalPayout=ageTotalPayoutMapping[age];return minMaxTotalPayout},this.termBaseTotalPayoutForRelianceIprotect=function(term){var termTotalPayoutMapping={10:[56e5,64e7],15:[665e4,760000001],20:[7699998,879999815],25:[875e4,1e9],30:[98e5,112e7],35:[1085e4,1240000001]},minMaxTotalPayout=termTotalPayoutMapping[term];return minMaxTotalPayout},this.getAgeBaseTotalPayoutFgIncreasingIncome=function(age){var ageTotalPayoutMapping={25:[2835e4,2268e6],26:[2703e4,21624e5],27:[2574e4,20592e5],28:[2448e4,19584e5],29:[2325e4,186e7],30:[2205e4,1764e6],31:[2088e4,16704e5],32:[1974e4,15792e5],33:[1863e4,14904e5],34:[1755e4,1404e6],35:[165e5,132e7],36:[1548e4,12384e5],37:[1449e4,11592e5],38:[1353e4,10824e5],39:[126e5,1008e6],40:[117e5,936e6],41:[1125e4,9e8],42:[1095e4,876e6],43:[1065e4,852e6],44:[1035e4,828e6],45:[1005e4,804e6],46:[975e4,78e7],47:[945e4,756e6],48:[915e4,32e6],49:[885e4,708e6],50:[855e4,684e6],51:[825e4,66e7],52:[795e4,636e6],53:[765e4,612e6],54:[735e4,588e6],55:[705e4,564e6]},minMaxTotalPayout=ageTotalPayoutMapping[age];return minMaxTotalPayout},this.quotesSelectionTrackingEvent=function(plan,customerInfo,enqId){plan.planName,plan.supplierName+"-"+plan.planName,plan.totalPremiumWithRiders;callGaQuotesSelection(plan,customerInfo.matrixleadId,customerInfo.custId)},this.ifEnteredPolicyTermIsCorrect=function(riderDetails,customerInfo){var riderObj={};return!(riderDetails&&riderDetails.riders&&customerInfo)||((riderObj=_.find(riderDetails.riders,function(val){return 1*val.categoryId===11}))?riderObj.isSelected&&policyTermInRange(customerInfo,40):void 0)},this.addDifferentPayoutRiderPremiums=function(planDetails,riders){var obj={},planId=planDetails.planId||planDetails.Plan_Id;return obj.monthlyPremium=planDetails.monthlyTotalPremium+addRiderPremiumsDiffPayout(riders,"monthly",planId),obj.halfYearlyPremium=planDetails.halfYearlyTotalPremium+addRiderPremiumsDiffPayout(riders,"halfyearly",planId),obj.quarterlyTotalPremium=planDetails.quarterlyTotalPremium+addRiderPremiumsDiffPayout(riders,"quarterly",planId),obj.totalPremium=planDetails.basicPremium+addRiderPremiumsDiffPayout(riders,"yearly",planId),obj},this.ETSecurePlans=function(planId){return 1*planId===790||1*planId===791||1*planId===792||1*planId===794||1*planId===795},this.checkSelectedRiders=function(riders){var isSelected=!1;if(riders&&riders.riders){var obj=_.find(riders.riders,function(val){return val.isSelected});null!==obj&&obj&&(isSelected=!0)}return isSelected},this.prePayment=function(planData,custData,isMonthly,payOptionType){var deferred=$q.defer(),postData=populatePrePaymentData(planData,custData,isMonthly);return CommonServiceTerm.prePaymentApi(postData).success(function(res){var dataToPost=JSON.stringify(paymentInitiateObject(res.data,planData,payOptionType,custData));CommonServiceTerm.paymentInitiate(dataToPost).success(function(response){if("failed"==response.status)deferred.resolve("error");else{var jForm=CommonServiceTerm.createForm(termConfigObj.getPaymentUrl(),"multipart/form-data");_.each(response,function(value,key){var jInput=CommonServiceTerm.createInputFields(key,value);jForm.append(jInput)}),jForm.appendTo("body").submit(),deferred.resolve(response)}})}),deferred.promise},this.prefillPlanDataForCheckout=function(data,planId,isMonthly,planDetails){var obj=planDetails;if(null!==planDetails&&void 0!==planDetails){var riderPremiums=0;_.each(obj.riderDetails,function(val){riderPremiums+=val.riderPremium,obj.isAnyRiderSelected=!0}),obj.showPremium=obj.planPremium+riderPremiums}return obj},this.prefillCancerPlanDataForCheckout=function(plans,planId,isMonthly){var planDetails={},obj={};return planDetails=_.find(plans,function(plan){return 1*plan.cancerPlanDetails[0].planId===1*planId}),null!==planDetails&&void 0!==planDetails&&(obj=angular.copy(planDetails.cancerPlanDetails[0]),obj.riderDetails={},obj.totalMonthlyPremiumWithRiders=obj.monthlyPremium,obj.totalHalfYearlyPremiumWithRiders=obj.halfYearlyPremium,obj.totalQuarterlyTotalPremiumWithRiders=obj.quarterlyPremium,obj.totalPremiumWithRiders=obj.premium,obj.supplierId=obj.Supplier_Id,obj.showPremium=isMonthly?obj.totalMonthlyPremiumWithRiders:obj.totalPremiumWithRiders),obj},this.isAllRidersAvailable=function(riders){var isAvailable=!1;if(void 0!==riders){var obj=_.find(riders,function(val){return(val.riderPremium>0||val.errorMessage.length>0)&&!val.isHidden});isAvailable=null!==obj&&void 0!==obj}return isAvailable},this.submitAnnualIncome=function(annualIncome){CommonServiceTerm.saveAnnualIncome(annualIncome)},this.checkIfPlanHasSpouseAndDOBisrequired=function(customerInfo,planDetails,riders){if(1*planDetails.supplierId===31){var obj=_.find(riders,function(rider){return 1*rider.categoryId===13&&rider.isSelected});return void 0!==obj&&null!==obj}return!1},this.recalculateTotalPayoutAccToAI=function(customerInfo,maxPayout){var max=maxPayout,age=CommonServiceTerm.getAge(customerInfo.dob),annualIncome=CommonServiceTerm.removeCommas(customerInfo.annualIncome);return age>=18&&age<=35?max=25*annualIncome:age>=36&&age<=40?max=20*annualIncome:age>=41&&age<=45?max=15*annualIncome:age>=46&&age<=50?max=12*annualIncome:age>=51&&age<=55?max=10*annualIncome:age>=56&&age<=60?max=10*annualIncome:age>60&&(max=7*annualIncome),max=max>2e8?2e8:max},this.detectTotalPayoutError=function(customerInfo,supplierId){if(1*supplierId==31){var totalPayout=CommonServiceTerm.removeCommas(customerInfo.totalPayout);return!(totalPayout<=$rootScope.amountBoundry.totalPayout.max&&totalPayout>=$rootScope.amountBoundry.totalPayout.min)}return!1}}function ProductService($rootScope,$cookies,CommonServicePreQuotesTerm,ServerUtilityService,CommonServiceTerm,$q,$filter,$location,$routeParams){function getCancerInputData(inputData,payout,planId,planDetails,isMulti,type,isEncrypted){var inputObj={};return inputObj.registerCustomer={},inputObj.registerCustomer.visitId=inputData.visitId,inputObj.registerCustomer.custId=inputData.custId,inputObj.registerCustomer.age=CommonServiceTerm.getAge(inputData.dob),inputObj.registerCustomer.dob=inputData.dob,inputObj.registerCustomer.annualIncome=1*inputData.annualIncome,inputObj.registerCustomer.totalPayout=CommonServiceTerm.removeCommas(inputData.totalPayout),inputObj.registerCustomer.tobacco=inputData.isTobacco,inputObj.registerCustomer.policyTerm=inputData.coverageUpto,inputObj.registerCustomer.enquiryId=CommonServiceTerm.getEnquiryId(),inputObj.registerCustomer.mobileNo=inputData.mobileNo,inputObj.registerCustomer.encryptedMobileNo=inputData.encryptedMobileNo,inputObj.registerCustomer.countryId=inputData.countryCode,inputObj.registerCustomer.name=inputData.fullName,inputObj.registerCustomer.email=inputData.emailId,inputObj.registerCustomer.cityId=inputData.city.id,inputObj.registerCustomer.stateId=inputData.city.stateId,inputObj.registerCustomer.gender=inputData.gender,inputObj.registerCustomer.utmSource="",inputObj.registerCustomer.utmTerm="",inputObj.registerCustomer.utmMedium="",inputObj.registerCustomer.utmCampaign="",inputObj.registerCustomer.premium=0,inputObj.registerCustomer.subProductTypeId=2,inputObj.registerCustomer.otherCountryCode=inputData.otherCountryCode,inputObj.registerCustomer.leadSource="PB",inputObj.registerCustomer.landingPageName="CancerProductPage",inputObj.registerCustomer.tabName=getTabName(),inputObj.registerCustomer.productId=CommonServiceTerm.getCancerCareProductId(),inputObj.tabName=getTabName(),inputObj.registerCustomer.planId=planDetails.planId||planId,inputObj.registerCustomer.paymentTerm=inputData.coverageUpto-CommonServiceTerm.getAge(inputData.dob),inputObj.isMulti=isMulti,inputObj.fakePlanId=planDetails.fakePlanId,inputObj.isEncrypted=isEncrypted,1*type.payOptionType===2&&(inputObj.payOptionType="SinglePay",inputObj.ppt=type.ppt),inputData.hasOwnProperty("cancerPayout")&&(inputObj.cancerPayout=parseInt(CommonServiceTerm.removeCommas(inputData.cancerPayout))),inputData.hasOwnProperty("heartPayout")&&(inputObj.heartPayout=parseInt(CommonServiceTerm.removeCommas(inputData.heartPayout)),inputObj.registerCustomer.totalPayout=inputObj.cancerPayout+inputObj.heartPayout),inputObj}function getInputData(inputData,payout,planId,planDetails,isMulti,type,basePlan,isEncrypted){var inputObj={},isMobileDefault=!!$location.$$search.isMobileDefault;return isMobileDefault&&$location.search("isMobileDefault",null).replace(),inputObj.registerCustomer={},inputObj.registerCustomer.visitId=inputData.visitId,inputObj.registerCustomer.annualIncome=1*inputData.annualIncome,inputObj.registerCustomer.custId=inputData.custId,inputObj.registerCustomer.age=CommonServiceTerm.getAge(inputData.dob),inputObj.registerCustomer.dob=inputData.dob,"total"===payout?inputObj.registerCustomer.totalPayout=CommonServiceTerm.removeCommas(inputData.totalPayout):"oneTime"===payout?inputObj.registerCustomer.oneTimePayout=CommonServiceTerm.removeCommas(inputData.oneTimePayout):"monthly"===payout?inputObj.registerCustomer.monthlyIncome=CommonServiceTerm.removeCommas(inputData.monthlyPayout):"sumAssured"===payout?inputObj.registerCustomer.sumAssured=CommonServiceTerm.removeCommas(inputData.sumAssured):planDetails.monthlyIncome>0?(inputObj.registerCustomer.monthlyIncome=CommonServiceTerm.removeCommas(inputData.monthlyPayout),inputObj.registerCustomer.totalPayout=CommonServiceTerm.removeCommas(inputData.totalPayout)):inputObj.registerCustomer.totalPayout=CommonServiceTerm.removeCommas(inputData.totalPayout),planDetails.isIncomeOptionPlan&&(inputObj.registerCustomer.oneTimePayout=inputObj.registerCustomer.oneTimePayout||CommonServiceTerm.removeCommas(inputData.oneTimePayout),inputObj.registerCustomer.monthlyIncome=inputObj.registerCustomer.monthlyIncome||CommonServiceTerm.removeCommas(inputData.monthlyPayout)),inputObj.registerCustomer.tobacco=inputData.isTobacco,inputObj.registerCustomer.policyTerm=inputData.coverageUpto,inputObj.registerCustomer.enquiryId=CommonServiceTerm.getEnquiryId(),inputObj.registerCustomer.mobileNo=inputData.mobileNo,inputObj.registerCustomer.encryptedMobileNo=inputData.encryptedMobileNo,inputObj.registerCustomer.countryId=inputData.countryCode,inputObj.registerCustomer.name=inputData.fullName,inputObj.registerCustomer.email=inputData.emailId,inputObj.registerCustomer.cityId=inputData.city.id?inputData.city.id:9999,inputObj.registerCustomer.stateId=inputData.city.stateId?inputData.city.stateId:99,inputObj.registerCustomer.gender=inputData.gender,inputObj.registerCustomer.utmSource="",inputObj.registerCustomer.utmTerm="",inputObj.registerCustomer.utmMedium="",inputObj.registerCustomer.utmCampaign="",inputObj.registerCustomer.premium=0,inputObj.registerCustomer.subProductTypeId=2,inputObj.registerCustomer.otherCountryCode=inputData.otherCountryCode,inputObj.registerCustomer.leadSource="PB",inputObj.registerCustomer.isNRI=inputData.isNri,inputObj.registerCustomer.landingPageName="ProductPage",inputObj.registerCustomer.tabName="monthly"===payout?"monthlyPlans":$location.$$search.tabName||$cookies.get("pTabName")||"oneTimePlans",inputObj.tabName="monthly"===payout?"monthlyPlans":$location.$$search.tabName||$cookies.get("pTabName")||"oneTimePlans",inputObj.payOptionType=1*type.payOptionType===2?"SinglePay":1*type.payOptionType===3?"LimitedPay":null,inputObj.ppt=1*type.payOptionType===2?1:1*type.payOptionType===3?type.ppt:null,inputObj.isEncrypted=isEncrypted,inputObj.registerCustomer.planId=basePlan||planDetails.planId||planId,inputObj.registerCustomer.paymentTerm=inputData.coverageUpto-CommonServiceTerm.getAge(inputData.dob),inputObj.isMulti=isMulti,inputObj.incomeTerm=inputData.incomeTerm,inputObj.increasingIncomePercentage=inputData.increasingIncomePercentage,inputObj.lumpsumBenefitPercentage=inputData.lumpsumBenefitPercentage,inputObj.variantPlanId=CommonServiceTerm.getVariantPlanId(planDetails.planId,planDetails.variantPlanId),inputObj.registerCustomer.isDefaultCityChange=!!isMobileDefault,1*planDetails.supplierId!==21&&1*planDetails.supplierId!==141||planDetails.totalPayoutTermOptions&&inputData.totalPayOutTerm&&(inputObj.totalPayOutTerm=1*inputData.totalPayOutTerm),1*planDetails.supplierId===9&&1*type.payOptionType===3&&inputObj.registerCustomer.age<=35?(inputObj.ppt=35,inputObj.registerCustomer.paymentTerm=inputData.coverageUpto-inputObj.ppt):1*planDetails.supplierId===9&&1*type.payOptionType===3&&inputObj.registerCustomer.age>35&&(1*inputData.coverageUpto<75&&(inputData.coverageUpto=75),inputObj.registerCustomer.paymentTerm=inputData.coverageUpto-inputObj.registerCustomer.age,inputObj.ppt=inputData.coverageUpto-inputObj.registerCustomer.age-5,inputObj.registerCustomer.policyTerm=inputData.coverageUpto),inputObj}function populateOtherRiders(planList,planInfo){}function getRiderInputData(riderData,rider,planInfo,customerInfo,planList,isMulti,basePlan,modifySelection,type){var riderObj={};riderObj.riderParams={},riderObj.riderParams.otherPlans=[],riderObj.riderParams.otherPlans=populateOtherRiders(planList,planInfo),riderObj.riderParams.sumAssuredRiderMapping=[],riderObj.riderParams.types=[],riderObj.riderParams.riderIds=[],riderObj.riderParams.selectedRiderIds=[],riderObj.riderParams.enquiryId=CommonServiceTerm.getEnquiryId(),riderObj.riderParams.planId=basePlan||planInfo.planId,riderObj.riderParams.basePremium=planInfo.basicPremium,riderObj.riderParams.sumAssured=CommonServiceTerm.removeCommas(planInfo.sumAssured),1*planInfo.supplierId===116&&1*type.payOptionType===3?riderObj.riderParams.ppt=planInfo.policyTerm:riderObj.riderParams.ppt=rider.policyTermSelected>-1?rider.policyTermSelected:rider.policyTermDetails.maxPolicyTerm,riderObj.riderParams.term=rider.policyTermSelected>-1?rider.policyTermSelected:rider.policyTermDetails.maxPolicyTerm;var selectedType=rider.typeSelected||"";return riderObj.riderParams.adbPremium=0,riderObj.riderParams.atpdPremium=0,riderObj.riderParams.wciPremium=0,riderObj.riderParams.name="",riderObj.riderParams.spouseAge=modifySelection&&modifySelection.spouse?modifySelection.spouse.age:"",riderObj.tabName=$location.$$search.tabName||$cookies.get("pTabName")||"oneTimePlans",riderObj.payOptionType=1*type.payOptionType===2?"SinglePay":1*type.payOptionType===3?"LimitedPay":null,riderObj.ppt=1*type.payOptionType===2?1:1*type.payOptionType===3?planInfo.ppt:null,riderObj.isNRI=customerInfo.isNri,riderObj.isMulti=isMulti,_.each(riderData.riders,function(val){if(val.isSelected&&(riderObj.riderParams.sumAssuredPercentage=1*val.sumAssuredPercentage,1*val.categoryId===10&&(riderObj.riderParams.adbPremium=val.riderPremium),1*val.categoryId===11&&1*customerInfo.gender===2&&(riderObj.riderParams.wciPremium=val.riderPremium),1*val.categoryId===12&&(riderObj.riderParams.atpdPremium=val.riderPremium),riderObj.riderParams.selectedRiderIds.push(val.riderId)),1*val.categoryId!==14&&1*val.categoryId!==17&&1*val.categoryId!==18||(selectedType=""!==selectedType?selectedType:val.typeSelected,riderObj.riderParams.types.push(selectedType)),1*planInfo.supplierId!==1124||1*val.riderId!==0&&1*val.categoryId!=96){var obj={};riderObj.riderParams.riderIds.push(val.riderId),obj.riderId=val.riderId;var sumAssured=parseInt(CommonServiceTerm.removeCommas(val.sumAssuredSelected));obj.sumAssured=sumAssured>-1?sumAssured:planInfo.sumAssured,obj.categoryId=val.categoryId,1*planInfo.supplierId===116&&1*type.payOptionType===3?obj.term=planInfo.policyTerm:obj.term=val.policyTermSelected>-1?val.policyTermSelected:val.policyTermDetails.maxPolicyTerm,riderObj.riderParams.sumAssuredRiderMapping.push(obj)}}),riderObj.riderParams.gender=customerInfo.gender,riderObj.riderParams.tobacco=customerInfo.isTobacco,riderObj.riderParams.age=CommonServiceTerm.getAge(customerInfo.dob),riderObj.riderParams.supplierTag=planInfo.e2ESupplier,riderObj.riderParams.isFirstTimeCall=!1,riderObj.riderParams.oneTimePayout=CommonServiceTerm.removeCommas(customerInfo.oneTimePayout),riderObj.riderParams.monthlyIncome=CommonServiceTerm.removeCommas(customerInfo.monthlyPayout),riderObj.incomeTerm=customerInfo.incomeTerm,riderObj.increasingIncomePercentage=customerInfo.increasingIncomePercentage,customerInfo.increasingIncomePercentage>0&&(riderObj.variantPlanId=CommonServiceTerm.getVariantPlanId(planInfo.planId,planInfo.variantPlanId)),customerInfo.lumpsumBenefitPercentage>0&&(riderObj.lumpsumBenefitPercentage=customerInfo.lumpsumBenefitPercentage),riderObj.riderParams.stateId=customerInfo.city.stateId,customerInfo.annualIncome&&(riderObj.annualIncome=parseInt(CommonServiceTerm.removeCommas(customerInfo.annualIncome))),riderObj.riderParams.type=riderObj.riderParams.types[0],riderObj}function getTabName(){return $rootScope.cancerJourney?1*$cookies.get("pTabName")===1?"C":1*$cookies.get("pTabName")===2?"H":1*$cookies.get("pTabName")===3?"CH":"C":$cookies.get("pTabName")||"oneTimePlans"}var self=this,productApiUpdateUrl="/api/productInfo/update",cancerProductApiUpdateUrl="/api/cancer/productInfo/update",getProductDetailsUrl="/api/productInfo",biDownloadUrl=termConfigObj.getBiDownloadUrl(),alreadyPaidUrl="/api/premium/payment/",additionalQa="/api/redirect/personalInfo/",getCancerProductDetailsUrl="/api/cancer/productInfo",lifeStyleAnswersUrl="/api/cancer/product/lifestyle";productCheckoutDetailsUrl="/api/checkout/page/",saveQuoteSelectionUrl="/api/quoteselection",this.saveQuoteSelection=function(input){return input.supplierId=CommonServiceTerm.getRealSupplierId(input.supplierId),ServerUtilityService.postWebService(saveQuoteSelectionUrl,input).success(function(data,status,headers,config){return data}).error(function(data,status,headers,config){return data})},this.updateProductInfoData=function(inputData,payout,planId,planDetails,isMulti,type,basePlan,isEncrypted){var url="",input={};return $rootScope.cancerJourney?(url=cancerProductApiUpdateUrl,input=getCancerInputData(inputData,payout,planId,planDetails,isMulti,type,isEncrypted)):(url=productApiUpdateUrl,input=getInputData(inputData,payout,planId,planDetails,isMulti,type,basePlan,isEncrypted)),ServerUtilityService.postWebService(url,input).success(function(data,status,headers,config){}).error(function(data,status,headers,config){return data})},this.updateProductRiderInfoData=function(riderData,rider,planInfo,customerInfo,planList,isMulti,basePlan,modifySelection,type){var url=productApiUpdateUrl,input=getRiderInputData(riderData,rider,planInfo,customerInfo,planList,isMulti,basePlan,modifySelection,type);return ServerUtilityService.postWebService(url,input).success(function(data,status,headers,config){}).error(function(data,status,headers,config){return data})},this.getCustomerData=function(planId,enquiryId,isMulti,type,totalPayout,incomeTerm,increasingIncomePercentage,monthlyIncome,oneTimePayout,variantPlanId,isEncrypted){var lumpsumBenefitPercentage,url="";CommonServiceTerm.isExideTropPlan(planId)&&(lumpsumBenefitPercentage=termConfigObj.getlumpsumBenefitPercentage(planId));var planId=$routeParams.planId?$routeParams.planId:planId,enquiryId=$routeParams.enquiryId?$routeParams.enquiryId:enquiryId,tabName=$routeParams.tabName?$routeParams.tabName:$location.$$search.tabName||getTabName();if(url=$rootScope.cancerJourney?getCancerProductDetailsUrl+"/"+planId:getProductDetailsUrl+"/"+planId,angular.isUndefined(enquiryId)||null===enquiryId||(url=url+"/?enquiryId="+enquiryId+"&tabName="+tabName+"&isMulti="+isMulti+"&isEncrypted="+isEncrypted),cancerPayout&&heartPayout){var individualPayouts=CommonServiceTerm.calculateCancerHeartPayouts(totalPayout),heartPayout=individualPayouts.heartPayout,cancerPayout=individualPayouts.cancerPayout;url=url+"&cancerPayout="+cancerPayout+"&heartPayout="+heartPayout}return("updateNotCalled"===CommonServiceTerm.getUpdateCalled()||isMulti)&&(url=url+"&isAlreadyExist="+!1),$rootScope.cancerJourney&&$cookies.get("fakePlanId")&&(url=url+"&fakePlanId="+$cookies.get("fakePlanId")),$rootScope.cancerJourney?type.payOptionType&&(1*type.payOptionType===2?url+="&payOptionType=SinglePay&ppt=1":url=url):type.payOptionType&&(1*type.payOptionType===3?url=url+"&payOptionType=LimitedPay&ppt="+type.ppt:1*type.payOptionType===2?url+="&payOptionType=SinglePay&ppt=1":url=url),incomeTerm=angular.isUndefined(incomeTerm)?20:incomeTerm,increasingIncomePercentage=angular.isUndefined(increasingIncomePercentage)?0:increasingIncomePercentage,url=url+"&incomeTerm="+incomeTerm+"&increasingIncomePercentage="+increasingIncomePercentage,angular.isUndefined(monthlyIncome)||(url=url+"&monthlyIncome="+monthlyIncome),angular.isUndefined(oneTimePayout)||(url=url+"&oneTimePayout="+oneTimePayout),angular.isUndefined(variantPlanId)||(url=url+"&variantPlanId="+variantPlanId),lumpsumBenefitPercentage&&(url=url+"&lumpsumBenefitPercentage="+lumpsumBenefitPercentage),ServerUtilityService.getWebService(url).success(function(data,status,headers,config){}).error(function(data,status,headers,config){return data})},this.prefillData=function(planId,enquiryId,isMulti,type,totalPayout,incomeTerm,increasingIncomePercentage,monthlyIncome,oneTimePayout,variantPlanId,isEncrypted){var deferred=$q.defer(),emptyData={};return void 0!==planId?self.getCustomerData(planId,enquiryId,!1,type,totalPayout,incomeTerm,increasingIncomePercentage,monthlyIncome,oneTimePayout,variantPlanId,isEncrypted).success(function(data){deferred.resolve(data)}):deferred.resolve(emptyData),deferred.promise},this.prefillCheckoutDetails=function(planId,enquiryId){var url=productCheckoutDetailsUrl+enquiryId+"?planId="+planId;return ServerUtilityService.getWebService(url).success(function(data,status,headers,config){}).error(function(data,status,headers,config){return data})},this.addLifeStageProtectionRider=function(riderDetails){var jointLifeRiderIndex,lifeStageProtectionRider={monthlyRiderPremium:0,description:"With Life stage protection you get the option to enhance your Coverage amount & No medical examination would be required.",groupTwoTerm:"",policyTermSelected:37,group1RiderPremium:"0",policyTermDetails:{minPolicyTerm:"-1",maxPolicyTerm:"37",isPolicyTermPresent:!1,policyTermValues:[],policyTermInterval:"-1"},isRider:!0,supportedRiderPremiumSA:0,riderId:92,group2RiderPremium:"",isSelected:!1,groupOneTerm:"0",riderType:[],riderPremium:0,supportedRiderPremium:0,defaultSelection:!1,errorMessage:"",brochureLink:"",riderName:"Life Stage Protection",sumAssuredDetails:{group1SumAssured:"",isSumAssuredPresent:!1,sumAssuredInterval:1e3,maxSumAssured:"-1",minSumAssured:"-1",wopSumAssured:"",group2SumAssured:""},isHidden:!1,isRiderDisabled:!1,quarterlyRiderPremium:0,halfYearlyRiderPremium:0,sumAssuredSelected:5e5,categoryId:96};return void 0!==riderDetails&&(_.each(riderDetails.riders,function(val,index){13==val.categoryId&&(jointLifeRiderIndex=index,lifeStageProtectionRider.isHidden=val.isSelected)}),riderDetails.riders.splice(jointLifeRiderIndex+1,0,lifeStageProtectionRider)),riderDetails},this.hideRidersForPnb=function(riders,planDetails,customerInfo){return _.each(riders,function(rider){var categoryId=1*rider.categoryId;switch(categoryId){case 13:customerInfo.age+planDetails.policyTerm>75&&(rider.isSelected=!1,rider.isHidden=!0);break;case 96:(planDetails.policyTerm>40||planDetails.policyTerm<10||customerInfo.age+planDetails.policyTerm>75)&&(rider.isSelected=!1,rider.isHidden=!0,rider.isRiderDisabled=!0);break;default:rider.isSelected=rider.isSelected,rider.isHidden=rider.isHidden}}),riders},this.populateRiderDetails=function(riderDetails,policyTerm){return void 0!==riderDetails&&_.each(riderDetails.riders,function(val,index){if(void 0!==val.sumAssuredDetails&&(val.sumAssuredDetails.errorMessage="",val.sumAssuredDetails.isError=!1,val.sumAssuredSelected=$filter("addCommas")(val.sumAssuredSelected),val.sumAssuredDetails.isSumAssuredPresent=void 0!==val.sumAssuredDetails.isSumAssuredPresent&&"true"===val.sumAssuredDetails.isSumAssuredPresent),void 0!==val.policyTermDetails&&(val.policyTermDetails.isPolicyTermPresent=void 0!==val.policyTermDetails.isPolicyTermPresent&&"true"===val.policyTermDetails.isPolicyTermPresent),val.policyTermList=[],val.policyTermDetails&&(val.policyTermDetails.minPolicyTerm>-1||val.policyTermDetails.policyTermValues.length>0))val.policyTermList=CommonServicePreQuotesTerm.populatePolicyTermList(1*val.policyTermDetails.minPolicyTerm,1*val.policyTermDetails.maxPolicyTerm,1*val.policyTermDetails.policyTermInterval,val.policyTermDetails.policyTermValues),val.selectedPolicyTerm=val.policyTermSelected>-1?val.policyTermSelected:val.policyTermList[0];else{var polTerm=val.selectedPolicyTerm>-1?val.selectedPolicyTerm:policyTerm;val.policyTermList.push(polTerm),val.selectedPolicyTerm=val.policyTermSelected>-1?val.policyTermSelected:polTerm;
}}),riderDetails},this.validateRiders=function(riders,riderErrorMsg){var isError=!1;return _.each(riders,function(val){isError=isError||val.sumAssuredDetails.isError||val.errorMessage.length>0||angular.isDefined(val.newErrorMessage)&&val.newErrorMessage.length>0&&val.isSelected||angular.isDefined(riderErrorMsg)&&riderErrorMsg.length>0}),isError},this.getIncomePlusOptionPlans=function(planArray){return _.filter(planArray,function(plan){return plan.isIncomeOptionPlan})},this.getNonIncomePlusOptionPlans=function(planArray){return _.filter(planArray,function(plan){return!plan.isIncomeOptionPlan})},this.sortPlanArrayByOrder=function(planArray){var planArray=_.sortBy(planArray,function(plan){return plan.planOrder});return planArray},this.validateCustomerDetails=function(customerInfo,errorObject){var isError=!1;return _.each(errorObject,function(val,key){isError=isError||val}),!!isError||(isError=isError||CommonServiceTerm.isUndefinedOrNullOrEmpty(customerInfo.gender),isError=isError||CommonServiceTerm.isUndefinedOrNullOrEmpty(customerInfo.otherCountryCode),isError=isError||CommonServiceTerm.isUndefinedOrNullOrEmpty(customerInfo.city.id)&&CommonServiceTerm.isUndefinedOrNullOrEmpty(customerInfo.city.name),isError=isError||CommonServiceTerm.isUndefinedOrNullOrEmpty(customerInfo.fullName),isError=isError||CommonServiceTerm.isUndefinedOrNullOrEmpty(customerInfo.mobileNo))},this.getBiDownloadUrl=function(enquiryId,planId){var url=biDownloadUrl+planId+"?enquiryId="+enquiryId;return ServerUtilityService.getWebService(url).success(function(data,status,headers,config){return data}).error(function(data,status,headers,config){return data})},this.getAdditionalQA=function(enquiryId){var url=additionalQa+enquiryId;return ServerUtilityService.getWebService(url).success(function(data,status,headers,config){return data}).error(function(data,status,headers,config){return data})},this.isAlreadyPaid=function(enquiryId){var url=alreadyPaidUrl+enquiryId;return ServerUtilityService.getWebService(url).success(function(data,status,headers,config){return data}).error(function(data,status,headers,config){return data})},this.getLifeStyleAnswers=function(enquiryId,planId){var url=lifeStyleAnswersUrl+"?enquiryId="+enquiryId+"&planId="+planId;return ServerUtilityService.getWebService(url).success(function(data,status,headers,config){return data}).error(function(data,status,headers,config){return data})},this.saveLifeStlyeAnswers=function(questionObj){self.lifeStyleDetails=questionObj},this.getLifeStlyeAnswers=function(){return self.lifeStyleDetails},this.validateLifeStyleAnswers=function(errorObject){var lifeStyleDetails=self.lifeStyleDetails||{},errorObject=errorObject||{};return errorObject.weightError=void 0==lifeStyleDetails.weight||0==lifeStyleDetails.weight,errorObject.tobaccoError=1==lifeStyleDetails.smoker&&!lifeStyleDetails.smokerCigaretteCount&&!lifeStyleDetails.smokerTobaccoItemCount,errorObject.alcoholError=!(1!=lifeStyleDetails.drinker||lifeStyleDetails.drinkerSpiritCount||lifeStyleDetails.drinkerWineCount||lifeStyleDetails.drinkerBeerCount),errorObject}}CheckoutController.$inject=["$scope","$rootScope","CommonServicePreQuotes","$timeout","CommonServiceTerm","$filter","$localStorage","$cookies","$location","ProductService","$http","$cookieStore","$window"],ProductAdditionalInfoController.$inject=["$scope","$rootScope","CommonServicePreQuotes","CommonServiceTerm","$cookies","$document"],ProductCancerCoverDetailsController.$inject=["$scope","$rootScope","CommonServicePreQuotes","CommonServiceTerm"],ProductCancerIndexController.$inject=["$scope","$rootScope","$filter","CommonServicePreQuotes","ProductService","$routeParams","CommonServiceTerm","$localStorage","$timeout","$cookies","$q","$window","$document","$location","GenericService","QuotesService","CustomerService"],ProductCoverDetailsController.$inject=["$scope","$rootScope","CommonServicePreQuotes","CommonServiceTerm","GenericService","$filter"],ProductIndexController.$inject=["$scope","$rootScope","$filter","CommonServicePreQuotes","ProductService","$routeParams","CommonServiceTerm","$localStorage","$timeout","$cookies","$q","$window","$document","$location","GenericService","$mdDialog","CustomerService"],ProductLifeStyleDetailsController.$inject=["$scope","$rootScope","CommonServicePreQuotes","CommonServiceTerm","ProductService"],ProductPersonalDetailsController.$inject=["$scope","$rootScope","CommonServicePreQuotes","CommonServiceTerm","$q","$timeout","$location"],ProductRidersController.$inject=["$scope","$rootScope","CommonServicePreQuotes","$timeout","CommonServiceTerm","$filter","$localStorage","$cookies","GenericService"],ProductSpouseController.$inject=["$scope","$rootScope","CommonServicePreQuotes","CommonServiceTerm","$cookies","$localStorage"],CommonServicePreQuotesTerm.$inject=["$rootScope","$cookies","$filter","CommonServiceTerm","PlanService","CustomerService","$q","ServerUtilityService","$location","$localStorage"],ProductService.$inject=["$rootScope","$cookies","CommonServicePreQuotes","ServerUtilityService","CommonServiceTerm","$q","$filter","$location","$routeParams"];var productApp=angular.module("app.ProductPage",["ngAnimate","ngCookies","ngSanitize","ngStorage","vAccordion","duScroll","TermCommon","ui.bootstrap","ui.checkbox"]);productApp.value("duScrollOffset",0),Array.prototype.sortByProp=function(p){return this.sort(function(a,b){return a[p]>b[p]?1:a[p]<b[p]?-1:0})},productApp.run(["$rootScope","$location","$cookies","isMobile","isTablet",function($rootScope,$location,$cookies,isMobile,isTablet){$rootScope.isMobileDevice=isMobile||isTablet}]),angular.module("app.ProductPage").controller("ProductIndexController",ProductIndexController),angular.module("app.ProductPage").controller("ProductCoverDetailsController",ProductCoverDetailsController),angular.module("app.ProductPage").controller("ProductCancerIndexController",ProductCancerIndexController),angular.module("app.ProductPage").controller("ProductCancerCoverDetailsController",ProductCancerCoverDetailsController),angular.module("app.ProductPage").controller("ProductPersonalDetailsController",ProductPersonalDetailsController),angular.module("app.ProductPage").controller("ProductAdditionalInfoController",ProductAdditionalInfoController),angular.module("app.ProductPage").controller("ProductSpouseController",ProductSpouseController),angular.module("app.ProductPage").controller("ProductRidersController",ProductRidersController),angular.module("app.ProductPage").controller("ProductLifeStyleDetailsController",ProductLifeStyleDetailsController),angular.module("app.ProductPage").controller("CheckoutController",CheckoutController),angular.module("app.ProductPage").service("CommonServicePreQuotes",CommonServicePreQuotesTerm),angular.module("app.ProductPage").service("ProductService",ProductService);