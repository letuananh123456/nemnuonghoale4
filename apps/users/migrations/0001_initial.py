# Generated by Django 2.2.2 on 2021-02-23 13:02

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('fullname', models.CharField(default=None, max_length=200, null=True)),
                ('images_user', models.TextField(default=None, null=True)),
                ('gender', models.IntegerField(default=0)),
                ('birth_day', models.IntegerField(default=0)),
                ('birth_month', models.IntegerField(default=0)),
                ('birth_year', models.IntegerField(default=0)),
                ('link_info', models.CharField(default=None, max_length=255, null=True)),
                ('code_invite', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('register_ctv', models.BooleanField(default=False)),
                ('loai_hinh_muon_hop_tac', models.IntegerField(default=0)),
                ('dia_chi_tinh_thanh_pho', models.IntegerField(blank=True, null=True)),
                ('dia_chi_quan_huyen', models.IntegerField(blank=True, null=True)),
                ('dia_chi_chi_tiet', models.CharField(default=None, max_length=200, null=True)),
                ('chung_chi_dai_ly', models.BooleanField(default=False)),
                ('so_chung_chi', models.CharField(blank=True, default=None, max_length=200, null=True)),
                ('loai_hinh_bao_hiem_cua_chung_chi', models.IntegerField(default=0)),
                ('is_gui_register', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'User',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='BankAccount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bank_name', models.CharField(max_length=200)),
                ('fullname', models.CharField(max_length=200)),
                ('bank_number', models.CharField(default=None, max_length=225)),
                ('branch', models.CharField(max_length=200)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('ctv', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Tài khoản ngân hàng user ',
                'verbose_name_plural': 'Tài khoản ngân hàng user',
            },
        ),
        migrations.CreateModel(
            name='CountOTP',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip_client', models.CharField(max_length=255)),
                ('count_otp', models.IntegerField(default=0)),
                ('phone_otp', models.CharField(max_length=255)),
                ('create_at', models.TimeField(auto_now_add=True, max_length=255)),
            ],
            options={
                'verbose_name': 'Đếm số lần nhập OTP ',
                'verbose_name_plural': 'Đếm số lần nhập OTP',
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField(blank=True, default='')),
                ('body', models.TextField(blank=True, default='')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'notification',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='OderTutorial',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField(blank=True, default='')),
                ('content', models.TextField(blank=True, default='')),
                ('people_post', models.CharField(blank=True, default='', max_length=255)),
                ('total_view', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='UserNotification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_read', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('notification', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_notifications', to='users.Notification')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'user_notification',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Token',
            fields=[
                ('key', models.CharField(max_length=128, primary_key=True, serialize=False, verbose_name='Key')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tokens', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'db_table': 'token',
            },
        ),
        migrations.CreateModel(
            name='ResetToken',
            fields=[
                ('reset_token', models.CharField(max_length=10, primary_key=True, serialize=False, verbose_name='Reset token')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reset_token', to=settings.AUTH_USER_MODEL, verbose_name='user')),
            ],
            options={
                'db_table': 'reset_token',
            },
        ),
        migrations.CreateModel(
            name='LoginHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField(auto_now_add=True)),
                ('end_date', models.DateField(auto_now=True)),
                ('num_date', models.IntegerField(default=1)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Lịch sử đăng nhập login ',
                'verbose_name_plural': 'Lịch sử đăng nhập login ',
            },
        ),
        migrations.CreateModel(
            name='LenhRutTien',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount_withdraw', models.BigIntegerField(default=0)),
                ('is_da_gui_mana', models.BooleanField(default=False)),
                ('is_da_gui_ctv', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('status', models.IntegerField(default=False)),
                ('bank_account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.BankAccount')),
            ],
            options={
                'verbose_name': 'Đặt lệnh rút tiền',
                'verbose_name_plural': 'Đặt lệnh rút tiền',
            },
        ),
        migrations.CreateModel(
            name='ForgotPassword',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('forgot_pass', models.IntegerField(default=1)),
                ('ngay_thay_doi', models.DateTimeField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Lấy lại mật khẩu',
                'verbose_name_plural': 'Lấy lại mật khẩu',
            },
        ),
        migrations.CreateModel(
            name='ConfirmEmailToken',
            fields=[
                ('token', models.CharField(max_length=128, primary_key=True, serialize=False, verbose_name='token')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='confirm_email_token', to=settings.AUTH_USER_MODEL, verbose_name='user')),
            ],
            options={
                'db_table': 'confirm_email_token',
            },
        ),
    ]
